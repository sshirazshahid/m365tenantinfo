{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Microsoft365DSC? Microsoft365DSC is the most comprehensive and complete solution to have your Microsoft 365 tenant configuration simple and stable. It's an Open-Source initiative hosted on GitHub , led by Microsoft engineers and maintained by the community. Automate Configuration Changes \u00b6 Automate your Change Management processes for your Microsoft 365 environments by maintaining a single declarative configuration file to manage all of your workloads. Take Configuration Snapshots of Existing Microsoft 365 Tenants \u00b6 Microsoft365DSC allows you to take snapshots of the current configuration of any existing Microsoft 365 tenant. Monitor your configuration \u00b6 If something changes in your tenant's configuration, the continous monitoring feature of Microsoft365DSC, will automatically detect a drift and can act upon it, like fixing it, logging the drift or notifying admins via email. Compare the Configurations of Two or More Tenants \u00b6 Compare the configurations of any tenants and generate a report listing all differences between the environments.","title":"Introduction"},{"location":"about/community-resources/","text":"Community Resources \u00b6 This section contains various resources produced by both Microsoft and members of the Microsoft365DSC Community. Blog Articles \u00b6 Using Microsoft365DSC in an Azure Automation Runbook Web page icon Podcasts/Webcasts \u00b6 Microsoft 365 Developer Podcast: Microsoft365DSC News with Nik Charlebois Microsoft 365 Developer Podcast: Configuration as Code and DevOPS for Office 365 with Nik Charlebois O365EH!: Discussions on Microsoft 365 Desired State Configuration with Nik Charlebois RunAsRadio: Microsoft 365 Desired State Configuration with Nik Charlebois Whitepapers \u00b6 Managing Microsoft 365 with Microsoft365DSC and Azure DevOps","title":"Community Resources"},{"location":"about/license/","text":"MIT License Copyright (c) Microsoft Corporation. All rights reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE","title":"License"},{"location":"about/why/","text":"What is Microsoft365DSC - Your Cloud Configuration? \u00b6 Microsoft365DSC is an Open-Source initiative hosted on GitHub , lead by Microsoft engineers and maintained by the community. It allows you to write a definition for how your Microsoft 365 tenant should be configured, automate the deployment of that configuration, and ensures the monitoring of the defined configuration, notifying and acting on detected configuration drifts. It also allows you to extract a full-fidelity configuration out of any existing Microsoft 365 tenant. The tool covers all major Microsoft 365 workloads such as Exchange Online, Teams, Power Platforms, SharePoint and Security and Compliance.","title":"Why Microsoft365DSC"},{"location":"blog/october-2022-major-release/","text":"Microsoft365DSC \u2013 October 2022 Major Release (version 1.22.1005.1) \u00b6 As defined by our Breaking Changes Policy , twice a year we allow for breaking changes to be deployed as part of a release. Next week\u2019s release, scheduled to go out on October 5th 2022, will include several breaking changes and will be labeled version 1.22.1005.1. This article provides details on the breaking changes that will be included as part of our October 2022 Major release. Application Secret is Changing Type \u00b6 All resources that support the ApplicationSecret authentication parameter will be updated so that the parameter becomes of type PSCredential instead of String. Currently, the ApplicationSecret parameter is being treated as a normal text string across all resources that implement it (e.g., AAD, EXO, Intune, SPO, etc.). When Desired State Configuration (DSC) is compiled as a Managed Object Format (MOF) file, string parameters are stored as plaintext, which introduces security risks where anyone who gets their hands on such a MOF file, could retrieve the ApplicationSecret of a given Application Registration and authenticate against the tenant. By changing its parameter type to PSCredential, we ensure that the parameter will get encrypted in the MOF file (when a certificate is used), which prevents malicious users from getting their hands on the plaintext secret. We have modified the export logic across all M365DSC resources so that it properly handles the extraction of the Application Secret parameter. It will now extract it as an inline PSCredential object and will default the username component to \"ApplicationSecret\". Note: the username component can be set to any value, only the SecureString Password piece will be used to authenticate. When doing an export of a tenant's configuration using ApplicationSecret authentication, M365DSC will continue to pull the secret's value from the associated ConfigurationData.psd1 file, but will automatically convert it to a PSCredential object within the configuration. In order to update your existing configuration files to leverage this new, more secure version of Microsoft365DSC, you simply have to do a find and replace all instances of the ApplicationSecret within your file to use this new definition. Before version 1.22.1005.1: ApplicationSecret = $ConfigurationData.NonNodeData.ApplicationSecret; Starting with version 1.22.1005.1: ApplicationSecret = New-Object System.Management.Automation.PSCredential ('ApplicationSecret', (ConvertTo-SecureString $ConfigurationData.NonNodeData.ApplicationSecret -AsPlainText -Force)); O365User is now AADUser \u00b6 The O365User resource was one of the very first resource to be released as part of Microsoft365DSC back in 2018, back when the scope of the project didn't include Azure Active Directory. To avoid confusion moving forward, we are renaming the O365User resource to AADUser. On top of this, we are also introducing support for AAD role assignment to the resource. Users can update their current configurations by simply replacing all instances of the word O365User to AADUser in their existing configurations Removing Deprecated Parameters from EXOATPPolicyForO365 \u00b6 For the past few releases, the following properties of the EXOATPPolicyForO365 resource have been marked as deprecated: AllowClickThrough BlockURLs EnableSafeLinksForO365Clients TrackClicks As part of the 1.22.1005.1 release this parameter have been removed from the resource. To update existing configurations, simply search for these parameters and remove them from your desired state configuration files. IntuneDeviceConfigurationPolicyiOS get a new MediaContentRating type \u00b6 We've updated the IntuneDeviceConfigurationPolicyiOS resource's MediaContentRating locale parameters to now be of type CIMInstance instead of String. This allows you to specify Move and TV ratings independently of one another. Updating existing configurations that leveraged the string based properties will require you to rewrite the properties values following the format shown in the screen capture above. SCSensitivityLabel - Renaming the Settings Parameter to LabelSettings \u00b6 Settings is a reserved keyword in PowerShell and is causing issues when trying to generate reports if present. We are renaming this parameter to LabelSettings to ensure it doesn't get threated as a reserved keyword by the reporting and assessments engine. In order to update your existing configurations, simply rename the Settings property to LabelSettings in each instance of the SCSensitivityLabel resource.","title":"October 2022 - Major Release"},{"location":"concepts/breaking-changes/","text":"Breaking Changes Policy \u00b6 Microsoft 365 is under constant development, which means that functionalities are being added, deprecated or removed all the time. Microsoft365DSC has to adapt to these changes and at the same time make sure existing users and configurations are impacted as little as possible. That is why starting in 2021, we are adopting a formal process to handle breaking changes. The goal of this process is to provide a clear schedule, so that users of Microsoft365DSC are aware of any impact, any required actions and prepare themselves well in advance. What are Breaking Changes? \u00b6 In the cases where a new resource is added, a resource gets a new optional parameter or a parameter that used to be mandatory becomes optional, existing configurations are not impacted. But when a resource or parameter is removed or an optional parameter becomes mandatory, existing configurations can stop functioning, because they are using these removed components. That is what is called a \u201cBreaking Change\u201d: A change that can break existing configurations and therefore impact the administration process of Microsoft 365. Release process \u00b6 Microsoft365DSC relies on multiple other modules for connecting to Microsoft 365, which all can release updates at any time. If a change in any of these modules is released which results in a breaking change in Microsoft365DSC, we will update the module to write a verbose message notifying the administrator that the component (resource, parameter, etc) has become deprecated, is no longer being used and will be removed in a future version. A warning event will also be added to the event logs, allowing users to monitor deprecated events. Twice a year we will release a version that bundles all breaking changes of the previous six months into a single version: The first release of the month in April and October. The release notes of these versions will have all breaking changes clearly documented, including the required actions to take. While it is still our recommendation to always use the latest version of the module for your operations, Breaking Changes Releases (BCR) will almost certainly mean that you will have to update your existing configurations or generate a new export. We understand that this may introduce challenges to our users which is why every BCR will be properly communicated and detailed information about how to address these breaking changes will be published in advanced on the official GitHub repository. NOTE: Since releases are cumulative, all releases after that version will also have those changes included and will require the same updates to existing configurations.","title":"Breaking Changes Policy"},{"location":"concepts/consent-flow/","text":"Consent flow \u00b6 After installing the Microsoft365DSC PowerShell modules, you have to consent the various modules to successfully use Microsoft365DSC. The PnP and the Microsoft Graph modules require some setting up before using. PnP PowerShell \u00b6 When using PnP PowerShell for the first time you have to consent the PnP Management Shell Multi-Tenant Azure AD Application via the following cmdlet: Register-PnPManagementShellAccess For more information, check out the SharePoint PnP PowerShell Permissions section on the Authentication and Permissions page. Microsoft Graph \u00b6 For the Microsoft Graph PowerShell module you need to specify scopes to make sure you can export the different modules. We made this a lot easier for you with the Get-M365DSCCompiledPermissionList cmdlet. You can enter the resource you want to export and it will return the correct scope. For instance, when you want to export the AADTenantDetails module, you can use the following example to get the correct scope(s). Get-M365DSCCompiledPermissionList -ResourceNameList @( \"AADTenantDetails\" ) This will give you the following response: Name Value ---- ----- ReadPermissions { Organization . Read . All } UpdatePermissions { Organization . ReadWrite . All } For more information, check out the Microsoft Graph Permissions section on the Authentication and Permissions page.","title":"Consent Flow"},{"location":"concepts/odsp-permissions/","text":"Microsoft365DSC Permissions for SharePoint and OneDrive \u00b6 The latest version of Microsoft365DSC support both user and AzureAD App principal authentication. It is recommended to use AzureAD app authentication for several reasons. The first is that when granting permission to the AAD App it will ensure it has permissions to all SharePoint and OneDrive resources. The second reason is that most organizations enforce MFA authentication on user account that have roles assigned to them. This will cause issues when monitoring or apply changes to SharePoint or OneDrive as it will prompt for MFA numerous times. AzureAD app and user based authentication both can have passwords stored in compiled MOF files so ensure the are secured. Please refer to following video User based authentication \u00b6 When using a user account with Microsoft365DSC make sure the account is a cloud only user account for example admin@contoso.onmicrosoft.com. Microsoft365DSC uses account name for determining tenant within the resources so using federate accounts may cause issue when running Microsoft365DSC. Roles and permissions \u00b6 When using user based authentication several of the resources do support the Global reader role. The following resources support global reader: SPOApp SPOSearchManagedProperty SPOSearchResultSource SPOStorageEntity SPOTenantCdnEnabled SPOTenantCdnPolicy SPOUserProfileProperty All SharePoint and OneDrive resources work with the SharePoint Admin role assigned. The SPOSiteGroup resource will error if the account doesn't have site collection admin permissions even if account is has the role of SharePoint admin. This is why we recommend using AAD App permissions. This role does provide full control so it can also be used for pushing configurations to your tenant. Lastly using an account that has Global Admin permissions typically permissions to entire tenant and can be used on all SharePoint and OneDrive resources. When executing the Export-M365DSCConfiguration cmdlet user name and password should be filled in the following fields: Azure AD app permissions \u00b6 The best option when using Microsoft365DSC with SharePoint and OneDrive is to use an Azure AD app principal. When using AAD App permission Microsoft365DSC supports 2 different scenarios, certificate path option or installing certificate and using the thumbprint. The permissions required for Azure AD applications are SharePoint Site.FullControl.All scope. Configure AzureAD app for Microsoft365DSC \u00b6 The SharePoint PNP team created a cmdlet that simplifies the setup of AzureAD App called Register-PnPAzureADApp . The following script can be used to create the AzureAD app permissions needed for Microsoft365DSC Register-PnPAzureADApp -ApplicationName TestApp2 -Tenant contoso . onmicrosoft . com -OutPath C :\\ DSC -CertificatePassword ( ConvertTo-SecureString -String \"password\" -AsPlainText -Force ) -Store CurrentUser -Scopes \"SPO.Sites.FullControl.All\" This cmdlet will open a dialog box to authenticate to Azure AD and grant admin consent once its created the AzureAD app. It will also install the certificate in current user store and output a PFX file in the C:\\DSC directory. If you plan to use the certificate thumbprint option when using DSC by default the LCM runs under the system account so easiest option to install in cert store is by using PSExec . To install certificate under system account using PSExec run the following: 1. .\\PsExec.exe -s -i mmc.exe 2. File add / remove snapin > Select certificates > MyUser account 3. Open Certificate - Current User and select Personal 4. Select import certificate and browse to location from outpath in code from above and select the PFX file After AzureAD app is created and certificate is installed you need some additional properties before you can use with Microsoft365DSC. Login to Azure Active Directory and browse to the App registrations page you should see the TestApp2 app created from the script above. We need to copy the following properties: Using Certificate Thumbprint option \u00b6 When running the export or creating configuration files for resources the following are the required parameters for authentication when using certificate thumbprint. * ApplicationID * TenantID - This must be in format of contoso.onmicrosoft.com * CertificateThumbprint From the Export-M365DSCConfiguration GUI the following fields should be used: Using Certificate Path option \u00b6 There are times when using Microsoft365DSC you may need to use the certificate path option. For example using Azure DevOps to monitor tenant for configuration drift you would not have access to install certificates on the build agents. In this scenario using the certificate path option would be the best solution. The following parameters are required when using certificate path: * ApplicationID * TenantID - this must be in format of contoso.onmicrosoft.com * CertificatePath - this is path to the PFX certificate on local machine ex: c:\\dsc\\testapp2.pfx * CertificatePassword - password for certificate From the Export-M365DSCConfiguration GUI the following fields should be used:","title":"OneDrive & SharePoint Permissions"},{"location":"contributing/contribution-guidelines/","text":"Contribution guidelines \u00b6 Microsoft365DSC is an Open-Source initiative lead by Microsoft engineers and maintained by the community and open for new ideas as well as for volunteers helping us make it even better and better. Therefore, if you are interested in contributing to this project, we'd like you to read through the contribution guidelines so you know how to contribute to this project. You have a new idea for Microsoft365DSC \u00b6 Great, we always love to add more features and capabilities to Microsoft365DSC But in case that there is already the same or a similar idea listed in our issue list we would like you to check that list before you submit a new issue. If your ideas is not in that list, then please add a new issue in the issue list of type Feature request and fill out the form with your idea (please describe it as precise as possible so we have a clear understanding what you want to achieve with it). NOTE: If you want to add the idea or feature to the project yourself, please just state that in the issue form. You have found a bug in Microsoft365DSC \u00b6 We try our best to avoid any bugs, but sometimes they do happen though. So if you encounter a bug while using Microsoft365DSC please check if that bug is already part of our issue list and if not we would like to know what problems you encountered. So feel free to add a new issue of type Bug report in the issue list along with information about the bug itself and how to reproduce it. If there is anything unclear to us or we cannot reproduce the bug, we will ask you for clarification to get things sorted out. Fixing typos \u00b6 Typos are embarrassing! Most PR's that fix typos will be accepted immediately. In order to make it easier to review the PR, please narrow the focus instead of sending a huge PR of fixes. DO's & DON'Ts \u00b6 DO follow the same project and test structure as the existing project. DO include tests when adding new functionality and features. When fixing bugs, start with adding a test that highlights how the current behavior is broken. DO keep discussions focused. When a new or related topic comes up it's often better to create new issue than to side track the conversation. DO NOT submit PR's for coding style changes. DO NOT surprise us with big PR's. Instead file an issue & start a discussion so we can agree on a direction before you invest a large amount of time. DO NOT commit code you didn't write. DO NOT submit PR's that refactor existing code without a discussion first.","title":"Guidelines"},{"location":"contributing/develop-new-resource/","text":"Before getting ready to contribute a resource to the project, make sure you've read and followed the steps described in Setting up your Environment to Contribute to the Project . Select the Resource to Add \u00b6 DSC resources need to support CRUD operations, meaning that we need to be able to read them, create (or set) instances of them, update them and sometimes remove them. In that regards, your first step in selecting a resource to add should be to make sure there are associated PowerShell cmdlets (or APIs) available to support your resource. For example, the SCComplianceCase resource has the following cmdlets available in the Security and Compliance Powershell module: New-ComplianceCase , Set-ComplianceCase , Get-ComplianceCase and Remove-ComplianceCase . It is therefore a candidate to be added as a resource to the project. A few rules also apply to your resource selection: * For SharePoint Online, where possible, prioritize using the PnP module over the Microsoft.Online.SharePoint.PowerShell one. We are slowly transitioning over an exclusive use of the PnP module and will eventually phase out the use of the SharePoint Online Management Shell. Some cmdlets in the Exchange and Security and Compliance modules are only available to certain SKUs, you will need to make sure that executing a configuration that uses your resource against a SKU that doesn\u2019t support its underlying cmdlets or API is gracefully handled, and does not throw a blocking error. Create the Resource Files \u00b6 The best way to get started here is to simply copy and existing resource, and then to rename and modify it. All resources are found under /Modules/Microsoft365DSC/DSCResources . Each resource is represented by a folder, a .psm1 file which contains the logic of the resource, a .schema.mof file which is a class defining the properties of the resource as well as with a readme.md file which describes what the resource is for. The Folder, module and schema files need to be named based on the following pattern: - Need to start with MSFT_ to indicate that this is for a project under the Microsoft organization. - Need to then contain letters representing the workload associated to the resource (EXO for Exchange Online, SPO for SharePoint Online, OD for OneDrive, SC for Security and Compliance, TEAMS for teams, and O365 for generic admin resources). - The rest of the name should normally follow the same naming convention as the cmdlet it represents. For example, because the cmdlet to create a new compliance case is New-ComplianceCase, the associated resource would be named MSFT_SCComplianceCase . Start with the Parameters \u00b6 Now that you've identified what resource you wish to work on, take a look at the documentation for the associated cmdlets or APIs. For example, the MSFT_SCComplianceCase cmdlet information is found at https://docs.microsoft.com/en-us/powershell/module/exchange/policy-and-compliance-ediscovery/new-compliancecase?view=exchange-ps . Take a look at the list of parameters and figure out which one should be implemented by your resource. For the Compliance Case example, the documentation lists the following properties: New-ComplianceCase [ -Name ] String [ -Confirm ] [ -Description ] String [ -DomainController ] FQDN [ -Sources ] Object [] [ -WhatIf ] [CommonParameters] Some of these parameters can be ignored since they do not make sense to implement in a resource or for Office 365 altogether. From the list of parameters above, we can see that parameter Name should be our key indicator. We can also see that we won't need to implement the Confirm, WhatIf and CommonParameters properties in our resources since they don't make sense in the context of DSC. On top of that, if we read through the documentation, we can see that the DomainController and Sources properties are reserved for internal Microsoft use. Therefore we won't be implementing them within our resource. The list of parameters is not yet complete at this point. If we take a look at the update cmdlet Set-ComplianceCase , we can see from its documentation that it accepts a -Close and -Reopen property to define if a case is opened or closed. We will add this property to our resource as Status and will accept Active or Closed as values. We now need to write the list of parameters our Get, Set, and Test functions will accept. Note that the list of parameters for these three functions need to be exactly the same otherwise the resource validation will fail. In the Compliance Case example, the properties will translate to the following: [ Parameter ( Mandatory = $true )] [System.String] $Name , [ Parameter ()] [System.String] $Description , [ Parameter ()] [ ValidateSet ( \"Active\" , \"Closed\" )] [System.String] $Status = \"Active\" On top of these resources specific parameters, each resource should define the Ensure when they support removing instances of the resource. Every resource is also required to define the GlobalAdminAccount . By adding these two additional properties, the function signature of our resource then becomes: function Get | Set | Test-TargetResource [ CmdletBinding ()] [ OutputType ([ Hashtable | void | Boolean ])] param ( [ Parameter ( Mandatory = $true )] [System.String] $Name , [ Parameter ()] [System.String] $Description , [ Parameter ()] [ ValidateSet ( \"Active\" , \"Closed\" )] [System.String] $Status = \"Active\" , [ Parameter ()] [ ValidateSet ( 'Present' , 'Absent' )] [System.String] $Ensure = 'Present' , [ Parameter ( Mandatory = $true )] [System.Management.Automation.PSCredential] $GlobalAdminAccount ) Microsoft365DSC also supports ReverseDSC natively, which means that it needs to define a fourth function named Export-TargetResource in each resources. This function should only ever accept the GlobalAdminAccount property. The logic of this function should loop through each instances of your resources in the tenant, and convert them into DSC strings. Please refer to existing resources to better understand the logic of this function. Define the Schema \u00b6 Next is the schema file where we will define what properties are expected by our resources in the public scope. You need to make sure you clearly identify the requirement type of each parameter in our resources. These can be: Key : Represents a unique identifier of the resource. There can be more than one key parameter for your resource. Any given configuration cannot define duplicates of the same instance of key parameters. These need to be unique inside a node in your configuration. Required : Represents a property that is mandatory. These are not primary keys and can have duplicate values inside your configuration. Write : Represents optional properties. Some properties can also define a restricted set of accepted values. These can be identified as ValueMap in the parameter definition (see example below). You will also need to provide a description for each parameter. Ideally you should simply copy the description of the property from the official documentation on docs.microsoft.com . If we take our previous example, the schema file for our MSFT_SCComplianceCase resource would become: [ ClassVersion ( \"1.0.0.0\" ), FriendlyName ( \"SCComplianceCase\" )] class MSFT_SCComplianceCase : OMI_BaseResource { [ Key , Description ( \"The Name parameter specifies the unique name of the compliance case.\" )] String Name ; [ Write , Description ( \"The description of the case.\" )] String Description ; [ Write , Description ( \"Specify if this case should exist or not.\" ), ValueMap { \"Present\" , \"Absent\" }, Values { \"Present\" , \"Absent\" }] String Ensure ; [ Write , Description ( \"Status for the case. Can either be 'Active' or 'Closed'\" ), ValueMap { \"Active\" , \"Closed\" }, Values { \"Active\" , \"Closed\" }] String Status ; [ Required , Description ( \"Credentials of the Global Admin Account\" ), EmbeddedInstance ( \"MSFT_Credential\" )] String GlobalAdminAccount ; }; From the example above, note that the class name reflects the full resource name with the MSFT_ prefix. We are however defining a friendly name in the metadata. This should only reflect the short name (without prefix) of the resource. This will allow us to use this alias within our configurations to represent the resource.","title":"Develop a New Resource"},{"location":"contributing/getting-started/","text":"Setting up your Environment to Contribute to the Project \u00b6 The Microsoft365DSC project is open to contribution from the community. In order to contribute to it, you are expected to have some basic level of knowledge of how GitHub works. This wiki page tries to simplify the process of contributing back to the project by providing you with a step-by-step process. Fork the base repository Navigate to the main repository page of the Microsoft365DSC project (e.g. https://GitHub.com/Microsoft/Microsoft365DSC); In the top right corner of the page, click on the Fork button; A dialog box asking you to select the account to fork the repository will appear. Select you account from the list. The forking process should only take a few seconds. While the forking is in progress you will see the following screen. Once completed, you have now a completely forked repository, meaning you have an exact replica of the main repository, under you own GitHub account. The changes you will be working on, will be done in this new forked repository. Once you are satisfied with your changes, they can be submitted back to the owners of the main Module repository via what we call a Pull Request (covered later in this post). Create a Feature Branch Creating a Fork is the equivalent of creating a separate workspace for you to start working on your changes. What we need to do now, is create a new Branch inside that Fork. Think of a branch as being a project within your workspace. Every feature or issue you work on should be in its own branch. By default, when you forked the main repository, you created a copy of the Dev repository from the main repository, inside your fork. Every branch you create in your fork, will essentially be a copy of that Forked Dev branch. Let's put all this in context: **Main Repository** **Forked Repository** Branches: Branches: - Dev - Dev --> Feature 1 --> Feature 2 --> ... In the example above, Feature 1 and Feature 2 are both branches that were created from the Dev branch of the Forked Repository. In order to submit the changes in Feature 1 back into the Main Repository, you will need to first create a Pull Request to have Feature 1 merged back into the Dev branch of your Forked Repository, and then once done, create yet another Pull Request to merge the Forked Repository's Dev branch (which now includes the changes for Feature 1) back in the Main Repository's Dev branch. To create a branch, navigate to the main page of your Forked Repository, and click on the Branch button. The next step is not intuitive, but to create a new branch, simply start typing the name of the new branch you wish to create and press enter. This will automatically create the branch inside your Forked Repository. In order to validate that you are currently viewing file from the branch you just created, you should now see the Branch button listing the newly created branch on the Forked Repository's home page. Cloning the Forked Repository In GitHub, cloning is the process of \"downloading\" the content of a branch onto your local machine for editing. My recommendation here will be to download and install the GitHub client for Windows https://desktop.github.com/. It just makes things a lot easier than having to deal with the console Git client (or even the VSCode built-in tools for that matter). Open GitHub for Windows, and select File > Clone Repository... . In the Clone a Repository dialogue, select the URL tab and provide the URL to your Forked Repository, as well as a local path where the content of the repository is going to be downloaded locally. Click on the Clone button. Wait for the cloning to finish. You now have a local copy of the repository on your local machine. Changing Branches Once you have cloned the Forked Repository onto your local machine, you can easily go and change Branch by simply clicking on the Current Branch at the top of the GitHub client for Windows and by selecting the branch you wish to work on. The moment you change branch from the GitHub client, the file that are located in the directory where you cloned the Forked Repository's content will get updated with the content for that branch. When dealing with Git, you always work in the same clone repository. The fact that you have multiple branches existing in a clone repository doesn't mean that you will have multiple copies of the files on the machine. You control what version of the files will be in that local repository by changing the current Branch in the GitHub client for Windows. Making Changes Once you made sure the branch representing the feature or the issue you are about to work on is selected in the Current Branch of the GitHub client for Windows, you can go ahead and start making changes to the local files. I personally recommend editing the files in Visual Studio Code (https://code.visualstudio.com/), but using other tools such as the PowerShell Integrated Script Editor (ISE) or even other Scripting Editor tool will work just as good. Committing Changes Committing changes in the context of Git means saving the changes in the currently selected branch, but locally . Git keeps some sort of a local database when a repository is cloned, and upon committing changes, these are saved back to the local database. So for example, if you are working on multiple changes in various branches at the same time, you want to make sure you commit your changes to the current branch before using the GitHub client for Windows to change branch. Otherwise your changes will get overwritten by the changes in the newly selected branch (remember that changing a branch updates the local files). To commit a change, once the changes are made to the files, open the GitHub Client for Windows. the client should be smart enough to automatically detect that changes have been made. Once changes are detected in the GitHub client for Windows, you will be allowed to give a Summary and a Description for the changes you are about to commit, and to commit them back to the local database by clicking on the Commit To button. Push Committed Changes Back to GitHub Now the changes have been committed back to the local database, we need to Push them up back into GitHub. To do so, we need to click on the Push Origin button at the top of the GitHub client for Windows. To validate that your recent changes have been successfully uploaded back into GitHub, navigate to the main page of your Forked Repository, and make sure you select the branch in which you just uploaded (PUSHED) you changes back into. You should see a mention at the top, in the history section, that lists your latest changes that have been successfully uploaded back into GitHub. Merging the Changes back into Your Dev Branch As explained in step 2 above, the operation of merging two branches together in Git is called a Pull Request. In our case we discussed that once you are done making changes in your branch, inside your Forked Repository, that 2 Pull Requests have to happen before your changes make it back into the Main Repository. The first Pull Request will merge the changes in your Feature/Issue specific branch, back into your Forked Repository's Dev branch. To initiate a Pull Request, click on the Branch menu inside the GitHub client for Windows, and select the Create pull request option. This will launch the GitHub Pull request form in the browser. Make sure you update the left drop down menu (base:) to point to your Forked Repository's Dev Branch. Make sure that the right hand drop down menu (compare:) has your feature/issue specific branch selected. Now that both the base and compare branches have been properly selected, you can initiate the Pull Request by clicking on the Create pull request button. If all goes well and no conflicts were detected, GitHub will offer you the option to Merge pull request . Click on that green button to initiate the merge operation. This will prompt you to confirm your intentions. Click on the Confirm merge green button. At this point, your changes have been successfully merged back into the Dev branch of your Forked Repository, and chances are you no longer need that Feature/Issue specific branch. You can simply delete it by clicking the purple Delete branch button that GitHub presents to you. We are almost there, we now need to create yet another Pull Request, this time to merge the changes we just merged into our Forked Repository's Dev branch back into the Main Repository's Dev branch. From the GitHub client, select once again the Branch > Create pull request option. This time around, in the Pull Request online form, make sure the left branch (base fork:) is pointing to the Main Repository's Dev branch, and that the right one (head fork:) is set to your Forked Repository's Dev branch. Click on the green Create pull request button. Provide a Summary and a Description for your Pull Request, and click on the green Create pull request button yet again. At that point, you are done! The Core team will review your changes, provide feedback if required, and will merge the changes back into the official Main Repository. Thanks for contributing to Microsoft365Dsc!","title":"Getting started"},{"location":"home/what-is-M365DSC/","text":"What is Microsoft365DSC? \u00b6 Microsoft365DSC is an Open-Source initiative lead by Microsoft engineers and maintained by the community. It allows you to write a definition for how your Microsoft 365 tenant should be configured, automate the deployment of that configuration and ensures the monitoring of the defined configuration, notifying and acting on detected configuration drifts. It also allows you to extract a full-fidelity configuration out of any existing Microsoft 365 tenant. The tool covers all major Microsoft 365 workloads such as Exchange Online, Teams, SharePoint, OneDrive, Security and Compliance, Power Platforms, Intune and Planner. Microsoft365DSC is built as a module for the PowerShell Desired State Configuration framework and is made available via the PowerShell Gallery . Automate \u00b6 Using PowerShell Desired State Configuration (DSC) syntax, write a complete definition of how you want your Microsoft 365 tenant to be configured. The Microsoft365DSC module allows Microsoft 365 administrators to define the configuration(s) of the various workloads (SharePoint, Exchange, Security & Compliance, Teams, etc.), and apply the configuration in an automated way. For example, administrators that wish to deploy a new Search Managed Property to their SharePoint Online workload, can do so with similar lines of code (all code examples can be found on the Resources List wiki page): SPOSearchManagedProperty SearchMP { Searchable = $True FullTextIndex = \"\" MappedCrawledProperties = @() GlobalAdminAccount = $credsGlobalAdmin LanguageNeutralTokenization = $True CompanyNameExtraction = $False AllowMultipleValues = $True Aliases = $True Queryable = $True Name = \"TestManagedProperty\" Safe = $True Description = \"Description of item\" FinerQueryTokenization = $True Retrievable = $True Type = \"Text\" CompleteMatching = $True FullTextContext = 4 Sortable = \"Yes\" Refinable = \"Yes\" Ensure = \"Present\" TokenNormalization = $True } Just like any other normal PowerShell DSC configuration, your Microsoft365DSC file will need to be compiled into a .MOF file for the Local Configuration Manager to be able to apply it. Once your configuration file has been compiled, you can execute the configuration process by calling into the Start-DSCConfiguration PowerShell cmdlet. All configuration resources defined by Microsoft365DSC will make remote calls back to the Microsoft 365 tenant using various underlying frameworks and components (Microsoft Teams PowerShell Module, SharePoint PnP, Azure Active Directory, etc.). It is therefore important that the machine that executes the configuration has internet connectivity back to the Microsoft 365 tenant you are trying to configure. For additional information on how to get started with PowerShell Desired State Configuration, you can refer to the Introduction to PowerShell Desired State Configuration training video. See the Automating page for more information about possible options. Export \u00b6 Microsoft365DSC is the very first PowerShell project that natively supports ReverseDSC. This means that by simply installing the module, you are able to leverage ReverseDSC to extract the entire configuration of any existing tenants. The module exposes a cmdlet called Export-M365DSCConfiguration which launches a Graphical User Interface (GUI) that allows you to pick and choose what configuration components you wish to extract in a granular fashion. Upon providing credentials with correct permissions, the tool will begin the extraction of the configuration. Once it completes the extraction, it will prompt you to specify a destination directory to store the extracted artifacts. The tool will extract several artifacts, including all SharePoint Add-ins and Frameworks packages, the configuration itself, and a metadata file that contains all variables that are specific to your environment. That metadata file (.psd1) abstracts components of you configuration, such as the tenant name, in order to make it as easy as possible for you to replicate those configurations across tenants. As an example, you can extract the configuration from any given tenant using the ReverseDSC functionality, open the extracted .psd1 metadata file, change the tenant's name to a new destination, and apply that new configuration. This allows organizations to keep the configuration of multiple tenants in synchronization with one another. See the Exporting page for more information about possible options. Synchronize \u00b6 Microsoft365DSC makes it very easy for users to keep multiple tenants' configuration synchronized. With the tool you can export the configuration from any existing tenant and re-apply it onto multiple other tenants, keeping their configuration synchronized. You can use this to grab the configuration of a production tenant and apply this configuration onto a test tenant, making sure you can troubleshoot issues with the exact production configuration. Assess \u00b6 Assess any Microsoft 365 tenant against a known good configuration and generate a discrepency report. Microsoft365DSC makes it feasible for organizations to validate the configuration of their existing Microsoft 365 tenant against industry's best practices with a single line command. You can assess any tenant against any baseline configuration that you and your team developed or use official Blueprints. Microsoft365DSC also allows you to compare two configuration files and obtain the delta between the two. Whether you wish to compare the configuration between 2 tenants or two point-in-time exports of the same tenant, we've got you covered! See the Assessing page for more information about possible options. Monitor \u00b6 Automatic monitoring of configuration drifts in your tenant and notification about detected drifts with in-depth details for troubleshooting. Microsoft365DSC will perform regular checks to detect configuration drifts (every 15 minutes by default) and can take one of the following 3 actions when drifts are detected: Fix the drift automatically by re-applying the desired configuration; Log detailed information about the drifts detected in Event Viewer; Notify administrators via emails when drifts are detected, providing them with a detailed report as to what the drifts are (requires the use of Azure DevOPS pipelines); See the Monitoring page for more information about possible options. Report \u00b6 Take any Microsoft365DSC configuration and generate a user friendly report from it in an Excel or HTML format. With a single command you can convert any Microsoft365DSC configuration See the Reporting page for more information about possible options.","title":"What is Microsoft365DSC?"},{"location":"resources/overview/","text":"Resources Overview \u00b6 Microsoft 365 DSC has a lot of resources available, make sure to navigate on the left side of this page to see which resources there are.","title":"Overview"},{"location":"resources/azure-ad/AADAdministrativeUnit/","text":"AADAdministrativeUnit \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Write String Identity of direcory-object. For users, specify a UserPrincipalName. For Groups and SPNs, specify DisplayName Type Write String Specify User, Group or ServicePrincipal to interpret the Identity RoleName Write String Name of the Azure AD Role that is assigned RoleMemberInfo Write Instance Member that is assigned the scoped role Id Write String Object-Id of the Administrative Unit Description Write String Description of the Administrative Unit DisplayName Write String DisplayName of the Administrative Unit Visibility Write String Visibility of the Administrative Unit. Specify HiddenMembership if members of the AU are hidden MembershipType Write String Specify membership type. Possible values are Assigned and Dynamic if the AU-preview has been activated. Otherwise do not use MembershipRule Write String Specify membership rule. Requires that MembershipType is set to Dynamic AND the AU-preview has been activated. Otherwise, do not use MembershipRuleProcessingState Write String Specify dynamic membership-rule processing-state. Valid values are 'On' and 'Paused'. Requires that MembershipType is set to Dynamic AND the AU-preview has been activated. Otherwise, do not use Members Write InstanceArray[] Specify members. Only specify if MembershipType is set to Static ScopedRoleMembers Write InstanceArray[] Ensure Write String Present ensures the Administrative Unit exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADAdministrativeUnit \u00b6 Description \u00b6 This resource configures an Azure AD Administrative Unit. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsCredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADAdministrativeUnit 'TestUnit' { Credential = $credsCredential ; DisplayName = \"Test-Unit\" ; Ensure = \"Present\" ; MembershipRule = \"(user.country -eq `\" Canada `\" )\" ; MembershipRuleProcessingState = \"On\" ; MembershipType = \"Dynamic\" ; } } }","title":"AADAdministrativeUnit"},{"location":"resources/azure-ad/AADApplication/","text":"AADApplication \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Write String Name of the requested permission. SourceAPI Write String Name of the API from which the permission comes from. Type Write String Type of permission. AppOnly, Delegated AdminConsentGranted Write Boolean Represented whether or not the Admin consent been granted on the app. DisplayName Key String DisplayName of the app ObjectId Write String ObjectID of the app. AppId Write String AppId for the app. AvailableToOtherTenants Write Boolean Indicates whether this application is available in other tenants. GroupMembershipClaims Write String A bitmask that configures the groups claim issued in a user or OAuth 2.0 access token that the application expects. The bitmask values are: 0: None, 1: Security groups and Azure AD roles, 2: Reserved, and 4: Reserved. Setting the bitmask to 7 will get all of the security groups, distribution groups, and Azure AD directory roles that the signed-in user is a member of. Homepage Write String The URL to the application's homepage. IdentifierUris Write StringArray[] User-defined URI(s) that uniquely identify a Web application within its Azure AD tenant, or within a verified custom domain. KnownClientApplications Write StringArray[] Client applications that are tied to this resource application. LogoutURL Write String The logout url for this application. Oauth2RequirePostResponse Write Boolean Set this to true if an Oauth2 post response is required. PublicClient Write Boolean Specifies whether this application is a public client (such as an installed application running on a mobile device). Default is false. ReplyURLs Write StringArray[] Specifies the URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to. Owners Write StringArray[] UPN or ObjectID values of the app's owners. Ensure Write String Specify if the Azure AD App should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. Permissions Write InstanceArray[] API permissions for the Azure Active Directory Application. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADApplication \u00b6 Description \u00b6 This resource configures an Azure Active Directory Application. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADApplication 'AADApp1' { DisplayName = \"AppDisplayName\" AvailableToOtherTenants = $false GroupMembershipClaims = \"0\" Homepage = \"https://app.contoso.com\" IdentifierUris = \"https://app.contoso.com\" KnownClientApplications = \"\" LogoutURL = \"https://app.contoso.com/logout\" PublicClient = $false ReplyURLs = \"https://app.contoso.com\" Permissions = @( MSFT_AADApplicationPermission { Name = 'User.Read' Type = 'Delegated' SourceAPI = 'Microsoft Graph' AdminConsentGranted = $false } MSFT_AADApplicationPermission { Name = 'User.ReadWrite.All' Type = 'Delegated' SourceAPI = 'Microsoft Graph' AdminConsentGranted = $True } MSFT_AADApplicationPermission { Name = 'User.Read.All' Type = 'AppOnly' SourceAPI = 'Microsoft Graph' AdminConsentGranted = $True } ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADApplication"},{"location":"resources/azure-ad/AADAuthorizationPolicy/","text":"AADAuthorizationPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Only valid value is 'Yes'. Yes DisplayName Write String Display name for this policy. Description Write String Description of this policy. AllowedToSignUpEmailBasedSubscriptions Write Boolean Boolean Indicates whether users can sign up for email based subscriptions. AllowedToUseSSPR Write Boolean Boolean Indicates whether the Self-Serve Password Reset feature can be used by users on the tenant. AllowEmailVerifiedUsersToJoinOrganization Write Boolean Boolean Indicates whether a user can join the tenant by email validation. AllowInvitesFrom Write String Indicates who can invite external users to the organization. Possible values are: None, AdminsAndGuestInviters, AdminsGuestInvitersAndAllMembers, Everyone. Everyone is the default setting for all cloud environments except US Government. None, AdminsAndGuestInviters, AdminsGuestInvitersAndAllMembers, Everyone BlockMsolPowershell Write Boolean Boolean To disable the use of MSOL PowerShell, set this property to true. This will also disable user-based access to the legacy service endpoint used by MSOL PowerShell. This does not affect Azure AD Connect or Microsoft Graph. DefaultUserRoleAllowedToCreateApps Write Boolean Boolean Indicates whether the default user role can create applications. DefaultUserRoleAllowedToCreateSecurityGroups Write Boolean Boolean Indicates whether the default user role can create security groups. DefaultUserRoleAllowedToReadOtherUsers Write Boolean Boolean Indicates whether the default user role can read other users. GuestUserRole Write String The role that should be granted to guest users. Refer to List unifiedRoleDefinitions to find the list of available role templates. Only supported roles today are User, Guest User, and Restricted Guest User (2af84b1e-32c8-42b7-82bc-daa82404023b). Guest, RestrictedGuest, User PermissionGrantPolicyIdsAssignedToDefaultUserRole Write StringArray[] String collection Indicates if user consent to apps is allowed, and if it is, which permission to grant consent and which app consent policy (permissionGrantPolicy) govern the permission for users to grant consent. Value should be in the format managePermissionGrantsForSelf.{id}, where {id} is the id of a built-in or custom app consent policy. An empty list indicates user consent to apps is disabled. Ensure Write String Specify that the Azure Authorization Policy should exist. Present Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADAuthorizationPolicy \u00b6 Description \u00b6 This resource configures the Azure Active Directory Authorization Policy. The policy is managed using the BETA API, some properties may have been added in the API but not in the resource Azure AD Permissions \u00b6 To authenticate via Microsoft Graph, this resource required the following Application permissions: Automate Policy.Read.All Policy.ReadWrite.Authorization Export Policy.Read.All NOTE: All permissions listed above require admin consent. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADAuthorizationPolicy 'AADAuthPol' { IsSingleInstance = \"Yes\" Id = \"authorizationPolicy\" DisplayName = \"Authorization Policy\" Description = \"Used to manage authorization related settings across the company.\" AllowEmailVerifiedUsersToJoinOrganization = $true AllowInvitesFrom = \"everyone\" AllowedToSignUpEmailBasedSubscriptions = $true AllowedToUseSspr = $true BlockMsolPowerShell = $false DefaultUserRoleAllowedToCreateApps = $true DefaultUserRoleAllowedToCreateSecurityGroups = $true DefaultUserRoleAllowedToReadOtherUsers = $true GuestUserRole = \"Guest\" PermissionGrantPolicyIdsAssignedToDefaultUserRole = @() Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADAuthorizationPolicy"},{"location":"resources/azure-ad/AADConditionalAccessPolicy/","text":"AADConditionalAccessPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String DisplayName of the AAD CA Policy Id Write String Specifies the GUID for the Policy. State Write String Specifies the State of the Policy. disabled, enabled, enabledForReportingButNotEnforced IncludeApplications Write StringArray[] Cloud Apps in scope of the Policy. ExcludeApplications Write StringArray[] Cloud Apps out of scope of the Policy. IncludeUserActions Write StringArray[] User Actions in scope of the Policy. IncludeUsers Write StringArray[] Users in scope of the Policy. ExcludeUsers Write StringArray[] Users out of scope of the Policy. IncludeGroups Write StringArray[] Groups in scope of the Policy. ExcludeGroups Write StringArray[] Groups out of scope of the Policy. IncludeRoles Write StringArray[] AAD Admin Roles in scope of the Policy. ExcludeRoles Write StringArray[] AAD Admin Roles out of scope of the Policy. IncludePlatforms Write StringArray[] Client Device Platforms in scope of the Policy. ExcludePlatforms Write StringArray[] Client Device Platforms out of scope of the Policy. IncludeLocations Write StringArray[] AAD Named Locations in scope of the Policy. ExcludeLocations Write StringArray[] AAD Named Locations out of scope of the Policy. IncludeDevices Write StringArray[] Client Device Compliance states in scope of the Policy. ExcludeDevices Write StringArray[] Client Device Compliance states out of scope of the Policy. DeviceFilterMode Write String Client Device Filter mode of the Policy. include, exclude DeviceFilterRule Write String Client Device Filter rule of the Policy. UserRiskLevels Write StringArray[] AAD Identity Protection User Risk Levels in scope of the Policy. SignInRiskLevels Write StringArray[] AAD Identity Protection Sign-in Risk Levels in scope of the Policy. ClientAppTypes Write StringArray[] Client App types in scope of the Policy. GrantControlOperator Write String Operator to be used for Grant Controls. AND, OR BuiltInControls Write StringArray[] List of built-in Grant Controls to be applied by the Policy. ApplicationEnforcedRestrictionsIsEnabled Write Boolean Specifies, whether Application Enforced Restrictions are enabled in the Policy. CloudAppSecurityIsEnabled Write Boolean Specifies, whether Cloud App Security is enforced by the Policy. CloudAppSecurityType Write String Specifies, what Cloud App Security control is enforced by the Policy. SignInFrequencyValue Write UInt32 Sign in frequency time in the given unit to be enforced by the policy. TermsOfUse Write String Display name of the terms of use to assign. CustomAuthenticationFactors Write StringArray[] Custom Controls assigned to the grant property of this policy. SignInFrequencyType Write String Sign in frequency unit (days/hours) to be interpreted by the policy. Days, Hours, SignInFrequencyIsEnabled Write Boolean Specifies, whether sign-in frequency is enforced by the Policy. PersistentBrowserIsEnabled Write Boolean Specifies, whether Browser Persistence is controlled by the Policy. PersistentBrowserMode Write String Specifies, what Browser Persistence control is enforced by the Policy. Always, Never, Ensure Write String Specify if the Azure AD CA Policy should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADConditionalAccessPolicy \u00b6 Description \u00b6 This resource configures an Azure Active Directory Conditional Access Policy. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADConditionalAccessPolicy 'Allin-example' { BuiltInControls = @( \"Mfa\" , \"CompliantDevice\" , \"DomainJoinedDevice\" , \"ApprovedApplication\" , \"CompliantApplication\" ) ClientAppTypes = @( \"ExchangeActiveSync\" , \"Browser\" , \"MobileAppsAndDesktopClients\" , \"Other\" ) CloudAppSecurityIsEnabled = $True CloudAppSecurityType = \"MonitorOnly\" DisplayName = \"Allin-example\" ExcludeApplications = @( \"803ee9ca-3f7f-4824-bd6e-0b99d720c35c\" , \"00000012-0000-0000-c000-000000000000\" , \"00000007-0000-0000-c000-000000000000\" , \"Office365\" ) ExcludeDevices = @( \"Compliant\" , \"DomainJoined\" ) ExcludeGroups = @() ExcludeLocations = @( \"Blocked Countries\" ) ExcludePlatforms = @( \"Windows\" , \"WindowsPhone\" , \"MacOS\" ) ExcludeRoles = @( \"Company Administrator\" , \"Application Administrator\" , \"Application Developer\" , \"Cloud Application Administrator\" , \"Cloud Device Administrator\" ) ExcludeUsers = @( \"admin@contoso.com\" , \"AAdmin@contoso.com\" , \"CAAdmin@contoso.com\" , \"AllanD@contoso.com\" , \"AlexW@contoso.com\" , \"GuestsOrExternalUsers\" ) GrantControlOperator = \"OR\" IncludeApplications = @( \"All\" ) IncludeDevices = @( \"All\" ) IncludeGroups = @() IncludeLocations = @( \"AllTrusted\" ) IncludePlatforms = @( \"Android\" , \"IOS\" ) IncludeRoles = @( \"Compliance Administrator\" ) IncludeUserActions = @() IncludeUsers = @( \"Alexw@contoso.com\" ) PersistentBrowserIsEnabled = $false PersistentBrowserMode = \"\" SignInFrequencyIsEnabled = $True SignInFrequencyType = \"Hours\" SignInFrequencyValue = 5 SignInRiskLevels = @( \"High\" , \"Medium\" ) State = \"disabled\" UserRiskLevels = @( \"High\" , \"Medium\" ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADConditionalAccessPolicy"},{"location":"resources/azure-ad/AADEntitlementManagementAccessPackage/","text":"AADEntitlementManagementAccessPackage \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Id Write String The Id of the resource roleScope. AccessPackageResourceOriginId Write String The origine Id of the resource. AccessPackageResourceRoleDisplayName Write String The display name of the resource role. Id Write String The Id of the access package. CatalogId Write String Identifier of the access package catalog referencing this access package. Description Write String The description of the access package. DisplayName Write String The display name of the access package. IsHidden Write Boolean Whether the access package is hidden from the requestor. IsRoleScopesVisible Write Boolean Indicates whether role scopes are visible. AccessPackageResourceRoleScopes Write InstanceArray[] The resources and roles included in the access package. IncompatibleAccessPackages Write StringArray[] The access packages whose assigned users are ineligible to be assigned this access package. AccessPackagesIncompatibleWith Write StringArray[] The access packages that are incompatible with this package. IncompatibleGroups Write StringArray[] The groups whose members are ineligible to be assigned this access package. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADEntitlementManagementAccessPackage \u00b6 Description \u00b6 This resource configures an A A D Entitlement Management Access Package.","title":"AADEntitlementManagementAccessPackage"},{"location":"resources/azure-ad/AADEntitlementManagementAccessPackageCatalog/","text":"AADEntitlementManagementAccessPackageCatalog \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Id Write String The id of the access package catalog. CatalogStatus Write String Has the value Published if the access packages are available for management. CatalogType Write String One of UserManaged or ServiceDefault. UserManaged, ServiceDefault Description Write String The description of the access package catalog. DisplayName Write String The display name of the access package catalog. IsExternallyVisible Write Boolean Whether the access packages in this catalog can be requested by users outside of the tenant. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADEntitlementManagementAccessPackageCatalog \u00b6 Description \u00b6 This resource configures an Azure AD Entitlement Management Access Package Catalog.","title":"AADEntitlementManagementAccessPackageCatalog"},{"location":"resources/azure-ad/AADEntitlementManagementAccessPackageCatalogResource/","text":"AADEntitlementManagementAccessPackageCatalogResource \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values AttributeDestination Write Instance Information about how to set the attribute, currently a accessPackageUserDirectoryAttributeStore object type. AttributeName Write String The name of the attribute in the end system. AttributeSource Write Instance Information about how to populate the attribute value when an accessPackageAssignmentRequest is being fulfilled, currently a accessPackageResourceAttributeQuestion object type. Id Write String Id of the access package resource attribute. IsEditable Write Boolean Specifies whether or not an existing attribute value can be edited by the requester. IsPersistedOnAssignmentRemoval Write Boolean Specifies whether the attribute will remain in the end system after an assignment ends. odataType Write String Type of the access package resource attribute destination. #microsoft.graph.accessPackageUserDirectoryAttributeStore odataType Write String Type of the access package resource attribute source. #microsoft.graph.accessPackageResourceAttributeQuestion Question Write Instance The question asked in order to get the value of the attribute. odataType Write String Type of the access package resource attribute question. #microsoft.graph.accessPackageTextInputQuestion, #microsoft.graph.accessPackageMultipleChoiceQuestion Id Write String Id of the access package resource attribute question. IsRequired Write Boolean Indicates whether the requestor is required to supply an answer or not. IsSingleLine Write Boolean Indicates whether the answer will be in single or multiple line format. RegexPattern Write String This is the regex pattern that the corresponding text answer must follow. Sequence Write UInt32 Relative position of this question when displaying a list of questions to the requestor. QuestionText Write Instance The text of the question to show to the requestor. AllowsMultipleSelection Write Boolean Indicates whether requestor can select multiple choices as their answer. Choices Write InstanceArray[] List of answer choices. DefaultText Write String The fallback string, which is used when a requested localization is not available. Required. LocalizedTexts Write InstanceArray[] Content represented in a format for a specific locale. Text Write String The text in the specific language. Required. LanguageCode Write String The ISO code for the intended language. Required. ActualValue Write String The actual value of the selected choice. This is typically a string value which is understandable by applications. Required. displayValue Write Instance The localized display values shown to the requestor and approvers. Required. Id Write String Id of the access package catalog resource. CatalogId Write String The unique ID of the access package catalog. AddedBy Write String The name of the user or application that first added this resource. Read-only. AddedOn Write String The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Attributes Write InstanceArray[] Contains information about the attributes to be collected from the requestor and sent to the resource application. Description Write String A description for the resource. DisplayName Write String The display name of the resource, such as the application name, group name or site name. IsPendingOnboarding Write Boolean True if the resource is not yet available for assignment. Read-only. OriginId Write String The unique identifier of the resource in the origin system. In the case of an Azure AD group, this is the identifier of the group. OriginSystem Write String The type of the resource in the origin system. ResourceType Write String The type of the resource. Url Write String A unique resource locator for the resource, such as the URL for signing a user into an application. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADEntitlementManagementAccessPackageCatalogResource \u00b6 Description \u00b6 This resource configures an Azure AD Entitlement Management Access Package Catalog Resource.","title":"AADEntitlementManagementAccessPackageCatalogResource"},{"location":"resources/azure-ad/AADEntitlementManagementSetting/","text":"AADEntitlementManagementSetting \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes DaysUntilExternalUserDeletedAfterBlocked Write UInt64 If externalUserLifecycleAction is blockSignInAndDelete, the duration, typically a number of days, after an external user is blocked from sign in before their account is deleted. ExternalUserLifecycleAction Write String Automatic action that the service should take when an external user's last access package assignment is removed. none, blockSignIn, blockSignInAndDelete Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADEntitlementManagementSetting \u00b6 Description \u00b6 This resource configures an Azure AD Entitlement Management Setting.","title":"AADEntitlementManagementSetting"},{"location":"resources/azure-ad/AADGroup/","text":"AADGroup \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisabledPlans Write StringArray[] A collection of the unique identifiers for plans that have been disabled. SkuId Write String The unique identifier for the SKU. DisplayName Key String DisplayName of the Azure Active Directory Group MailNickname Key String Specifies a mail nickname for the group. Description Write String Specifies a description for the group. Id Write String Specifies an ID for the group. Owners Write StringArray[] User Service Principal values for the group's owners. Members Write StringArray[] User Service Principal values for the group's members. MemberOf Write StringArray[] DisplayName values for the groups that this group is a member of. GroupTypes Write StringArray[] Specifies that the group is a dynamic group. To create a dynamic group, specify a value of DynamicMembership. MembershipRule Write String Specifies the membership rule for a dynamic group. MembershipRuleProcessingState Write String Specifies the rule processing state. The acceptable values for this parameter are: On. Process the group rule or Paused. Stop processing the group rule. On, Paused SecurityEnabled Write Boolean Specifies whether the group is security enabled. For security groups, this value must be $True. MailEnabled Write Boolean Specifies whether this group is mail enabled. Currently, you cannot create mail enabled groups in Azure AD. IsAssignableToRole Write Boolean Specifies whether this group can be assigned a role. Only available when creating a group and can't be modified after group is created. AssignedToRole Write StringArray[] DisplayName values for the roles that the group is assigned to. Visibility Write String This parameter determines the visibility of the group's content and members list. Public, Private, HiddenMembership AssignedLicenses Write InstanceArray[] List of Licenses assigned to the group. Ensure Write String Specify if the Azure AD Group should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADGroup \u00b6 Description \u00b6 This resource configures an Azure Active Directory group. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADGroup 'MyGroups' { DisplayName = \"DSCGroup\" Description = \"Microsoft DSC Group\" SecurityEnabled = $True MailEnabled = $True GroupTypes = @( \"Unified\" ) MailNickname = \"M365DSC\" Visibility = \"Private\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } } Example 2 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADGroup 'MyGroups' { DisplayName = \"DSCGroup\" Description = \"Microsoft DSC Group\" SecurityEnabled = $True MailEnabled = $False GroupTypes = @() MailNickname = \"DSCGroup\" Ensure = \"Present\" IsAssignableToRole = $True AssignedToRole = \"Identity Governance Administrator\" Credential = $credsGlobalAdmin } } } Example 3 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADGroup 'MyGroups1' { DisplayName = \"DSCGroup\" Description = \"Microsoft DSC Group\" SecurityEnabled = $True GroupTypes = @() MailNickname = \"M365DSCG\" Ensure = \"Present\" Credential = $credsGlobalAdmin } AADGroup 'MyGroups2' { DisplayName = \"DSCMemberGroup\" Description = \"Microsoft DSC Editor\" SecurityEnabled = $True GroupTypes = @() MailNickname = \"M365DSCMG\" Ensure = \"Present\" MemberOf = @( \"DSCGroup\" ) Credential = $credsGlobalAdmin } } }","title":"AADGroup"},{"location":"resources/azure-ad/AADGroupLifecyclePolicy/","text":"AADGroupLifecyclePolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Only valid value is 'Yes'. Yes GroupLifetimeInDays Required UInt32 The number of days a group can exist before it needs to be renewed. ManagedGroupTypes Required String This parameter allows the admin to select which office 365 groups the policy will apply to. 'None' will create the policy in a disabled state. 'All' will apply the policy to every Office 365 group in the tenant. 'Selected' will allow the admin to choose specific Office 365 groups that the policy will apply to. All, None, Selected AlternateNotificationEmails Required StringArray[] Notification emails for groups that have no owners will be sent to these email addresses. Ensure Write String Specify if the Azure AD Groups Lifecycle Policy should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADGroupLifecyclePolicy \u00b6 Description \u00b6 This resource configures an Azure Active Directory Group Lifecycle Policy (e.g. Expiration). Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADGroupLifecyclePolicy 'GroupLifecyclePolicy' { IsSingleInstance = \"Yes\" AlternateNotificationEmails = @( \"john.smith@contoso.com\" ) GroupLifetimeInDays = 99 ManagedGroupTypes = \"Selected\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADGroupLifecyclePolicy"},{"location":"resources/azure-ad/AADGroupsNamingPolicy/","text":"AADGroupsNamingPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Only valid value is 'Yes'. Yes PrefixSuffixNamingRequirement Write String Prefixes and suffixes to add to the group name. CustomBlockedWordsList Write StringArray[] Comma delimited list of words that should be blocked from being included in groups' names. Ensure Write String Specify if the Azure AD Groups Naming Policy should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADGroupsNamingPolicy \u00b6 Description \u00b6 This resource configures an Azure Active Directory Group Naming Policy. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADGroupsNamingPolicy 'GroupsNamingPolicy' { IsSingleInstance = \"Yes\" CustomBlockedWordsList = @( \"CEO\" , \"President\" ) PrefixSuffixNamingRequirement = \"[Title]Test[Company][GroupName][Office]Redmond\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADGroupsNamingPolicy"},{"location":"resources/azure-ad/AADGroupsSettings/","text":"AADGroupsSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Only valid value is 'Yes'. Yes EnableGroupCreation Write Boolean The flag indicating whether Office 365 group creation is allowed in the directory by non-admin users. This setting does not require an Azure Active Directory Premium P1 license. AllowGuestsToBeGroupOwner Write Boolean Boolean indicating whether or not a guest user can be an owner of groups. AllowGuestsToAccessGroups Write Boolean Boolean indicating whether or not a guest user can have access to Office 365 groups content. This setting does not require an Azure Active Directory Premium P1 license. GuestUsageGuidelinesUrl Write String The url of a link to the guest usage guidelines. GroupCreationAllowedGroupName Write String Name of the security group for which the members are allowed to create Office 365 groups even when EnableGroupCreation == false. AllowToAddGuests Write Boolean A boolean indicating whether or not is allowed to add guests to this directory. UsageGuidelinesUrl Write String A link to the Group Usage Guidelines. Ensure Write String Specify if the Azure AD Groups Naming Policy should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADGroupsNamingPolicy \u00b6 Description \u00b6 This resource configures an Azure Active Directory Groups Settings. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADGroupsSettings 'GeneralGroupsSettings' { IsSingleInstance = \"Yes\" AllowGuestsToAccessGroups = $True AllowGuestsToBeGroupOwner = $True AllowToAddGuests = $True EnableGroupCreation = $True GroupCreationAllowedGroupName = \"All Company\" GuestUsageGuidelinesUrl = \"https://contoso.com/guestusage\" UsageGuidelinesUrl = \"https://contoso.com/usage\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADGroupsSettings"},{"location":"resources/azure-ad/AADNamedLocationPolicy/","text":"AADNamedLocationPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values OdataType Write String Specifies the Odata Type of a Named Location object in Azure Active Directory #microsoft.graph.countryNamedLocation, #microsoft.graph.ipNamedLocation Id Write String Specifies the ID of a Named Location in Azure Active Directory. DisplayName Key String Specifies the Display Name of a Named Location in Azure Active Directory IpRanges Write StringArray[] Specifies the IP ranges of the Named Location in Azure Active Directory IsTrusted Write Boolean Specifies the isTrusted value for the Named Location in Azure Active Directory CountriesAndRegions Write StringArray[] Specifies the countries and regions for the Named Location in Azure Active Directory IncludeUnknownCountriesAndRegions Write Boolean Specifies the includeUnknownCountriesAndRegions value for the Named Location in Azure Active Directory Ensure Write String Specify if the Azure AD Named Location should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADNamedLocationPolicy \u00b6 Description \u00b6 This resource configures the Azure AD Named Location Policies in Azure Active Directory Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADNamedLocationPolicy 'CompanyNetwork' { DisplayName = \"Company Network\" IpRanges = @( \"2.1.1.1/32\" , \"1.2.2.2/32\" ) IsTrusted = $True OdataType = \"#microsoft.graph.ipNamedLocation\" Ensure = \"Present\" Credential = $credsGlobalAdmin } AADNamedLocationPolicy 'AllowedCountries' { CountriesAndRegions = @( \"GH\" , \"AX\" , \"DZ\" , \"AI\" , \"AM\" ) DisplayName = \"Allowed Countries\" IncludeUnknownCountriesAndRegions = $False OdataType = \"#microsoft.graph.countryNamedLocation\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADNamedLocationPolicy"},{"location":"resources/azure-ad/AADRoleDefinition/","text":"AADRoleDefinition \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Specifies a display name for the role definition. Id Write String Specifies Id for the role definition. Description Write String Specifies a description for the role definition. ResourceScopes Write StringArray[] Specifies the resource scopes for the role definition. IsEnabled Required Boolean Specifies whether the role definition is enabled. RolePermissions Required StringArray[] Specifies permissions for the role definition. TemplateId Write String Specifies template id for the role definition. Version Write String Specifies version for the role definition. Ensure Write String Specify if the Azure AD Role definition should exist or not. Present, Absent Credential Write PSCredential Credentials of the Azure AD Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADRoleDefinition \u00b6 Description \u00b6 This resource configures an Azure Active Directory role definition. To configure custom roles you require an Azure AD Premium P1 license. The account used to configure role definitions based on this resource needs either to be a \"Global Administrator\" or a \"Privileged role administrator\". Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADRoleDefinition 'AADRoleDefinition1' { DisplayName = \"DSCRole1\" Description = \"DSC created role definition\" ResourceScopes = \"/\" IsEnabled = $true RolePermissions = \"microsoft.directory/applicationPolicies/allProperties/read\" , \"microsoft.directory/applicationPolicies/allProperties/update\" , \"microsoft.directory/applicationPolicies/basic/update\" Version = \"1.0\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADRoleDefinition"},{"location":"resources/azure-ad/AADRoleSetting/","text":"AADRoleSetting \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Id Key String Specifies the RoleId. Displayname Write String RuleDefinition Displayname ActivationMaxDuration Write String Activation maximum duration (hours). ActivationReqJustification Write Boolean Require justification on activation (True/False) ActivationReqTicket Write Boolean Require ticket information on activation (True/False) ActivationReqMFA Write Boolean Require MFA on activation (True/False) ApprovaltoActivate Write Boolean Require approval to activate (True/False) ActivateApprover Write StringArray[] Approver User UPN and/or Group Displayname PermanentEligibleAssignmentisExpirationRequired Write Boolean Allow permanent eligible assignment (True/False) ExpireEligibleAssignment Write String Expire eligible assignments after (Days) PermanentActiveAssignmentisExpirationRequired Write Boolean Allow permanent active assignment (True/False) ExpireActiveAssignment Write String Expire active assignments after (Days) AssignmentReqMFA Write Boolean Require Azure Multi-Factor Authentication on active assignment (True/False) AssignmentReqJustification Write Boolean Require justification on active assignment (True/False) ElegibilityAssignmentReqMFA Write Boolean Require Azure Multi-Factor Authentication on eligible assignment (True/False) ElegibilityAssignmentReqJustification Write Boolean Require justification on eligible assignment (True/False) EligibleAlertNotificationDefaultRecipient Write Boolean Send notifications when members are assigned as eligible to this role: Role assignment alert, default recipient (True/False) EligibleAlertNotificationAdditionalRecipient Write StringArray[] Send notifications when members are assigned as eligible to this role: Role assignment alert, additional recipient (UPN) EligibleAlertNotificationOnlyCritical Write Boolean Send notifications when members are assigned as eligible to this role: Role assignment alert, only critical Email (True/False) EligibleAssigneeNotificationDefaultRecipient Write Boolean Send notifications when members are assigned as eligible to this role: Notification to the assigned user (assignee), default recipient (True/False) EligibleAssigneeNotificationAdditionalRecipient Write StringArray[] Send notifications when members are assigned as eligible to this role: Notification to the assigned user (assignee), additional recipient (UPN) EligibleAssigneeNotificationOnlyCritical Write Boolean Send notifications when members are assigned as eligible to this role: Notification to the assigned user (assignee), only critical Email (True/False) EligibleApproveNotificationDefaultRecipient Write Boolean Send notifications when members are assigned as eligible to this role: Request to approve a role assignment renewal/extension, default recipient (True/False) EligibleApproveNotificationAdditionalRecipient Write StringArray[] Send notifications when members are assigned as eligible to this role: Request to approve a role assignment renewal/extension, additional recipient (UPN) EligibleApproveNotificationOnlyCritical Write Boolean Send notifications when members are assigned as eligible to this role: Request to approve a role assignment renewal/extension, only critical Email (True/False) ActiveAlertNotificationDefaultRecipient Write Boolean Send notifications when members are assigned as active to this role: Role assignment alert, default recipient (True/False) ActiveAlertNotificationAdditionalRecipient Write StringArray[] Send notifications when members are assigned as active to this role: Role assignment alert, additional recipient (UPN) ActiveAlertNotificationOnlyCritical Write Boolean Send notifications when members are assigned as active to this role: Role assignment alert, only critical Email (True/False) ActiveAssigneeNotificationDefaultRecipient Write Boolean Send notifications when members are assigned as active to this role: Notification to the assigned user (assignee), default recipient (True/False) ActiveAssigneeNotificationAdditionalRecipient Write StringArray[] Send notifications when members are assigned as active to this role: Notification to the assigned user (assignee), additional recipient (UPN) ActiveAssigneeNotificationOnlyCritical Write Boolean Send notifications when members are assigned as active to this role: Notification to the assigned user (assignee), only critical Email (True/False) ActiveApproveNotificationDefaultRecipient Write Boolean Send notifications when members are assigned as active to this role: Request to approve a role assignment renewal/extension, default recipient (True/False) ActiveApproveNotificationAdditionalRecipient Write StringArray[] Send notifications when members are assigned as active to this role: Request to approve a role assignment renewal/extension, additional recipient (UPN) ActiveApproveNotificationOnlyCritical Write Boolean Send notifications when members are assigned as active to this role: Request to approve a role assignment renewal/extension, only critical Email (True/False) EligibleAssignmentAlertNotificationDefaultRecipient Write Boolean Send notifications when eligible members activate this role: Role assignment alert, default recipient (True/False) EligibleAssignmentAlertNotificationAdditionalRecipient Write StringArray[] Send notifications when eligible members activate this role: Role assignment alert, additional recipient (UPN) EligibleAssignmentAlertNotificationOnlyCritical Write Boolean Send notifications when eligible members activate this role: Role assignment alert, only critical Email (True/False) EligibleAssignmentAssigneeNotificationDefaultRecipient Write Boolean Send notifications when eligible members activate this role: Notification to activated user (requestor), default recipient (True/False) EligibleAssignmentAssigneeNotificationAdditionalRecipient Write StringArray[] Send notifications when eligible members activate this role: Notification to activated user (requestor), additional recipient (UPN) EligibleAssignmentAssigneeNotificationOnlyCritical Write Boolean Send notifications when eligible members activate this role: Notification to activated user (requestor), only critical Email (True/False) Ensure Write String Specify if the Azure AD role setting should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADRoleSetting \u00b6 Description \u00b6 This resource configure existing Azure roles. All UI parameters can be configured using this resource like: - Notifications - require approval / ticket / justification / MFA Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC Node localhost { AADRoleSetting 28b253d8-cde5 - 471f-a331-fe7320023cdd { ActivateApprover = @(); ActivationMaxDuration = \"PT8H\" ; ActivationReqJustification = $True ; ActivationReqMFA = $False ; ActivationReqTicket = $False ; ActiveAlertNotificationAdditionalRecipient = @(); ActiveAlertNotificationDefaultRecipient = $True ; ActiveAlertNotificationOnlyCritical = $False ; ActiveApproveNotificationAdditionalRecipient = @(); ActiveApproveNotificationDefaultRecipient = $True ; ActiveApproveNotificationOnlyCritical = $False ; ActiveAssigneeNotificationAdditionalRecipient = @(); ActiveAssigneeNotificationDefaultRecipient = $True ; ActiveAssigneeNotificationOnlyCritical = $False ; ApplicationId = $ConfigurationData . NonNodeData . ApplicationId ; ApprovaltoActivate = $False ; AssignmentReqJustification = $True ; AssignmentReqMFA = $False ; CertificateThumbprint = $ConfigurationData . NonNodeData . CertificateThumbprint ; Displayname = \"Application Administrator\" ; ElegibilityAssignmentReqJustification = $False ; ElegibilityAssignmentReqMFA = $False ; EligibleAlertNotificationAdditionalRecipient = @(); EligibleAlertNotificationDefaultRecipient = $True ; EligibleAlertNotificationOnlyCritical = $False ; EligibleApproveNotificationAdditionalRecipient = @(); EligibleApproveNotificationDefaultRecipient = $True ; EligibleApproveNotificationOnlyCritical = $False ; EligibleAssigneeNotificationAdditionalRecipient = @(); EligibleAssigneeNotificationDefaultRecipient = $True ; EligibleAssigneeNotificationOnlyCritical = $False ; EligibleAssignmentAlertNotificationAdditionalRecipient = @(); EligibleAssignmentAlertNotificationDefaultRecipient = $True ; EligibleAssignmentAlertNotificationOnlyCritical = $False ; EligibleAssignmentAssigneeNotificationAdditionalRecipient = @(); EligibleAssignmentAssigneeNotificationDefaultRecipient = $True ; EligibleAssignmentAssigneeNotificationOnlyCritical = $False ; ExpireActiveAssignment = \"P180D\" ; ExpireEligibleAssignment = \"P365D\" ; Id = \"9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3\" ; PermanentActiveAssignmentisExpirationRequired = $False ; PermanentEligibleAssignmentisExpirationRequired = $False ; TenantId = $ConfigurationData . NonNodeData . TenantId ; } } }","title":"AADRoleSetting"},{"location":"resources/azure-ad/AADSecurityDefaults/","text":"AADSecurityDefaults \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Only valid value is 'Yes'. Yes DisplayName Write String Display name of the security defaults. Description Write String Description of the security defaults. IsEnabled Write Boolean Represents whether or not security defaults are enabled. Ensure Write String Specify if the Azure AD App should exist or not. Present, Absent ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. Credential Write PSCredential Credentials of the Azure AD Admin ManagedIdentity Write Boolean Managed ID being used for authentication. AADSecurityDefaults \u00b6 Description \u00b6 This resource configures the Security Defaults in Azure Active Directory. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $Credscredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADSecurityDefaults 'Defaults' { Credential = $Credscredential ; Description = \"Security defaults is a set of basic identity security mechanisms recommended by Microsoft. When enabled, these recommendations will be automatically enforced in your organization. Administrators and users will be better protected from common identity related attacks.\" ; DisplayName = \"Security Defaults\" ; IsEnabled = $True ; IsSingleInstance = \"Yes\" ; } } }","title":"AADSecurityDefaults"},{"location":"resources/azure-ad/AADServicePrincipal/","text":"AADServicePrincipal \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values AppId Key String The unique identifier for the associated application. ObjectID Write String The ObjectID of the ServicePrincipal DisplayName Write String Displayname of the ServicePrincipal. AlternativeNames Write StringArray[] The alternative names for this service principal AccountEnabled Write Boolean True if the service principal account is enabled; otherwise, false. AppRoleAssignmentRequired Write Boolean Indicates whether an application role assignment is required. ErrorUrl Write String Specifies the error URL of the ServicePrincipal. Homepage Write String Specifies the homepage of the ServicePrincipal. LogoutUrl Write String Specifies the LogoutURL of the ServicePrincipal. PublisherName Write String Specifies the PublisherName of the ServicePrincipal. ReplyUrls Write StringArray[] The URLs that user tokens are sent to for sign in with the associated application, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to for the associated application. SamlMetadataUrl Write String The URL for the SAML metadata of the ServicePrincipal. ServicePrincipalNames Write StringArray[] Specifies an array of service principal names. Based on the identifierURIs collection, plus the application's appId property, these URIs are used to reference an application's service principal. ServicePrincipalType Write String The type of the service principal. Tags Write StringArray[] Tags linked to this service principal.Note that if you intend for this service principal to show up in the All Applications list in the admin portal, you need to set this value to Ensure Write String Specify if the Azure AD App should exist or not. Present, Absent ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. Credential Write PSCredential Credentials of the Azure AD Admin ManagedIdentity Write Boolean Managed ID being used for authentication. AADServicePrincipal \u00b6 Description \u00b6 This resource configures an Azure Active Directory ServicePrincipal. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADServicePrincipal 'AADServicePrincipal' { AppId = \"<AppID GUID>\" DisplayName = \"AADAppName\" AlternativeNames = \"AlternativeName1\" , \"AlternativeName2\" AccountEnabled = $true AppRoleAssignmentRequired = $false ErrorUrl = \"\" Homepage = \"https://AADAppName.contoso.com\" LogoutUrl = \"https://AADAppName.contoso.com/logout\" PublisherName = \"Contoso\" ReplyURLs = \"https://AADAppName.contoso.com\" SamlMetadataURL = \"\" ServicePrincipalNames = \"<AppID GUID>\" , \"https://AADAppName.contoso.com\" ServicePrincipalType = \"Application\" Tags = \"{WindowsAzureActiveDirectoryIntegratedApp}\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADServicePrincipal"},{"location":"resources/azure-ad/AADTenantDetails/","text":"AADTenantDetails \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Only valid value is 'Yes'. Yes MarketingNotificationEmails Write StringArray[] Email-addresses from the people who should receive Marketing Notifications SecurityComplianceNotificationMails Write StringArray[] Email-addresses from the people who should receive Security Compliance Notifications SecurityComplianceNotificationPhones Write StringArray[] Phone Numbers from the people who should receive Security Notifications TechnicalNotificationMails Write StringArray[] Email-addresses from the people who should receive Technical Notifications Credential Write PSCredential Credentials of the Azure Active Directory Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AAD Tenant Details \u00b6 Description \u00b6 This resource configures the Azure AD Tenant Details Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [System.Management.Automation.PSCredential] $GlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC Node Localhost { AADTenantDetails '\u00c3\u2021onfigureTenantDetails' { IsSingleInstance = 'Yes' TechnicalNotificationMails = \"example@contoso.com\" SecurityComplianceNotificationPhones = \"+1123456789\" SecurityComplianceNotificationMails = \"example@contoso.com\" MarketingNotificationEmails = \"example@contoso.com\" Credential = $GlobalAdmin } } }","title":"AADTenantDetails"},{"location":"resources/azure-ad/AADTermsOfUse/","text":"AADTermsOfUse \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Frequency Write String Represents the frequency at which the terms will expire, after its first expiration as set in startDateTime. StartDateTime Write String The DateTime when the agreement is set to expire for all users. AgreementFileId Write String The identifier of the agreement file accepted by the user. AgreementId Write String The identifier of the agreement. DeviceDisplayName Write String The display name of the device used for accepting the agreement. DeviceId Write String The unique identifier of the device used for accepting the agreement. DeviceOSType Write String The operating system used to accept the agreement. DeviceOSVersion Write String The operating system version of the device used to accept the agreement. ExpirationDateTime Write String The expiration date time of the acceptance. RecordedDateTime Write String The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. State Write String The state of the agreement acceptance. UserDisplayName Write String Display name of the user when the acceptance was recorded. UserEmail Write String Email of the user when the acceptance was recorded. UserId Write String The identifier of the user who accepted the agreement. UserPrincipalName Write String UPN of the user when the acceptance was recorded. Id Write String The identifier of the agreement acceptance. Localizations Write InstanceArray[] The localized version of the terms of use agreement files attached to the agreement. CreatedDateTime Write String The date time representing when the file was created. displayName Write String Localized display name of the policy file of an agreement. fileName Write String Name of the agreement file (for example, TOU.pdf). isDefault Write Boolean If none of the languages matches the client preference, indicates whether this is the default agreement file. isMajorVersion Write Boolean Indicates whether the agreement file is a major version update. Major version updates invalidate the agreement's acceptances on the corresponding language. language Write String The language of the agreement file in the format 'languagecode2-country/regioncode2'. id Write String The identifier of the agreementFileVersion object. Versions Write InstanceArray[] Customized versions of the terms of use agreement in the Azure AD tenant. CreatedDateTime Write String The date time representing when the file was created. DisplayName Write String Localized display name of the policy file of an agreement. FileName Write String Name of the agreement file (for example, TOU.pdf). IsDefault Write Boolean If none of the languages matches the client preference, indicates whether this is the default agreement file. IsMajorVersion Write Boolean Indicates whether the agreement file is a major version update. Major version updates invalidate the agreement's acceptances on the corresponding language. Language Write String The language of the agreement file in the format 'languagecode2-country/regioncode2'. Id Write String The identifier of the agreementFileVersion object. CreatedDateTime Write String The date time representing when the file was created. DisplayName Write String Localized display name of the policy file of an agreement. FileData Write Instance Data that represents the terms of use PDF document. FileName Write String Name of the agreement file (for example, TOU.pdf) IsDefault Write Boolean If none of the languages matches the client preference, indicates whether this is the default agreement file. IsMajorVersion Write Boolean Indicates whether the agreement file is a major version update. Major version updates invalidate the agreement's acceptances on the corresponding language. Language Write String The language of the agreement file in the format 'languagecode2-country/regioncode2'. Id Write String The identifier of the agreementFileVersion object. Data Write String Data that represents the terms of use PDF document. Id Key String The identifier of the agreement. DisplayName Write String Display name of the agreement. IsPerDeviceAcceptanceRequired Write Boolean Indicates whether end users are required to accept this agreement on every device that they access it from. IsViewingBeforeAcceptanceRequired Write Boolean Indicates whether the user has to expand the agreement before accepting. TermsExpiration Write Instance Expiration schedule and frequency of agreement for all users. UserReacceptRequiredFrequency Write String The duration after which the user must re-accept the terms of use. Acceptances Write InstanceArray[] Read-only. Information about acceptances of this agreement. File Write Instance Default PDF linked to this agreement. Files Write InstanceArray[] PDFs linked to this agreement. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Azure Active Directory Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write String Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. AADTermsOfUse \u00b6 Description \u00b6 This resource represents a tenant's customizable terms of use agreement that is created and managed with Azure Active Directory (Azure AD). Azure AD Permissions \u00b6 To authenticate via Azure Active Directory, this resource requires the following Application permissions: Automate Agreement.Read.All AgreementAcceptance.Read Export Agreement.ReadWrite.All NOTE: All permissions listed above require admin consent. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADTermsOfUse 'AADTermsOfUse' { DisplayName = \"ToU general 2\" ; Files = @( MSFT_MicrosoftGraphagreementfilelocalization { Id = '041b18d7-a318-4d88-abb1-000000000000' FileName = 'patch-file.pdf' CreatedDateTime = '06/15/2022 17:50:57' Language = 'en-GB' Versions = @( MSFT_MicrosoftGraphagreementfileversion { Id = '041b18d7-a318-4d88-abb1-000000000000' FileData = MSFT_MicrosoftGraphagreementfiledata { data = 'SGVsbG8gd29ybGQ=//truncated-binary' } } ) DisplayName = 'File uploaded via resource' } ); Id = \"9213cf0b-afbf-4397-b7cb-000000000000\" ; IsPerDeviceAcceptanceRequired = $False ; IsViewingBeforeAcceptanceRequired = $True ; Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADTermsOfUse"},{"location":"resources/azure-ad/AADTokenLifetimePolicy/","text":"AADTokenLifetimePolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String DisplayName of the Policy Id Write String ObjectID of the Policy. Description Write String Description of the Policy. Definition Write StringArray[] Definition of the Policy. IsOrganizationDefault Write Boolean IsOrganizationDefault of the Policy. Ensure Write String Specify if the Azure AD Policy should exist or not. Present, Absent Credential Write PSCredential Credentials for the Microsoft Graph delegated permissions. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADTokenLifetimePolicy \u00b6 Description \u00b6 This resource configures the Azure AD Token Lifetime Policies Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADTokenLifetimePolicy 'CreateTokenLifetimePolicy' { DisplayName = \"PolicyDisplayName\" Definition = @( '{\"TokenIssuancePolicy\":{\"Version\": 1,\"SigningAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\"TokenResponseSigningPolicy\": \"TokenOnly\",\"SamlTokenVersion\": \"2.0\"}}' ) IsOrganizationDefault = $false Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADTokenLifetimePolicy"},{"location":"resources/azure-ad/AADUser/","text":"AADUser \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values UserPrincipalName Key String The login name of the user DisplayName Write String The display name for the user FirstName Write String The first name of the user LastName Write String The last name of the user Roles Write StringArray[] The list of Azure Active Directory roles assigned to the user. UsageLocation Write String The country code the user will be assigned to LicenseAssignment Write StringArray[] The account SKU Id for the license to be assigned to the user Password Write PSCredential The password for the account. The parameter is a PSCredential object, but only the Password component will be used City Write String The City name of the user Country Write String The Country name of the user Department Write String The Department name of the user Fax Write String The Fax Number of the user MobilePhone Write String The Mobile Phone Number of the user Office Write String The Office Name of the user PasswordNeverExpires Write Boolean Specifies whether the user password expires periodically. Default value is false PhoneNumber Write String The Phone Number of the user PostalCode Write String The Postal Code of the user PreferredDataLocation Write String The Prefered location to store data of the user PreferredLanguage Write String The Prefered Language of the user State Write String Specifies the state or province where the user is located StreetAddress Write String Specifies the street address of the user Title Write String Specifies the title of the user UserType Write String Specifies the title of the user Guest, Member, Other, Viral Ensure Write String Present ensures the user exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory application used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. AADUser \u00b6 Description \u00b6 This resource allows users to create Azure AD Users and assign them licenses. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { AADUser 'ConfigureJohnSMith' { UserPrincipalName = \"John.Smith@O365DSC1.onmicrosoft.com\" FirstName = \"John\" LastName = \"Smith\" DisplayName = \"John J. Smith\" City = \"Gatineau\" Country = \"Canada\" Office = \"Ottawa - Queen\" LicenseAssignment = @( \"O365dsc1:ENTERPRISEPREMIUM\" ) UsageLocation = \"US\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"AADUser"},{"location":"resources/exchange/EXOAcceptedDomain/","text":"EXOAcceptedDomain \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Specify the Fully Qualified Domain Name for the AcceptedDomain. Ensure Write String Specify if the AcceptedDomain should exist or not. Present, Absent DomainType Write String The type of AcceptedDomain. Currently the EXOAcceptedDomain DSC Resource accepts a value of 'Authoritative' and 'InternalRelay'. Authoritative, InternalRelay MatchSubDomains Write Boolean The MatchSubDomains parameter must be false on Authoritative domains. The default value is false. OutboundOnly Write Boolean OutboundOnly can only be enabled if the DomainType parameter is set to Authoritative or InternalRelay. The default value is false. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAcceptedDomain \u00b6 Description \u00b6 This resource configures the Accepted Email Domains in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAcceptedDomain 'O365DSCDomain' { Identity = 'contoso.com' DomainType = \"Authoritative\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAcceptedDomain"},{"location":"resources/exchange/EXOActiveSyncDeviceAccessRule/","text":"EXOActiveSyncDeviceAccessRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the identity of the device access rule. AccessLevel Write String The AccessLevel parameter specifies whether the devices are allowed, blocked or quarantined. Allow, Block, Quarantine Characteristic Write String The Characteristic parameter specifies the device characteristic or category that's used by the rule. DeviceModel, DeviceType, DeviceOS, UserAgent, XMSWLHeader QueryString Write String The QueryString parameter specifies the device identifier that's used by the rule. This parameter uses a text value that's used with Characteristic parameter value to define the device. Ensure Write String Specify if the Active Sync Device Access Rule should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOActiveSyncDeviceAccessRule \u00b6 Description \u00b6 This resource configures Active Sync Device Access Rules in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOActiveSyncDeviceAccessRule 'ConfigureActiveSyncDeviceAccessRule' { Identity = \"ContosoPhone(DeviceOS)\" Characteristic = \"DeviceOS\" QueryString = \"iOS 6.1 10B145\" AccessLevel = \"Allow\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOActiveSyncDeviceAccessRule"},{"location":"resources/exchange/EXOAddressBookPolicy/","text":"EXOAddressBookPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the name that you want this address book policy to be called. AddressLists Write StringArray[] The AddressLists parameter specifies the address lists that will be used by mailbox users who are assigned this address book policy. This parameter accepts multiple values. GlobalAddressList Write String The GlobalAddressList parameter specifies the identity of the global address list (GAL) that will be used by mailbox users who are assigned this address book policy. You can specify only one GAL for each address book policy. OfflineAddressBook Write String The OfflineAddressBook parameter specifies the identity of the offline address book (OAB) that will be used by mailbox users who are assigned this address book policy. You can specify only one OAB for each address book policy. RoomList Write String The RoomList parameter specifies the name of the room address list. Ensure Write String Specify if the Address Book Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAddressBookPolicy \u00b6 Description \u00b6 This resource configures Address Book Policies in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAddressBookPolicy 'ConfigureAddressBookPolicy' { Name = \"All Fabrikam ABP\" AddressLists = \"\\All Fabrikam\" , \"\\All Fabrikam Mailboxes\" , \"\\All Fabrikam DLs\" , \"\\All Fabrikam Contacts\" RoomList = \"\\All Fabrikam-Rooms\" OfflineAddressBook = \"\\Fabrikam-All-OAB\" GlobalAddressList = \"\\All Fabrikam\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAddressBookPolicy"},{"location":"resources/exchange/EXOAddressList/","text":"EXOAddressList \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies a unique name for the address list. ConditionalCompany Write StringArray[] The ConditionalCompany parameter specifies a precanned filter that's based on the value of the recipient's Company property. ConditionalCustomAttribute1 Write StringArray[] The ConditionalCustomAttribute1 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute1 property. ConditionalCustomAttribute10 Write StringArray[] The ConditionalCustomAttribute10 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute10 property. ConditionalCustomAttribute11 Write StringArray[] The ConditionalCustomAttribute11 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute11 property. ConditionalCustomAttribute12 Write StringArray[] The ConditionalCustomAttribute12 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute12 property. ConditionalCustomAttribute13 Write StringArray[] The ConditionalCustomAttribute13 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute13 property. ConditionalCustomAttribute14 Write StringArray[] The ConditionalCustomAttribute14 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute14 property. ConditionalCustomAttribute15 Write StringArray[] The ConditionalCustomAttribute15 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute15 property. ConditionalCustomAttribute2 Write StringArray[] The ConditionalCustomAttribute2 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute2 property. ConditionalCustomAttribute3 Write StringArray[] The ConditionalCustomAttribute3 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute3 property. ConditionalCustomAttribute4 Write StringArray[] The ConditionalCustomAttribute4 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute4 property. ConditionalCustomAttribute5 Write StringArray[] The ConditionalCustomAttribute5 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute5 property. ConditionalCustomAttribute6 Write StringArray[] The ConditionalCustomAttribute6 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute6 property. ConditionalCustomAttribute7 Write StringArray[] The ConditionalCustomAttribute7 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute7 property. ConditionalCustomAttribute8 Write StringArray[] The ConditionalCustomAttribute8 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute8 property. ConditionalCustomAttribute9 Write StringArray[] The ConditionalCustomAttribute9 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute9 property. ConditionalDepartment Write StringArray[] The ConditionalDepartment parameter specifies a precanned filter that's based on the value of the recipient's Department property. ConditionalStateOrProvince Write StringArray[] The ConditionalStateOrProvince parameter specifies a precanned filter that's based on the value of the recipient's StateOrProvince property. DisplayName Write String The DisplayName parameter specifies the display name of the address list. IncludedRecipients Write StringArray[] The IncludedRecipients parameter specifies a precanned filter that's based on the recipient type. AllRecipients, MailboxUsers, MailContacts, MailGroups, MailUsers, Resources RecipientFilter Write String The RecipientFilter parameter specifies a custom OPath filter that's based on the value of any available recipient property. Ensure Write String Specifies if this AddressList should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAddressList \u00b6 Description \u00b6 This resource configures Exchange Online address lists. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAddressList 'HRUsersAddressList' { Name = \"HR Users\" ConditionalCompany = \"Contoso\" ConditionalDepartment = \"HR\" ConditionalStateOrProvince = \"US\" IncludedRecipients = \"AllRecipients\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAddressList"},{"location":"resources/exchange/EXOAntiPhishPolicy/","text":"EXOAntiPhishPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the antiphishing policy that you want to modify. Ensure Write String Specify if this policy should exist or not. Present, Absent AdminDisplayName Write String The AdminDisplayName parameter specifies a description for the policy. PhishThresholdLevel Write String The PhishThresholdLevel parameter specifies the tolerance level that's used by machine learning in the handling of phishing messages. 1, 2, 3, 4 AuthenticationFailAction Write String The AuthenticationFailAction parameter specifies the action to take when the message fails composite authentication. MoveToJmf, Quarantine TargetedDomainProtectionAction Write String The TargetedDomainProtectionAction\u00e2\u0080\u00afparameter specifies the action to take on detected domain impersonation messages for the domains specified by the TargetedDomainsToProtect parameter. BccMessage, Delete, MoveToJmf, NoAction, Quarantine, Redirect TargetedUserProtectionAction Write String The TargetedUserProtectionAction\u00e2\u0080\u00afparameter specifies the action to take on detected user impersonation messages for the users specified by the TargetedUsersToProtect parameter. BccMessage, Delete, MoveToJmf, NoAction, Quarantine, Redirect Enabled Write Boolean Specify if this policy should be enabled. Default is $true. EnableFirstContactSafetyTips Write Boolean The EnableFirstContactSafetyTips parameter specifies whether to enable or disable the safety tip that's shown when recipients first receive an email from a sender or do not often receive email from a sender. EnableAntispoofEnforcement Write Boolean DEPRECATED. EnableMailboxIntelligence Write Boolean The EnableMailboxIntelligence parameter specifies whether to enable or disable mailbox intelligence (the first contact graph) in domain and user impersonation protection. EnableMailboxIntelligenceProtection Write Boolean The EnableMailboxIntelligenceProtection specifies whether to enable or disable enhanced impersonation results based on each user's individual sender map. This intelligence allows Microsoft 365 to customize user impersonation detection and better handle false positives. EnableOrganizationDomainsProtection Write Boolean The\u00e2\u0080\u00afEnableOrganizationDomainsProtection parameter specifies whether to enable domain impersonation protection for all registered domains in the Office 365 organization. EnableSimilarDomainsSafetyTips Write Boolean The\u00e2\u0080\u00afEnableSimilarDomainsSafetyTips\u00e2\u0080\u00afparameter specifies whether to enable safety tips that are shown to recipients in messages for domain impersonation detections. EnableSimilarUsersSafetyTips Write Boolean The\u00e2\u0080\u00afEnableSimilarUsersSafetyTips\u00e2\u0080\u00afparameter specifies whether to enable safety tips that are shown to recipients in messages for user impersonation detections. EnableSpoofIntelligence Write Boolean The EnableSpoofIntelligence parameter specifies whether to enable or disable antispoofing protection for the policy. EnableTargetedDomainsProtection Write Boolean The\u00e2\u0080\u00afEnableTargetedDomainsProtection parameter specifies whether to enable domain impersonation protection for a list of specified domains. EnableTargetedUserProtection Write Boolean The\u00e2\u0080\u00afEnableTargetedUserProtection parameter specifies whether to enable user impersonation protection for the users specified by the TargetedUsersToProtect parameter EnableUnauthenticatedSender Write Boolean The\u00e2\u0080\u00afEnableUnauthenticatedSender\u00e2\u0080\u00afparameter enables or disables unauthenticated sender identification in Outlook. EnableUnusualCharactersSafetyTips Write Boolean The\u00e2\u0080\u00afEnableUnusualCharactersSafetyTips\u00e2\u0080\u00afparameter specifies whether to enable safety tips that are shown to recipients in messages for unusual characters in domain and user impersonation detections. EnableViaTag Write Boolean This setting is part of spoof protection. The\u00e2\u0080\u00afEnableViaTag\u00e2\u0080\u00afparameter enables or disables adding the via tag to the From address in Outlook. MakeDefault Write Boolean Make this the default antiphishing policy ExcludedDomains Write StringArray[] The\u00e2\u0080\u00afExcludedDomains\u00e2\u0080\u00afparameter specifies trusted domains that are excluded from scanning by antiphishing protection. You can specify multiple domains separated by commas. ExcludedSenders Write StringArray[] The\u00e2\u0080\u00afExcludedSenders\u00e2\u0080\u00afparameter specifies a list of trusted sender email addresses that are excluded from scanning by antiphishing protection. You can specify multiple email addresses separated by commas. ImpersonationProtectionState Write String The ImpersonationProtectionState parameter specifies the configuration of impersonation protection. MailboxIntelligenceProtectionAction Write String The MailboxIntelligenceProtectionAction parameter specifies what to do with messages that fail mailbox intelligence protection. MailboxIntelligenceProtectionActionRecipients Write StringArray[] The\u00e2\u0080\u00afMailboxIntelligenceProtectionActionRecipients parameter specifies the recipients to add to detected messages when the MailboxIntelligenceProtectionAction parameter is set to the value\u00e2\u0080\u00afRedirect or BccMessage. MailboxIntelligenceQuarantineTag Write String The MailboxIntelligenceQuarantineTag specifies the quarantine policy that's used on messages that are quarantined by mailbox intelligence. SpoofQuarantineTag Write String The SpoofQuarantineTag specifies the quarantine policy that's used on messages that are quarantined by spoof intelligence. TargetedDomainActionRecipients Write StringArray[] The\u00e2\u0080\u00afTargetedDomainActionRecipients parameter specifies the recipients to add to detected domain impersonation messages when the TargetedDomainProtectionAction parameter is set to the value\u00e2\u0080\u00afRedirect or BccMessage. A valid value for this parameter is an email address. You can specify multiple email addresses separated by commas. TargetedDomainsToProtect Write StringArray[] The TargetedDomainsToProtect parameter specifies the domains that are included in domain impersonation protection when the EnableTargetedDomainsProtection parameter is set to $true. TargetedDomainQuarantineTag Write String The TargetedDomainQuarantineTag specifies the quarantine policy that's used on messages that are quarantined by domain impersonation protection. TargetedUserActionRecipients Write StringArray[] The\u00e2\u0080\u00afTargetedUserActionRecipients parameter specifies the replacement or additional recipients for detected user impersonation messages when the TargetedUserProtectionAction parameter is set to the value\u00e2\u0080\u00afRedirect or BccMessage. A valid value for this parameter is an email address. You can specify multiple email addresses separated by commas. TargetedUsersToProtect Write StringArray[] The TargetedUsersToProtect parameter specifies the users that are included in user impersonation protection when the EnableTargetedUserProtection parameter is set to $true. TargetedUserQuarantineTag Write String The TargetedUserQuarantineTag specifies the quarantine policy that's used on messages that are quarantined by user impersonation protection. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAntiPhishPolicy \u00b6 Description \u00b6 This resource configures an Anti-Phish Policy in Exchange Online. Reference: https://docs.microsoft.com/en-us/powershell/module/exchange/advanced-threat-protection/new-antiphishpolicy?view=exchange-ps Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAntiPhishPolicy 'ConfigureAntiphishPolicy' { Identity = \"Our Rule\" MakeDefault = $null PhishThresholdLevel = 1 EnableTargetedDomainsProtection = $null Enabled = $null TargetedDomainsToProtect = $null EnableSimilarUsersSafetyTips = $null ExcludedDomains = $null TargetedDomainActionRecipients = $null EnableMailboxIntelligence = $null EnableSimilarDomainsSafetyTips = $null AdminDisplayName = \"\" AuthenticationFailAction = \"MoveToJmf\" TargetedUserProtectionAction = \"NoAction\" TargetedUsersToProtect = $null EnableTargetedUserProtection = $null ExcludedSenders = $null EnableOrganizationDomainsProtection = $null EnableUnusualCharactersSafetyTips = $null TargetedUserActionRecipients = $null Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAntiPhishPolicy"},{"location":"resources/exchange/EXOAntiPhishRule/","text":"EXOAntiPhishRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the antiphishing rule that you want to modify. Ensure Write String Specify if this rule should exist or not. Present, Absent AntiPhishPolicy Required String The AntiPhishPolicy parameter specifies the name of the antiphishing policy that's associated with the antiphishing rule. Enabled Write Boolean Specify if this rule should be enabled. Default is $true. Priority Write UInt32 The Priority parameter specifies a priority value for the rule that determines the order of rule processing. A lower integer value indicates a higher priority, the value 0 is the highest priority, and rules can't have the same priority value. Comments Write String The Comments parameter specifies informative comments for the rule, such as what the rule is used for or how it has changed over time. The length of the comment can't exceed 1024 characters. ExceptIfRecipientDomainIs Write StringArray[] The ExceptIfRecipientDomainIs parameter specifies an exception that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. ExceptIfSentTo Write StringArray[] The ExceptIfSentTo parameter specifies an exception that looks for recipients in messages. You can use any value that uniquely identifies the recipient. ExceptIfSentToMemberOf Write StringArray[] The ExceptIfSentToMemberOf parameter specifies an exception that looks for messages sent to members of groups. You can use any value that uniquely identifies the group. RecipientDomainIs Write StringArray[] The RecipientDomainIs parameter specifies a condition that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. SentTo Write StringArray[] The SentTo parameter specifies a condition that looks for recipients in messages. You can use any value that uniquely identifies the recipient. SentToMemberOf Write StringArray[] The SentToMemberOf parameter looks for messages sent to members of groups. You can use any value that uniquely identifies the group. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAntiPhishRule \u00b6 Description \u00b6 This resource configures an Anti-Phish Rule in Exchange Online. Reference: https://docs.microsoft.com/en-us/powershell/module/exchange/advanced-threat-protection/new-antiphishRule?view=exchange-ps Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAntiPhishRule 'ConfigureAntiPhishRule' { Identity = \"Test Rule\" ExceptIfSentToMemberOf = $null ExceptIfSentTo = $null SentTo = $null ExceptIfRecipientDomainIs = $null Comments = $null AntiPhishPolicy = \"Our Rule\" RecipientDomainIs = $null Enabled = $True SentToMemberOf = @( \"msteams_bb15d4@contoso.onmicrosoft.com\" ) Priority = 1 Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAntiPhishRule"},{"location":"resources/exchange/EXOApplicationAccessPolicy/","text":"EXOApplicationAccessPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the application access policy that you want to modify. AccessRight Write String The AccessRight parameter specifies the permission that you want to assign in the application access policy. RestrictAccess, DenyAccess AppID Write StringArray[] The AppID parameter specifies the GUID of the apps to include in the policy. PolicyScopeGroupId Write String The PolicyScopeGroupID parameter specifies the recipient to define in the policy. You can use any value that uniquely identifies the recipient. Description Write String The Description parameter specifies a description for the policy. Ensure Write String Specify if the Application Access Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOApplicationAccessPolicy \u00b6 Description \u00b6 This resource configures Applications Access Policies in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOApplicationAccessPolicy 'ConfigureApplicationAccessPolicy' { Identity = \"Global\" AccessRight = \"DenyAccess\" AppID = \"3dbc2ae1-7198-45ed-9f9f-d86ba3ec35b5\" , \"6ac794ca-2697-4137-8754-d2a78ae47d93\" PolicyScopeGroupId = \"Engineering Staff\" Description = \"Engineering Group Policy\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOApplicationAccessPolicy"},{"location":"resources/exchange/EXOAtpPolicyForO365/","text":"EXOAtpPolicyForO365 \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes Identity Write String The Identity parameter specifies the ATP policy that you want to modify. There's only one policy named Default. Ensure Write String Since there is only one policy, the default policy, this must be set to 'Present' Present AllowSafeDocsOpen Write Boolean The AllowSafeDocsOpen parameter specifies whether users can click through and bypass the Protected View container even when Safe Documents identifies a file as malicious. EnableATPForSPOTeamsODB Write Boolean The EnableATPForSPOTeamsODB parameter specifies whether ATP is enabled for SharePoint Online, OneDrive for Business and Microsoft Teams. Default is $false. EnableSafeDocs Write Boolean The EnableSafeDocs parameter specifies whether to enable the Safe Documents feature in the organization. Default is $false. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAtpPolicyForO365 \u00b6 Description \u00b6 This resource configures the Advanced Threat Protection (ATP) policy in Office 365. Tenant must be subscribed to ATP. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAtpPolicyForO365 'ConfigureAntiPhishPolicy' { IsSingleInstance = \"Yes\" EnableATPForSPOTeamsODB = $true Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAtpPolicyForO365"},{"location":"resources/exchange/EXOAuthenticationPolicy/","text":"EXOAuthenticationPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the authentication policy you want to view or modify. AllowBasicAuthActiveSync Write Boolean The AllowBasicAuthActiveSync switch specifies whether to allow Basic authentication with Exchange Active Sync. AllowBasicAuthAutodiscover Write Boolean The AllowBasicAuthAutodiscover switch specifies whether to allow Basic authentication with Autodiscover. AllowBasicAuthImap Write Boolean The AllowBasicAuthImap switch specifies whether to allow Basic authentication with IMAP. AllowBasicAuthMapi Write Boolean The AllowBasicAuthMapi switch specifies whether to allow Basic authentication with MAPI. AllowBasicAuthOfflineAddressBook Write Boolean The AllowBasicAuthOfflineAddressBook switch specifies whether to allow Basic authentication with Offline Address Books. AllowBasicAuthOutlookService Write Boolean The AllowBasicAuthOutlookService switch specifies whether to allow Basic authentication with the Outlook service. AllowBasicAuthPop Write Boolean The AllowBasicAuthPop switch specifies whether to allow Basic authentication with POP. AllowBasicAuthPowershell Write Boolean The AllowBasicAuthPowerShell switch specifies whether to allow Basic authentication with PowerShell. AllowBasicAuthReportingWebServices Write Boolean The AllowBasicAuthReporting Web Services switch specifies whether to allow Basic authentication with reporting web services. AllowBasicAuthRpc Write Boolean The AllowBasicAuthRpc switch specifies whether to allow Basic authentication with RPC. AllowBasicAuthSmtp Write Boolean The AllowBasicAuthSmtp switch specifies whether to allow Basic authentication with SMTP. AllowBasicAuthWebServices Write Boolean The AllowBasicAuthWebServices switch specifies whether to allow Basic authentication with Exchange Web Services (EWS). Ensure Write String Specify if the authentication Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAuthenticationPolicy \u00b6 Description \u00b6 This resource configures Authentication Policies in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAuthenticationPolicy 'ConfigureAuthenticationPolicy' { Identity = \"Block Basic Auth\" AllowBasicAuthActiveSync = $False AllowBasicAuthAutodiscover = $False AllowBasicAuthImap = $False AllowBasicAuthMapi = $False AllowBasicAuthOfflineAddressBook = $False AllowBasicAuthOutlookService = $False AllowBasicAuthPop = $False AllowBasicAuthPowerShell = $False AllowBasicAuthReportingWebServices = $False AllowBasicAuthRpc = $False AllowBasicAuthSmtp = $False AllowBasicAuthWebServices = $False Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAuthenticationPolicy"},{"location":"resources/exchange/EXOAuthenticationPolicyAssignment/","text":"EXOAuthenticationPolicyAssignment \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values UserName Key String Name of the user assigned to the authentication policy. AuthenticationPolicyName Write String Name of the authentication policy. Ensure Write String Specify if the authentication Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAuthenticationPolicyAssignment \u00b6 Description \u00b6 This resource assigns Exchange Online Authentication Policies to users. Examples \u00b6 Example 1 \u00b6 Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $EXOAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAuthenticationPolicyAssignment 'ConfigureAuthenticationPolicyAssignment' { UserName = \"John.Smith\" AuthenticationPolicyName = \"Test Policy\" Ensure = \"Present\" Credential = $EXOAdmin } } }","title":"EXOAuthenticationPolicyAssignment"},{"location":"resources/exchange/EXOAvailabilityAddressSpace/","text":"EXOAvailabilityAddressSpace \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the AvailabilityAddressSpace you want to modify. AccessMethod Write String The AccessMethod parameter specifies how the free/busy data is accessed. Valid values are:PerUserFB, OrgWideFB, OrgWideFBBasic,InternalProxy PerUserFB, OrgWideFB, OrgWideFBBasic, InternalProxy Credentials Write String The Credentials parameter specifies the username and password that's used to access the Availability services in the target forest. ForestName Write String The ForestName parameter specifies the SMTP domain name of the target forest for users whose free/busy data must be retrieved. If your users are distributed among multiple SMTP domains in the target forest, run the Add-AvailabilityAddressSpace command once for each SMTP domain. TargetAutodiscoverEpr Write String The TargetAutodiscoverEpr parameter specifies the Autodiscover URL of Exchange Web Services for the external organization. Exchange uses Autodiscover to automatically detect the correct server endpoint for external requests. Ensure Write String Specifies if this AvailabilityAddressSpace should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAvailabilityAddressSpace \u00b6 Description \u00b6 Create a new AvailabilityAddressSpace in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAvailabilityAddressSpace 'ConfigureAvailabilityAddressSpace' { Identity = \"Contoso.com\" AccessMethod = \"OrgWideFB\" Credentials = $credsGlobalAdmin ForestName = \"example.contoso.com\" TargetAutodiscoverEpr = \"https://contoso.com/autodiscover/autodiscover.xml\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAvailabilityAddressSpace"},{"location":"resources/exchange/EXOAvailabilityConfig/","text":"EXOAvailabilityConfig \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values OrgWideAccount Key String Specify the OrgWideAccount for the AvailabilityConfig. Ensure Write String Specify if the AvailabilityConfig should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAvailabilityConfig \u00b6 Description \u00b6 This resource configures the Availability Config in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOAvailabilityConfig 'ConfigureAvailabilityConfig' { OrgWideAccount = \"admin@contoso.onmicrosoft.com\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOAvailabilityConfig"},{"location":"resources/exchange/EXOCASMailboxPlan/","text":"EXOCASMailboxPlan \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the CAS Mailbox Plan that you want to modify. Ensure Write String CASMailboxPlans cannot be created/removed in O365. This must be set to 'Present' Present ActiveSyncEnabled Write Boolean The ActiveSyncEnabled parameter enables or disables access to the mailbox by using Exchange Active Sync. Default is $true. ImapEnabled Write Boolean The ImapEnabled parameter enables or disables access to the mailbox by using IMAP4 clients. The default value is $true for all CAS mailbox plans except ExchangeOnlineDeskless which is $false by default. OwaMailboxPolicy Write String The OwaMailboxPolicy parameter specifies the Outlook on the web (formerly known as Outlook Web App) mailbox policy for the mailbox plan. The default value is OwaMailboxPolicy-Default. You can use the Get-OwaMailboxPolicy cmdlet to view the available Outlook on the web mailbox policies. PopEnabled Write Boolean The PopEnabled parameter enables or disables access to the mailbox by using POP3 clients. Default is $true. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOCASMailboxPlan \u00b6 Description \u00b6 This resource configures Client Access services (CAS) mailbox plans in cloud-based organizations. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOCASMailboxPlan 'ConfigureCASMailboxPlan' { ActiveSyncEnabled = $True OwaMailboxPolicy = \"OwaMailboxPolicy-Default\" PopEnabled = $True Identity = $CASIdentity ImapEnabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOCASMailboxPlan"},{"location":"resources/exchange/EXOCASMailboxSettings/","text":"EXOCASMailboxSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the mailbox that you want to configure. ActiveSyncAllowedDeviceIDs Write StringArray[] TheActiveSyncAllowedDeviceIDs parameter specifies one or more Exchange ActiveSync device IDs that are allowed to synchronize with the mailbox. ActiveSyncBlockedDeviceIDs Write StringArray[] The ActiveSyncBlockedDeviceIDs parameter specifies one or more Exchange ActiveSync device IDs that aren't allowed to synchronize with the mailbox. ActiveSyncDebugLogging Write Boolean The ActiveSyncDebugLogging parameter enables or disables Exchange ActiveSync debug logging for the mailbox. ActiveSyncEnabled Write Boolean The ActiveSyncEnabled parameter enables or disables access to the mailbox using Exchange ActiveSync. ActiveSyncMailboxPolicy Write String The ActiveSyncMailboxPolicy parameter specifies the Exchange ActiveSync mailbox policy for the mailbox. ActiveSyncSuppressReadReceipt Write Boolean The ActiveSyncSuppressReadReceipt parameter controls the behavior of read receipts for Exchange ActiveSync clients that access the mailbox. EwsAllowEntourage Write Boolean The EwsAllowEntourage parameter enables or disables access to the mailbox by Microsoft Entourage clients that use Exchange Web Services. EwsAllowList Write StringArray[] The EwsAllowList parameter specifies the Exchange Web Services applications (user agent strings) that are allowed to access the mailbox. EwsAllowMacOutlook Write Boolean The EwsAllowMacOutlook parameter enables or disables access to the mailbox by Outlook for Mac clients that use Exchange Web Services. EwsAllowOutlook Write Boolean The EwsAllowOutlook parameter enables or disables access to the mailbox by Outlook clients that use Exchange Web Services. EwsApplicationAccessPolicy Write String The EwsApplicationAccessPolicy parameter controls access to the mailbox using Exchange Web Services applications. EwsBlockList Write StringArray[] The EwsBlockList parameter specifies the Exchange Web Services applications (user agent strings) that aren't allowed to access the mailbox using Exchange Web Services. EwsEnabled Write Boolean The EwsEnabled parameter enables or disables access to the mailbox using Exchange Web Services clients. ImapEnabled Write Boolean The ImapEnabled parameter enables or disables access to the mailbox using IMAP4 clients. ImapMessagesRetrievalMimeFormat Write String The ImapMessagesRetrievalMimeFormat parameter specifies the message format for IMAP4 clients that access the mailbox. ImapForceICalForCalendarRetrievalOption Write Boolean The ImapForceICalForCalendarRetrievalOption parameter specifies how meeting requests are presented to IMAP4 clients that access the mailbox. ImapSuppressReadReceipt Write Boolean The ImapSuppressReadReceipt parameter controls the behavior of read receipts for IMAP4 clients that access the mailbox. ImapUseProtocolDefaults Write Boolean The ImapUseProtocolDefaults parameter specifies whether to use the IMAP4 protocol defaults for the mailbox. MacOutlookEnabled Write Boolean The MacOutlookEnabled parameter enables or disables access to the mailbox using Outlook for Mac clients that use Microsoft Sync technology. MAPIEnabled Write Boolean The MAPIEnabled parameter enables or disables access to the mailbox using MAPI clients (for example, Outlook). OneWinNativeOutlookEnabled Write Boolean The OneWinNativeOutlookEnabled parameter enables or disables access to the mailbox using the new Outlook for Windows. OutlookMobileEnabled Write Boolean The OutlookMobileEnabled parameter enables or disables access to the mailbox using Outlook for iOS and Android. OWAEnabled Write Boolean The OWAEnabled parameter enables or disables access to the mailbox using Outlook on the web (formerly known as Outlook Web App or OWA). OWAforDevicesEnabled Write Boolean The OWAforDevicesEnabled parameter enables or disables access to the mailbox using the older Outlook Web App (OWA) app on iOS and Android devices. OwaMailboxPolicy Write String The OwaMailboxPolicy parameter specifies the Outlook on the web mailbox policy for the mailbox. PopEnabled Write Boolean The PopEnabled parameter enables or disables access to the mailbox using POP3 clients. PopForceICalForCalendarRetrievalOption Write Boolean The PopForceICalForCalendarRetrievalOption parameter specifies how meeting requests are presented to POP3 clients that access the mailbox. PopMessagesRetrievalMimeFormat Write String The PopMessagesRetrievalMimeFormat parameter specifies the message format for POP3 clients that access the mailbox. PopSuppressReadReceipt Write Boolean The PopSuppressReadReceipt parameter controls the behavior of read receipts for POP3 clients that access the mailbox. PopUseProtocolDefaults Write Boolean The PopUseProtocolDefaults parameter specifies whether to use the POP3 protocol defaults for the mailbox. PublicFolderClientAccess Write Boolean The PublicFolderClientAccess parameter enables or disables access to public folders in Microsoft Outlook. ShowGalAsDefaultView Write Boolean The ShowGalAsDefaultView parameter specifies whether the global address list (GAL) is the default recipient picker for messages. SmtpClientAuthenticationDisabled Write Boolean The SmtpClientAuthenticationDisabled parameter specifies whether to disable authenticated SMTP (SMTP AUTH) for the mailbox. UniversalOutlookEnabled Write Boolean The UniversalOutlookEnabled parameter enables or disables access to the mailbox using Windows 10 Mail and Calendar. Ensure Write String Present ensures the Mailbox CAS settings are applied. Present Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOCASMailboxSettings \u00b6 Description \u00b6 This resource configures CAS mailbox settings. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. $ConfigurationData = @{ AllNodes = @( @{ NodeName = \"localhost\" } ) } Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOCASMailboxSettings 'AdeleVCasMailboxSettings' { ActiveSyncAllowedDeviceIDs = @(); ActiveSyncBlockedDeviceIDs = @(); ActiveSyncDebugLogging = $False ; ActiveSyncEnabled = $True ; ActiveSyncMailboxPolicy = \"Demo EXO Mobile Device Policy Default\" ; ActiveSyncSuppressReadReceipt = $False ; EwsEnabled = $True ; Identity = \"AdeleV\" ; ImapEnabled = $False ; ImapForceICalForCalendarRetrievalOption = $False ; ImapMessagesRetrievalMimeFormat = \"BestBodyFormat\" ; ImapSuppressReadReceipt = $False ; ImapUseProtocolDefaults = $True ; MacOutlookEnabled = $True ; MAPIEnabled = $True ; OutlookMobileEnabled = $True ; OWAEnabled = $True ; OWAforDevicesEnabled = $True ; OwaMailboxPolicy = \"OwaMailboxPolicy-Default\" ; PopEnabled = $False ; PopForceICalForCalendarRetrievalOption = $True ; PopMessagesRetrievalMimeFormat = \"BestBodyFormat\" ; PopSuppressReadReceipt = $False ; PopUseProtocolDefaults = $True ; PublicFolderClientAccess = $False ; ShowGalAsDefaultView = $True ; UniversalOutlookEnabled = $True ; Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOCASMailboxSettings"},{"location":"resources/exchange/EXOClientAccessRule/","text":"EXOClientAccessRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the client access rule that you want to modify. Action Required String The Action parameter specifies the action for the client access rule. Valid values for this parameter are AllowAccess and DenyAccess. AllowAccess, DenyAccess AnyOfAuthenticationTypes Write StringArray[] The AnyOfAuthenticationTypes parameter specifies a condition for the client access rule that is based on the client's authentication type. Valid values for this parameter are AdfsAuthentication, BasicAuthentication, CertificateBasedAuthentication, NonBasicAuthentication, OAuthAuthentication. AdfsAuthentication, BasicAuthentication, CertificateBasedAuthentication, NonBasicAuthentication, OAuthAuthentication AnyOfClientIPAddressesOrRanges Write StringArray[] The AnyOfClientIPAddressesOrRanges parameter specifies a condition for the client access rule that is based on the client's IP address. Valid values for this parameter are: A single IP address, an IP address range, a CIDR IP. AnyOfProtocols Write StringArray[] The AnyOfProtocols parameter specifies a condition for the client access rule that is based on the client's protocol. Valid values for this parameter are ExchangeActiveSync,ExchangeAdminCenter,ExchangeWebServices,IMAP4,OfflineAddressBook,OutlookAnywhere,OutlookWebApp,POP3,PowerShellWebServices,RemotePowerShell,REST,UniversalOutlook. ExchangeActiveSync, ExchangeAdminCenter, ExchangeWebServices, IMAP4, OfflineAddressBook, OutlookAnywhere, OutlookWebApp, POP3, PowerShellWebServices, RemotePowerShell, REST, UniversalOutlook Enabled Write Boolean The Enabled parameter specifies whether the client access rule is enabled or disabled. Default is $true. ExceptAnyOfAuthenticationTypes Write StringArray[] The ExceptAnyOfAuthenticationTypes parameter specifies an exception for the client access rule that is based on the client's authentication type. Valid values for this parameter are AdfsAuthentication, BasicAuthentication, CertificateBasedAuthentication, NonBasicAuthentication, OAuthAuthentication. AdfsAuthentication, BasicAuthentication, CertificateBasedAuthentication, NonBasicAuthentication, OAuthAuthentication ExceptAnyOfClientIPAddressesOrRanges Write StringArray[] The ExceptAnyOfClientIPAddressesOrRanges parameter specifies an exception for the client access rule that is based on the client's IP address. Valid values for this parameter are: A single IP address, an IP address range, a CIDR IP. ExceptAnyOfProtocols Write StringArray[] The ExceptAnyOfProtocols parameter specifies an exception for the client access rule that is based on the client's protocol. Valid values for this parameter are ExchangeActiveSync,ExchangeAdminCenter,ExchangeWebServices,IMAP4,OfflineAddressBook,OutlookAnywhere,OutlookWebApp,POP3,PowerShellWebServices,RemotePowerShell,REST,UniversalOutlook. ExchangeActiveSync, ExchangeAdminCenter, ExchangeWebServices, IMAP4, OfflineAddressBook, OutlookAnywhere, OutlookWebApp, POP3, PowerShellWebServices, RemotePowerShell, REST, UniversalOutlook ExceptUsernameMatchesAnyOfPatterns Write StringArray[] The ExceptUsernameMatchesAnyOfPatterns parameter specifies an exception for the client access rule that is based on the user's account name. Priority Write UInt32 The Priority parameter specifies a priority value for the client access rule. A lower integer value indicates a higher priority, and a higher priority rule is evaluated before a lower priority rule. The default value is 1. RuleScope Write String The RuleScope parameter specifies the scope of the client access rule. Valid values are All and Users All, Users UserRecipientFilter Write String The UserRecipientFilter parameter specifies a condition for the client access rule that uses OPath filter syntax to identify the user. UsernameMatchesAnyOfPatterns Write StringArray[] The UsernameMatchesAnyOfPatterns parameter specifies a condition for the client access rule that is based on the user's account name. Ensure Write String Specifies if this Client Access Rule should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOClientAccessRule \u00b6 Description \u00b6 This resource configures Client Access sRules. Client Access Rules help you control access to your organization based on the properties of the connection. Note: Not all authentication types are supported for all protocols. The supported authentication types per protocol can be found here: https://docs.microsoft.com/en-us/exchange/clients-and-mobile-in-exchange-online/client-access-rules/client-access-rules Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOClientAccessRule 'ConfigureClientAccessRule' { Action = \"AllowAccess\" UserRecipientFilter = $null ExceptAnyOfAuthenticationTypes = @() ExceptUsernameMatchesAnyOfPatterns = @() AnyOfAuthenticationTypes = @() UsernameMatchesAnyOfPatterns = @() Identity = \"Always Allow Remote PowerShell\" Priority = 1 AnyOfProtocols = @( \"RemotePowerShell\" ) Enabled = $True ExceptAnyOfProtocols = @() ExceptAnyOfClientIPAddressesOrRanges = @() AnyOfClientIPAddressesOrRanges = @() Ensure = \"Present\" Credential = $GlobalAdmin } } }","title":"EXOClientAccessRule"},{"location":"resources/exchange/EXODataClassification/","text":"EXODataClassification \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the data classification rule that you want to modify. Description Write String The Description parameter specifies a description for the data classification rule. You use the Description parameter with the Locale and Name parameters to specify descriptions for the data classification rule in different languages. Fingerprints Write StringArray[] The Fingerprints parameter specifies the byte-encoded document files that are used as fingerprints by the data classification rule. IsDefault Write Boolean IsDefault is used with the Locale parameter to specify the default language for the data classification rule. Locale Write String The Locale parameter adds or removes languages that are associated with the data classification rule. Name Write String The Name parameter specifies a name for the data classification rule. The value must be less than 256 characters. Ensure Write String Specifies if this policy should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXODataClassification \u00b6 Description \u00b6 Create a new data classification policy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXODataClassification 'ConfigureDataClassification' { Identity = 'Contoso Confidential' Name = 'Contoso Confidentiel' Description = 'Ce message contient des informations confidentielles.' Locale = 'fr' IsDefault = $true Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXODataClassification"},{"location":"resources/exchange/EXODataEncryptionPolicy/","text":"EXODataEncryptionPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the data encryption policy that you want to modify. AzureKeyIDs Write StringArray[] The AzureKeyIDs parameter specifies the URI values of the Azure Key Vault keys to associate with the data encryption policy. Description Write String The Description parameter specifies an optional description for the data encryption policy Enabled Write Boolean The Enabled parameter enables or disable the data encryption policy. Name Write String The Name parameter specifies the unique name for the data encryption policy. PermanentDataPurgeContact Write String The PermanentDataPurgeContact parameter specifies a contact for the purge of all data that's encrypted by the data encryption policy. PermanentDataPurgeReason Write String The PermanentDataPurgeReason parameter specifies a descriptive reason for the purge of all data that's encrypted by the data encryption policy Ensure Write String Specifies if this policy should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXODataEncryptionPolicy \u00b6 Description \u00b6 Create a new Data Encryption policy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXODataEncryptionPolicy 'ConfigureDataEncryptionPolicy' { Identity = 'US Mailboxes' Name = 'All US Mailboxes' Description = 'All Mailboxes of users in the US' Enabled = $true Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXODataEncryptionPolicy"},{"location":"resources/exchange/EXODistributionGroup/","text":"EXODistributionGroup \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies a unique name for the address list. Alias Write String Exchange alias (also known as the mail nickname) for the recipient BccBlocked Write Boolean Is Bcc blocked for the distribution group. BypassNestedModerationEnabled Write Boolean The ByPassNestedModerationEnabled parameter specifies how to handle message approval when a moderated group contains other moderated groups as members. Description Write String Description of the distribution group. DisplayName Write String The DisplayName parameter specifies the display name of the group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. HiddenGroupMembershipEnabled Write Boolean The HiddenGroupMembershipEnabled switch specifies whether to hide the members of the distribution group from members of the group and users who aren't members of the group. ManagedBy Write StringArray[] The ManagedBy parameter specifies an owner for the group. A group must have at least one owner. MemberDepartRestriction Write String The MemberDepartRestriction parameter specifies the restrictions that you put on requests to leave the group. Valid values are: Open & Closed Open, Closed MemberJoinRestriction Write String The MemberJoinRestriction parameter specifies the restrictions that you put on requests to join the group. Valid values are: Open, Closed & ApprovalRequired Open, Closed, ApprovalRequired Members Write StringArray[] The Members parameter specifies the recipients (mail-enabled objects) that are members of the group. You can use any value that uniquely identifies the recipient. ModeratedBy Write StringArray[] The ModeratedBy parameter specifies one or more moderators for this group. A moderator approves messages sent to the group before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. ModerationEnabled Write Boolean The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Notes Write String The Notes parameters specifies additional information about the object. OrganizationalUnit Write String The OrganizationalUnit parameter specifies the location in Active Directory where the group is created. PrimarySmtpAddress Write String The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient. RequireSenderAuthenticationEnabled Write Boolean The RequireSenderAuthenticationEnabled parameter specifies whether to accept messages only from authenticated (internal) senders. RoomList Write Boolean The RoomList switch specifies that all members of this distribution group are room mailboxes. You don't need to specify a value with this switch. SendModerationNotifications Write String The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are: Always, Internal & Never Always, Internal, Never Type Write String The Type parameter specifies the type of group that you want to create. Valid values are: Distribution & Security Distribution, Security Ensure Write String Specifies if this AddressList should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXODistributionGroup \u00b6 Description \u00b6 This resource configures Exchange Online distribution groups. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXODistributionGroup 'DemoDG' { Alias = \"demodg\" ; BccBlocked = $False ; BypassNestedModerationEnabled = $False ; DisplayName = \"My Demo DG\" ; Ensure = \"Present\" ; HiddenGroupMembershipEnabled = $True ; ManagedBy = @( \"john.smith@contoso.com\" ); MemberDepartRestriction = \"Open\" ; MemberJoinRestriction = \"Closed\" ; ModeratedBy = @( \"admin@contoso.com\" ); ModerationEnabled = $False ; Name = \"DemoDG\" ; OrganizationalUnit = \"nampr03a010.prod.outlook.com/Microsoft Exchange Hosted Organizations/contoso.com\" ; PrimarySmtpAddress = \"demodg@contoso.com\" ; RequireSenderAuthenticationEnabled = $True ; SendModerationNotifications = \"Always\" ; Credential = $credsAdmin } } }","title":"EXODistributionGroup"},{"location":"resources/exchange/EXODkimSigningConfig/","text":"EXODkimSigningConfig \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the DKIM signing policy that you want to modify. This should be the FQDN. AdminDisplayName Write String The AdminDisplayName parameter specifies a description for the policy. BodyCanonicalization Write String The BodyCanonicalization parameter specifies the canonicalization algorithm that's used to create and verify the message body part of the DKIM signature. This value effectively controls the sensitivity of DKIM to changes to the message body in transit. Valid values are 'Simple' or 'Relaxed'. 'Relaxed' is the default. Simple, Relaxed HeaderCanonicalization Write String The HeaderCanonicalization parameter specifies the canonicalization algorithm that's used to create and verify the message header part of the DKIM signature. This value effectively controls the sensitivity of DKIM to changes to the message headers in transit. Valid values are 'Simple' or 'Relaxed'. 'Relaxed' is the default. Simple, Relaxed KeySize Write UInt16 The KeySize parameter specifies the size in bits of the public key that's used in the DKIM signing policy. The only available value is 1024. 1024 Enabled Write Boolean The Enabled parameter specifies whether the DKIM Signing Configuration is enabled or disabled. Default is $true. Ensure Write String Specifies if this Client Access Rule should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXODkimSigningConfig \u00b6 Description \u00b6 This resource configures the DomainKeys Identified Mail (DKIM) signing policy settings for domains in a cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXODkimSigningConfig 'ConfigureDKIMSigning' { KeySize = 1024 Identity = 'contoso.onmicrosoft.com' HeaderCanonicalization = \"Relaxed\" Enabled = $True BodyCanonicalization = \"Relaxed\" AdminDisplayName = \"\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXODkimSigningConfig"},{"location":"resources/exchange/EXOEmailAddressPolicy/","text":"EXOEmailAddressPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the email address policy. The maximum length is 64 characters. Priority Write String The Priority parameter specifies the order that the email address policies are evaluated. By default, every time that you add a new email address policy, the policy is assigned a priority of N+1, where N is the number of email address policies that you've created. EnabledEmailAddressTemplates Write StringArray[] The EnabledEmailAddressTemplates parameter specifies the rules in the email address policy that are used to generate email addresses for recipients. EnabledPrimarySMTPAddressTemplate Write StringArray[] The EnabledPrimarySMTPAddressTemplate parameter specifies the specifies the rule in the email address policy that's used to generate the primary SMTP email addresses for recipients. You can use this parameter instead of the EnabledEmailAddressTemplates if the policy only applies the primary email address and no additional proxy addresses. ManagedByFilter Write String The ManagedByFilter parameter specifies the email address policies to apply to Office 365 groups based on the properties of the users who create the Office 365 groups. Ensure Write String Specify if the Email Address Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOEmailAddressPolicy \u00b6 Description \u00b6 This resource configures Email address policies in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOEmailAddressPolicy 'ConfigureEmailAddressPolicy' { Name = \"Default Policy\" EnabledEmailAddressTemplates = @( \"SMTP:@contoso.onmicrosoft.com\" ) EnabledPrimarySMTPAddressTemplate = \"@contoso.onmicrosoft.com\" ManagedByFilter = \"\" Priority = \"Lowest\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOEmailAddressPolicy"},{"location":"resources/exchange/EXOGlobalAddressList/","text":"EXOGlobalAddressList \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the GAL. The maximum length is 64 characters. ConditionalCompany Write StringArray[] The ConditionalCompany parameter specifies a precanned filter that's based on the value of the recipient's Company property. ConditionalCustomAttribute1 Write StringArray[] The ConditionalCustomAttribute1 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute1 property. ConditionalCustomAttribute10 Write StringArray[] The ConditionalCustomAttribute10 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute10 property. ConditionalCustomAttribute11 Write StringArray[] The ConditionalCustomAttribute11 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute11 property. ConditionalCustomAttribute12 Write StringArray[] The ConditionalCustomAttribute12 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute12 property. ConditionalCustomAttribute13 Write StringArray[] The ConditionalCustomAttribute13 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute13 property. ConditionalCustomAttribute14 Write StringArray[] The ConditionalCustomAttribute14 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute14 property. ConditionalCustomAttribute15 Write StringArray[] The ConditionalCustomAttribute15 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute15 property. ConditionalCustomAttribute2 Write StringArray[] The ConditionalCustomAttribute2 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute2 property. ConditionalCustomAttribute3 Write StringArray[] The ConditionalCustomAttribute3 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute3 property. ConditionalCustomAttribute4 Write StringArray[] The ConditionalCustomAttribute4 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute4 property. ConditionalCustomAttribute5 Write StringArray[] The ConditionalCustomAttribute5 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute5 property. ConditionalCustomAttribute6 Write StringArray[] The ConditionalCustomAttribute6 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute6 property. ConditionalCustomAttribute7 Write StringArray[] The ConditionalCustomAttribute7 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute7 property. ConditionalCustomAttribute8 Write StringArray[] The ConditionalCustomAttribute8 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute8 property. ConditionalCustomAttribute9 Write StringArray[] The ConditionalCustomAttribute9 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute9 property. ConditionalDepartment Write StringArray[] The ConditionalDepartment parameter specifies a precanned filter that's based on the value of the recipient's Department property. ConditionalStateOrProvince Write StringArray[] The ConditionalStateOrProvince parameter specifies a precanned filter that's based on the value of the recipient's StateOrProvince property. IncludedRecipients Write StringArray[] The IncludedRecipients parameter specifies a precanned filter that's based on the recipient type. , AllRecipients, MailboxUsers, MailContacts, MailGroups, MailUsers, Resources RecipientFilter Write String The RecipientFilter parameter specifies an OPath filter that's based on the value of any available recipient property. Ensure Write String Specify if the Global Address List should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOGlobalAddressList \u00b6 Description \u00b6 This resource configures Global Address Lists in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOGlobalAddressList 'ConfigureGlobalAddressList' { Name = \"Contoso Human Resources in Washington\" ConditionalCompany = \"Contoso\" ConditionalDepartment = \"Human Resources\" ConditionalStateOrProvince = \"Washington\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOGlobalAddressList"},{"location":"resources/exchange/EXOHostedConnectionFilterPolicy/","text":"EXOHostedConnectionFilterPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the Hosted Connection Filter Policy that you want to modify. AdminDisplayName Write String The AdminDisplayName parameter specifies a description for the policy. EnableSafeList Write Boolean The EnableSafeList parameter enables or disables use of the safe list. The safe list is a dynamic allow list in the Microsoft datacenter that requires no customer configuration. Valid input for this parameter is $true or $false. The default value is $false. IPAllowList Write StringArray[] The IPAllowList parameter specifies IP addresses from which messages are always allowed. Messages from the IP addresses you specify won't be identified as spam, despite any other spam characteristics of the messages. Valid values for this parameter are: A single IP address, an IP address range, a CIDR IP. IPBlockList Write StringArray[] The IPBlockList parameter specifies IP addresses from which messages are never allowed. Messages from the IP addresses you specify are blocked without any further spam scanning. Valid values for this parameter are: A single IP address, an IP address range, a CIDR IP. MakeDefault Write Boolean The MakeDefault parameter makes the specified policy the default connection filter policy. Default is $false. Ensure Write String Specifies if this Hosted Connection Filter Policy should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOHostedConnectionFilterPolicy \u00b6 Description \u00b6 This resource configures the settings of connection filter policies in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOHostedConnectionFilterPolicy 'ConfigureHostedConnectionFilterPolicy' { Identity = \"Default\" AdminDisplayName = \"\" EnableSafeList = $False IPAllowList = @() IPBlockList = @() MakeDefault = $False Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOHostedConnectionFilterPolicy"},{"location":"resources/exchange/EXOHostedContentFilterPolicy/","text":"EXOHostedContentFilterPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the Hosted Content Filter Policy that you want to modify. AddXHeaderValue Write String The AddXHeaderValue parameter specifies the X-header value to add to spam messages when an action parameter is set to the value AddXHeader. AdminDisplayName Write String The AdminDisplayName parameter specifies a description for the policy. AllowedSenderDomains Write StringArray[] The AllowedSenderDomains parameter specifies trusted domains that aren't processed by the spam filter. AllowedSenders Write StringArray[] The AllowedSenders parameter specifies a list of trusted senders that aren't processed by the spam filter. BlockedSenderDomains Write StringArray[] The BlockedSenderDomains parameter specifies domains that are always marked as spam sources. BlockedSenders Write StringArray[] The BlockedSenders parameter specifies senders that are always marked as spam sources. BulkQuarantineTag Write String The BulkQuarantineTag parameter specifies the quarantine policy that's used on messages that are quarantined as bulk email. BulkSpamAction Write String The BulkSpamAction parameter specifies the action to take on messages that are classified as bulk email. MoveToJmf, AddXHeader, ModifySubject, Redirect, Delete, Quarantine, NoAction BulkThreshold Write UInt32 The BulkThreshold parameter specifies the Bulk Complaint Level (BCL) threshold setting. Valid values are from 1 - 9, where 1 marks most bulk email as spam, and 9 allows the most bulk email to be delivered. The default value is 7. DownloadLink Write Boolean The DownloadLink parameter shows or hides a link in end-user spam notification messages to download the Junk Email Reporting Tool plugin for Outlook. Valid input for this parameter is $true or $false. The default value is $false. EnableEndUserSpamNotifications Write Boolean The EnableEndUserSpamNotification parameter enables for disables sending end-user spam quarantine notification messages. Valid input for this parameter is $true or $false. The default value is $false. EnableLanguageBlockList Write Boolean The EnableLanguageBlockList parameter enables or disables blocking email messages that are written in specific languages, regardless of the message contents. Valid input for this parameter is $true or $false. The default value is $false. EnableRegionBlockList Write Boolean The EnableRegionBlockList parameter enables or disables blocking email messages that are sent from specific countries or regions, regardless of the message contents. Valid input for this parameter is $true or $false. The default value is $false. EndUserSpamNotificationCustomFromAddress Write String This parameter has been deprecated and is no longer used. The EndUserSpamNotificationCustomFromAddress parameter specifies a custom From address for end-user spam notification messages. Valid input for this parameter is an SMTP email address or an empty string. EndUserSpamNotificationCustomFromName Write String This parameter has been deprecated and is no longer used. The EndUserSpamNotificationCustomFromName parameter specifies a custom display name in the From field for end-user spam notification messages. EndUserSpamNotificationCustomSubject Write String The EndUserSpamNotificationCustomSubject parameter specifies a custom subject for end-user spam notification messages. EndUserSpamNotificationFrequency Write UInt32 The EndUserSpamNotificationFrequency parameter specifies the repeat interval in days that end-user spam notification messages are sent. Valid input for this parameter is an integer between 1 and 15. The default value is 3. EndUserSpamNotificationLanguage Write String The EndUserSpamNotificationLanguage parameter specifies the language of end-user spam notification messages. The default value is Default. This means the default language of end-user spam notification messages is the default language of the cloud-based organization. Default, English, French, German, Italian, Japanese, Spanish, Korean, Portuguese, Russian, ChineseSimplified, ChineseTraditional, Amharic, Arabic, Bulgarian, BengaliIndia, Catalan, Czech, Cyrillic, Danish, Greek, Estonian, Basque, Farsi, Finnish, Filipino, Galician, Gujarati, Hebrew, Hindi, Croatian, Hungarian, Indonesian, Icelandic, Kazakh, Kannada, Lithuanian, Latvian, Malayalam, Marathi, Malay, Dutch, NorwegianNynorsk, Norwegian, Oriya, Polish, PortuguesePortugal, Romanian, Slovak, Slovenian, SerbianCyrillic, Serbian, Swedish, Swahili, Tamil, Telugu, Thai, Turkish, Ukrainian, Urdu, Vietnamese HighConfidencePhishAction Write String The HighConfidencePhishAction parameter specifies the action to take on messages that are marked as high confidence phishing MoveToJmf, Redirect, Quarantine HighConfidencePhishQuarantineTag Write String The HighConfidencePhishQuarantineTag parameter specifies the quarantine policy that's used on messages that are quarantined as high confidence phishing. HighConfidenceSpamAction Write String The HighConfidenceSpamAction parameter specifies the action to take on messages that are classified as high confidence spam. MoveToJmf, AddXHeader, ModifySubject, Redirect, Delete, Quarantine, NoAction HighConfidenceSpamQuarantineTag Write String The HighConfidenceSpamQuarantineTag parameter specifies the quarantine policy that's used on messages that are quarantined as high confidence spam. IncreaseScoreWithBizOrInfoUrls Write String The IncreaseScoreWithBizOrInfoUrls parameter increases the spam score of messages that contain links to .biz or .info domains. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test IncreaseScoreWithImageLinks Write String The IncreaseScoreWithImageLinks parameter increases the spam score of messages that contain image links to remote websites. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test IncreaseScoreWithNumericIps Write String The IncreaseScoreWithNumericIps parameter increases the spam score of messages that contain links to IP addresses. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test IncreaseScoreWithRedirectToOtherPort Write String The IncreaseScoreWithRedirectToOtherPort parameter increases the spam score of messages that contain links that redirect to other TCP ports. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test InlineSafetyTipsEnabled Write Boolean The InlineSafetyTipsEnabled parameter specifies whether to enable or disable safety tips that are shown to recipients in messages. The default is $true LanguageBlockList Write StringArray[] The LanguageBlockList parameter specifies the languages to block when messages are blocked based on their language. Valid input for this parameter is a supported ISO 639-1 lowercase two-letter language code. You can specify multiple values separated by commas. This parameter is only use when the EnableRegionBlockList parameter is set to $true. MakeDefault Write Boolean The MakeDefault parameter makes the specified content filter policy the default content filter policy. The default value is $false MarkAsSpamBulkMail Write String The MarkAsSpamBulkMail parameter classifies the message as spam when the message is identified as a bulk email message. Valid values for this parameter are Off, On or Test. The default value is On. Off, On, Test MarkAsSpamEmbedTagsInHtml Write String The MarkAsSpamEmbedTagsInHtml parameter classifies the message as spam when the message contains HTML tags. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test MarkAsSpamEmptyMessages Write String The MarkAsSpamEmptyMessages parameter classifies the message as spam when the message is empty. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test MarkAsSpamFormTagsInHtml Write String The MarkAsSpamFormTagsInHtml parameter classifies the message as spam when the message contains HTML tags. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test MarkAsSpamFramesInHtml Write String The MarkAsSpamFramesInHtml parameter classifies the message as spam when the message contains HTML or tags. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test MarkAsSpamFromAddressAuthFail Write String The MarkAsSpamFromAddressAuthFail parameter classifies the message as spam when Sender ID filtering encounters a hard fail. Valid values for this parameter are Off or On. The default value is Off. Off, On, Test MarkAsSpamJavaScriptInHtml Write String The MarkAsSpamJavaScriptInHtml parameter classifies the message as spam when the message contains JavaScript or VBScript. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test MarkAsSpamNdrBackscatter Write String The MarkAsSpamNdrBackscatter parameter classifies the message as spam when the message is a non-delivery report (NDR) to a forged sender. Valid values for this parameter are Off or On. The default value is Off. Off, On, Test MarkAsSpamObjectTagsInHtml Write String The MarkAsSpamObjectTagsInHtml parameter classifies the message as spam when the message contains HTML tags. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test MarkAsSpamSensitiveWordList Write String The MarkAsSpamSensitiveWordList parameter classifies the message as spam when the message contains words from the sensitive words list. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test MarkAsSpamSpfRecordHardFail Write String The MarkAsSpamSpfRecordHardFail parameter classifies the message as spam when Sender Policy Framework (SPF) record checking encounters a hard fail. Valid values for this parameter are Off or On. The default value is Off. Off, On, Test MarkAsSpamWebBugsInHtml Write String The MarkAsSpamWebBugsInHtml parameter classifies the message as spam when the message contains web bugs. Valid values for this parameter are Off, On or Test. The default value is Off. Off, On, Test ModifySubjectValue Write String The ModifySubjectValue parameter specifies the text to prepend to the existing subject of spam messages when an action parameter is set to the value ModifySubject. PhishSpamAction Write String The PhishSpamAction parameter specifies the action to take on messages that are classified as phishing MoveToJmf, AddXHeader, ModifySubject, Redirect, Delete, Quarantine, NoAction PhishQuarantineTag Write String The PhishQuarantineTag parameter specifies the quarantine policy that's used on messages that are quarantined as phishing. SpamQuarantineTag Write String The SpamQuarantineTag parameter specifies the quarantine policy that's used on messages that are quarantined as spam. QuarantineRetentionPeriod Write UInt32 The QuarantineRetentionPeriod parameter specifies the length of time in days that spam messages remain in the quarantine. Valid input for this parameter is an integer between 1 and 30. The default value is 15. RedirectToRecipients Write StringArray[] The RedirectToRecipients parameter specifies the replacement recipients in spam messages when an action parameter is set to the value Redirect. The action parameters that use the value of RedirectToRecipients are BulkSpamAction, HighConfidencePhishAction, HighConfidenceSpamAction, PhishSpamAction and SpamAction. RegionBlockList Write StringArray[] The RegionBlockList parameter specifies the region to block when messages are blocked based on their source region. Valid input for this parameter is a supported ISO 3166-1 uppercase two-letter country code. You can specify multiple values separated by commas. This parameter is only used when the EnableRegionBlockList parameter is set to $true. SpamAction Write String The SpamAction parameter specifies the action to take on messages that are classified as spam (not high confidence spam, bulk email, or phishing). MoveToJmf, AddXHeader, ModifySubject, Redirect, Delete, Quarantine, NoAction TestModeAction Write String The TestModeAction parameter specifies the additional action to take on messages that match any of the IncreaseScoreWith or MarkAsSpam parameters that are set to the value Test. None, AddXHeader, BccMessage TestModeBccToRecipients Write StringArray[] The TestModeBccToRecipients parameter specifies the blind carbon copy recipients to add to spam messages when the TestModeAction action parameter is set to the value BccMessage. PhishZapEnabled Write Boolean The PhishZapEnabled parameter enables or disables zero-hour auto purge (ZAP) to detect phishing messages in delivered messages in Exchange Online mailboxes. SpamZapEnabled Write Boolean The SpamZapEnabled parameter enables or disables zero-hour auto purge (ZAP) to detect spam in delivered messages in Exchange Online mailboxes. Ensure Write String Specify if this policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOHostedContentFilterPolicy \u00b6 Description \u00b6 This resource configures the settings of connection filter policies in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOHostedContentFilterPolicy 'ConfigureHostedContentFilterPolicy' { Identity = \"Default\" AddXHeaderValue = \"\" AdminDisplayName = \"\" BulkSpamAction = \"MoveToJmf\" BulkThreshold = 7 DownloadLink = $False EnableEndUserSpamNotifications = $False EnableLanguageBlockList = $False EnableRegionBlockList = $False EndUserSpamNotificationCustomSubject = \"\" EndUserSpamNotificationFrequency = 3 EndUserSpamNotificationLanguage = \"Default\" HighConfidencePhishAction = \"Quarantine\" HighConfidenceSpamAction = \"MoveToJmf\" IncreaseScoreWithBizOrInfoUrls = \"Off\" IncreaseScoreWithImageLinks = \"Off\" IncreaseScoreWithNumericIps = \"Off\" IncreaseScoreWithRedirectToOtherPort = \"Off\" InlineSafetyTipsEnabled = $True LanguageBlockList = @() MakeDefault = $True MarkAsSpamBulkMail = \"On\" MarkAsSpamEmbedTagsInHtml = \"Off\" MarkAsSpamEmptyMessages = \"Off\" MarkAsSpamFormTagsInHtml = \"Off\" MarkAsSpamFramesInHtml = \"Off\" MarkAsSpamFromAddressAuthFail = \"Off\" MarkAsSpamJavaScriptInHtml = \"Off\" MarkAsSpamNdrBackscatter = \"Off\" MarkAsSpamObjectTagsInHtml = \"Off\" MarkAsSpamSensitiveWordList = \"Off\" MarkAsSpamSpfRecordHardFail = \"Off\" MarkAsSpamWebBugsInHtml = \"Off\" ModifySubjectValue = \"\" PhishSpamAction = \"MoveToJmf\" PhishZapEnabled = $True QuarantineRetentionPeriod = 15 RedirectToRecipients = @() RegionBlockList = @() SpamAction = \"MoveToJmf\" SpamZapEnabled = $True TestModeAction = \"None\" TestModeBccToRecipients = @() Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOHostedContentFilterPolicy"},{"location":"resources/exchange/EXOHostedContentFilterRule/","text":"EXOHostedContentFilterRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the HostedContentFilter rule that you want to modify. HostedContentFilterPolicy Required String The HostedContentFilterPolicy parameter specifies the name of the HostedContentFilter policy that's associated with the HostedContentFilter rule. Enabled Write Boolean Specify if this rule should be enabled. Default is $true. Priority Write UInt32 The Priority parameter specifies a priority value for the rule that determines the order of rule processing. A lower integer value indicates a higher priority, the value 0 is the highest priority, and rules can't have the same priority value. Comments Write String The Comments parameter specifies informative comments for the rule, such as what the rule is used for or how it has changed over time. The length of the comment can't exceed 1024 characters. ExceptIfRecipientDomainIs Write StringArray[] The ExceptIfRecipientDomainIs parameter specifies an exception that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. ExceptIfSentTo Write StringArray[] The ExceptIfSentTo parameter specifies an exception that looks for recipients in messages. You can use any value that uniquely identifies the recipient. ExceptIfSentToMemberOf Write StringArray[] The ExceptIfSentToMemberOf parameter specifies an exception that looks for messages sent to members of groups. You can use any value that uniquely identifies the group. RecipientDomainIs Write StringArray[] The RecipientDomainIs parameter specifies a condition that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. SentTo Write StringArray[] The SentTo parameter specifies a condition that looks for recipients in messages. You can use any value that uniquely identifies the recipient. SentToMemberOf Write StringArray[] The SentToMemberOf parameter looks for messages sent to members of groups. You can use any value that uniquely identifies the group. Ensure Write String Specify if this rule should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOHostedContentFilterRule \u00b6 Description \u00b6 This resource configures an Hosted Content Filter Rule in Exchange Online. Reference: https://docs.microsoft.com/en-us/powershell/module/exchange/advanced-threat-protection/new-HostedContentFilterRule?view=exchange-ps Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOHostedContentFilterRule 'ConfigureHostedContentFilterRule' { Identity = \"Contoso Recipients\" Comments = \"Applies to all users, except when member of HR group\" Enabled = $True ExceptIfSentToMemberOf = \"Contoso Human Resources\" HostedContentFilterPolicy = \"Default\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOHostedContentFilterRule"},{"location":"resources/exchange/EXOHostedOutboundSpamFilterPolicy/","text":"EXOHostedOutboundSpamFilterPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the policy that you want to modify. There is only one policy named 'Default' AdminDisplayName Write String The AdminDisplayName parameter specifies a description for the policy. BccSuspiciousOutboundAdditionalRecipients Write StringArray[] The BccSuspiciousOutboundAdditionalRecipients parameter specifies the recipients to add to the Bcc field of outgoing spam messages. Valid input for this parameter is an email address. Separate multiple email addresses with commas. BccSuspiciousOutboundMail Write Boolean The BccSuspiciousOutboundMail parameter enables or disables adding recipients to the Bcc field of outgoing spam messages. Valid input for this parameter is $true or $false. The default value is $false. You specify the additional recipients using the BccSuspiciousOutboundAdditionalRecipients parameter. NotifyOutboundSpam Write Boolean The NotifyOutboundSpam parameter enables or disables sending notification messages to administrators when an outgoing message is determined to be spam. Valid input for this parameter is $true or $false. The default value is $false. You specify the administrators to notify by using the NotifyOutboundSpamRecipients parameter. NotifyOutboundSpamRecipients Write StringArray[] The NotifyOutboundSpamRecipients parameter specifies the administrators to notify when an outgoing message is determined to be spam. Valid input for this parameter is an email address. Separate multiple email addresses with commas. RecipientLimitInternalPerHour Write String The RecipientLimitInternalPerHour parameter specifies the maximum number of internal recipients that a user can send to within an hour. A valid value is 0 to 10000. The default value is 0, which means the service defaults are used. RecipientLimitPerDay Write String The RecipientLimitPerDay parameter specifies the maximum number of recipients that a user can send to within a day. A valid value is 0 to 10000. The default value is 0, which means the service defaults are used. RecipientLimitExternalPerHour Write String The RecipientLimitExternalPerHour parameter specifies the maximum number of external recipients that a user can send to within an hour. A valid value is 0 to 10000. The default value is 0, which means the service defaults are used. ActionWhenThresholdReached Write String The ActionWhenThresholdReached parameter specifies the action to take when any of the limits specified in the policy are reached. Valid values are: Alert, BlockUser, BlockUserForToday. BlockUserForToday is the default value. AutoForwardingMode Write String The AutoForwardingMode specifies how the policy controls automatic email forwarding to outbound recipients. Valid values are: Automatic, On, Off. Ensure Write String Specify if this policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOHostedOutboundSpamFilterPolicy \u00b6 Description \u00b6 This resource configures the settings of the outbound spam filter policy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOHostedOutboundSpamFilterPolicy 'HostedOutboundSpamFilterPolicy' { Identity = \"Default\" ActionWhenThresholdReached = \"BlockUserForToday\" AdminDisplayName = \"\" AutoForwardingMode = \"Automatic\" BccSuspiciousOutboundAdditionalRecipients = @() BccSuspiciousOutboundMail = $False NotifyOutboundSpam = $False NotifyOutboundSpamRecipients = @() RecipientLimitExternalPerHour = 0 RecipientLimitInternalPerHour = 0 RecipientLimitPerDay = 0 Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOHostedOutboundSpamFilterPolicy"},{"location":"resources/exchange/EXOHostedOutboundSpamFilterRule/","text":"EXOHostedOutboundSpamFilterRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the HostedOutboundSpamFilter rule that you want to modify. HostedOutboundSpamFilterPolicy Required String The HostedOutboundSpamFilterPolicy parameter specifies the name of the HostedOutboundSpamFilter policy that's associated with the HostedOutboundSpamFilter rule. Enabled Write Boolean Specify if this rule should be enabled. Default is $true. Priority Write UInt32 The Priority parameter specifies a priority value for the rule that determines the order of rule processing. A lower integer value indicates a higher priority, the value 0 is the highest priority, and rules can't have the same priority value. Comments Write String The Comments parameter specifies informative comments for the rule, such as what the rule is used for or how it has changed over time. The length of the comment can't exceed 1024 characters. ExceptIfSenderDomainIs Write StringArray[] The ExceptIfSenderDomainIs parameter specifies an exception that looks for senders with email address in the specified domains. You can specify multiple domains separated by commas. ExceptIfFrom Write StringArray[] The ExceptIfFrom parameter specifies an exception that looks for messages from specific senders. You can use any value that uniquely identifies the sender. ExceptIfFromMemberOf Write StringArray[] The ExceptIfFromMemberOf parameter specifies an exception that looks for messages sent by group members. You can use any value that uniquely identifies the group. SenderDomainIs Write StringArray[] The SenderDomainIs parameter specifies a condition that looks for senders with email address in the specified domains. You can specify multiple domains separated by commas. From Write StringArray[] The From parameter specifies a condition that looks for messages from specific senders. You can use any value that uniquely identifies the sender. FromMemberOf Write StringArray[] The FromMemberOf parameter specifies a condition that looks for messages sent by group members. You can use any value that uniquely identifies the group. Ensure Write String Specify if this rule should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOHostedOutboundSpamFilterRule \u00b6 Description \u00b6 This resource configures an Hosted Content Filter Rule in Exchange Online. Reference: https://docs.microsoft.com/en-us/powershell/module/exchange/new-hostedoutboundspamfilterrule?view=exchange-ps Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOHostedOutboundSpamFilterRule 'ConfigureHostedOutboundSpamFilterRule' { Identity = \"Contoso Executives\" Comments = \"Does not apply to Executives\" Enabled = $True ExceptIfFrom = \"Elizabeth Brunner\" HostedOutboundSpamFilterPolicy = \"Default\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOHostedOutboundSpamFilterRule"},{"location":"resources/exchange/EXOIRMConfiguration/","text":"EXOIRMConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Write String The Identity parameter specifies the Perimeter Configuration policy that you want to modify. AutomaticServiceUpdateEnabled Write Boolean The AutomaticServiceUpdateEnabled parameter specifies whether to allow the automatic addition of new features within Azure Information Protection for your cloud-based organization. AzureRMSLicensingEnabled Write Boolean The AzureRMSLicensingEnabled parameter specifies whether the Exchange Online organization can to connect directly to Azure Rights Management. DecryptAttachmentForEncryptOnly Write Boolean The DecryptAttachmentForEncryptOnly parameter specifies whether mail recipients have unrestricted rights on the attachment or not for Encrypt-only mails sent using Microsoft Purview Message Encryption. EDiscoverySuperUserEnabled Write Boolean The EDiscoverySuperUserEnabled parameter specifies whether members of the Discovery Management role group can access IRM-protected messages in a discovery mailbox that were returned by a discovery search. EnablePdfEncryption Write Boolean The EnablePdfEncryption parameter specifies whether to enable the encryption of PDF attachments using Microsoft Purview Message Encryption. InternalLicensingEnabled Write Boolean The InternalLicensingEnabled parameter specifies whether to enable IRM features for messages that are sent to internal and external recipients. JournalReportDecryptionEnabled Write Boolean The JournalReportDecryptionEnabled parameter specifies whether to enable journal report decryption. LicensingLocation Write StringArray[] The LicensingLocation parameter specifies the RMS licensing URLs. You can specify multiple URL values separated by commas. RejectIfRecipientHasNoRights Write Boolean This parameter is available only in the cloud-based service. RMSOnlineKeySharingLocation Write String The RMSOnlineKeySharingLocation parameter specifies the Azure Rights Management URL that's used to get the trusted publishing domain (TPD) for the Exchange Online organization. SearchEnabled Write Boolean The SearchEnabled parameter specifies whether to enable searching of IRM-encrypted messages in Outlook on the web (formerly known as Outlook Web App). SimplifiedClientAccessDoNotForwardDisabled Write Boolean The SimplifiedClientAccessDoNotForwardDisabled parameter specifies whether to disable Do not forward in Outlook on the web. SimplifiedClientAccessEnabled Write Boolean The SimplifiedClientAccessEnabled parameter specifies whether to enable the Protect button in Outlook on the web. SimplifiedClientAccessEncryptOnlyDisabled Write Boolean The SimplifiedClientAccessEncryptOnlyDisabled parameter specifies whether to disable Encrypt only in Outlook on the web. TransportDecryptionSetting Write String The TransportDecryptionSetting parameter specifies the transport decryption configuration. Disabled, Mandatory, Optional Ensure Write String Specifies if this Outbound connector should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOIRMConfiguration \u00b6 Description \u00b6 Modify the resource Configuration policy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOIRMConfiguration 'ConfigureIRMConfiguration' { Identity = \"Global\" AutomaticServiceUpdateEnabled = $True AzureRMSLicensingEnabled = $True DecryptAttachmentForEncryptOnly = $True EDiscoverySuperUserEnabled = $True EnablePdfEncryption = $True InternalLicensingEnabled = $True JournalReportDecryptionEnabled = $True RejectIfRecipientHasNoRights = $True SearchEnabled = $True SimplifiedClientAccessDoNotForwardDisabled = $True SimplifiedClientAccessEnabled = $True SimplifiedClientAccessEncryptOnlyDisabled = $True TransportDecryptionSetting = \"Mandatory\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOIRMConfiguration"},{"location":"resources/exchange/EXOInboundConnector/","text":"EXOInboundConnector \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the outbound connector that you want to modify. AssociatedAcceptedDomains Write StringArray[] The AssociatedAcceptedDomains parameter specifies the accepted domains that the connector applies to, thereby limiting its scope. For example, you can apply the connector to a specific accepted domain in your organization, such as contoso.com. CloudServicesMailEnabled Write Boolean The CloudServicesMailEnabled parameter specifies whether the connector is used for hybrid mail flow between an on-premises Exchange environment and Microsoft Office 365. Specifically, this parameter controls how certain internal X-MS-Exchange-Organization-* message headers are handled in messages that are sent between accepted domains in the on-premises and cloud organizations. These headers are collectively known as cross-premises headers. DO NOT USE MANUALLY! Valid values are: $true $false Comment Write String The Comment parameter specifies an optional comment. ConnectorSource Write String The ConnectorSource parameter specifies how the connector is created. DO NOT CHANGE THIS! values are Default (the default) Migrated ConnectorType Write String The ConnectorType parameter specifies a category for the domains that are serviced by the connector. Valid values are Partner and OnPremises Partner, OnPremises EFSkipIPs Write StringArray[] The EFSkipIPs parameter specifies the source IP addresses to skip in Enhanced Filtering for Connectors when the EFSkipLastIP parameter value is $false. EFSkipLastIP Write Boolean The EFSkipLastIP parameter specifies the behavior of Enhanced Filtering for Connectors. EFUsers Write StringArray[] The EFUsers parameter specifies the recipients that Enhanced Filtering for Connectors applies to. Enabled Write Boolean Specifies whether connector is enabled. RequireTls Write Boolean The RequireTLS parameter specifies that all messages received by this connector require TLS transmission. Valid values for this parameter are $true or $false. The default value is $false. When the RequireTLS parameter is set to $true, all messages received by this connector require TLS transmission. RestrictDomainsToCertificate Write Boolean The RestrictDomainsToCertificate parameter specifies that Office 365 should identify incoming messages that are eligible for this connector by verifying that the remote server authenticates using a TLS certificate that has the TlsSenderCertificateName in the Subject. RestrictDomainsToIPAddresses Write Boolean The RestrictDomainsToIPAddresses parameter, when set to $true, automatically rejects mail from the domains specified by the SenderDomains parameter if the mail originates from an IP address that isn't specified by the SenderIPAddresses parameter. SenderDomains Write StringArray[] The SenderDomains parameter specifies the remote domains from which this connector accepts messages, thereby limiting its scope. You can use a wildcard character to specify all subdomains of a specified domain, as shown in the following example: .contoso.com. However, you can't embed a wildcard character, as shown in the following example: domain. .contoso.com. SenderIPAddresses Write StringArray[] The SenderIPAddresses parameter specifies the remote IP addresses from which this connector accepts messages. TlsSenderCertificateName Write String The TlsSenderCertificateName parameter specifies the certificate used by the sender's domain when the RequireTls parameter is set to $true. Valid input for the TlsSenderCertificateName parameter is an SMTP domain. TreatMessagesAsInternal Write Boolean The TreatMessagesAsInternal parameter specifies an alternative method to identify messages sent from an on-premises organization as internal messages. You should only consider using this parameter when your on-premises organization doesn't use Exchange. Ensure Write String Specifies if this Outbound connector should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOInboundConnector \u00b6 Description \u00b6 This resource configures an Inbound connector in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOInboundConnector 'ConfigureInboundConnector' { Identity = \"Contoso Inbound Connector\" CloudServicesMailEnabled = $True Comment = \"Inbound connector for Contoso\" ConnectorSource = \"Default\" ConnectorType = \"OnPremises\" Enabled = $True RequireTls = $True SenderDomains = \"*.contoso.com\" TlsSenderCertificateName = \"contoso.com\" TreatMessagesAsInternal = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOInboundConnector"},{"location":"resources/exchange/EXOIntraOrganizationConnector/","text":"EXOIntraOrganizationConnector \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the intraorg connector that you want to modify. DiscoveryEndpoint Write String The DiscoveryEndpoint parameter specifies the externally-accessible URL that's used for the Autodiscover service for the domain that's configured in the Intra-Organization connector. Enabled Write Boolean Specifies whether connector is enabled. TargetAddressDomains Write StringArray[] The TargetAddressDomains parameter specifies the domain namespaces that will be used in the Intra-organization connector. These domains must have valid Autodiscover endpoints defined in their organizations. The domains and their associated Autodiscover endpoints are used by the Intra-Organization connector for feature and service connectivity. You can specify multiple domains separated by commas. TargetSharingEpr Write String The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services that will be used in the Intra-Organization connector. Ensure Write String Specifies if this Intra-Organization connector should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOIntraOrganizationConnector \u00b6 Description \u00b6 Create a new EXOIntraOrganizationConnector in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOIntraOrganizationConnector 'ConfigureIntraOrganizationConnector' { Identity = \"MainCloudConnector\" DiscoveryEndpoint = \"https://ExternalDiscovery.Contoso.com\" TargetAddressDomains = \"Cloud1.contoso.com\" , \"Cloud2.contoso.com\" Enabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOIntraOrganizationConnector"},{"location":"resources/exchange/EXOJournalRule/","text":"EXOJournalRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String Name of the Journal Rule JournalEmailAddress Key String The JournalEmailAddress parameter specifies a recipient object to which journal reports are sent. You can use any value that uniquely identifies the recipient. Recipient Write String The Recipient parameter specifies the SMTP address of a mailbox, contact, or distribution group to journal. If you specify a distribution group, all recipients in that distribution group are journaled. All messages sent to or from a recipient are journaled. Enabled Write Boolean Specifies whether the Journal Rule is enabled or not. RuleScope Write String The Scope parameter specifies the scope of email messages to which the journal rule is applied Global, Internal, External Ensure Write String Present ensures the rule exists, Absent that it does not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOJournalRule \u00b6 Description \u00b6 This resource allows to configure Journal Rules in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOJournalRule 'CreateJournalRule' { Enabled = $True JournalEmailAddress = \"John.Smith@contoso.com\" Name = \"Send to John\" RuleScope = \"Global\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOJournalRule"},{"location":"resources/exchange/EXOMailContact/","text":"EXOMailContact \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies a unique name for the mail contact. ExternalEmailAddress Required String The ExternalEmailAddress parameter specifies the target email address of the mail contact or mail user. By default, this value is used as the primary email address of the mail contact or mail user. Alias Write String The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value. The maximum length is 64 characters. DisplayName Write String The DisplayName parameter specifies the display name of the mail contact. The display name is visible in the Exchange admin center and in address lists. FirstName Write String The FirstName parameter specifies the user's first name. Initials Write String The Initials parameter specifies the user's middle initials. LastName Write String The LastName parameter specifies the user's last name. MacAttachmentFormat Write String The MacAttachmentFormat parameter specifies the Apple Macintosh operating system attachment format to use for messages sent to the mail contact or mail user. Valid values are: BinHex, UuEncode, AppleSingle, AppleDouble BinHex, UuEncode, AppleSingle, AppleDouble MessageBodyFormat Write String The MessageBodyFormat parameter specifies the message body format for messages sent to the mail contact or mail user. Valid values are: Text, Html, TextAndHtml Text, Html, TextAndHtml MessageFormat Write String The MessageFormat parameter specifies the message format for messages sent to the mail contact or mail user. Valid values are: Mime, Text Mime, Text ModeratedBy Write StringArray[] The ModeratedBy parameter specifies one or more moderators for this mail contact. A moderator approves messages sent to the mail contact before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. ModerationEnabled Write Boolean The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. OrganizationalUnit Write String The OrganizationalUnit parameter specifies the location in Active Directory where the new contact is created. SendModerationNotifications Write String The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are: ALways, Internal, Never Always, Internal, Never UsePreferMessageFormat Write Boolean The UsePreferMessageFormat specifies whether the message format settings configured for the mail user or mail contact override the global settings configured for the remote domain or configured by the message sender Ensure Write String Specifies if this Contact should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOAddressList \u00b6 Description \u00b6 This resource configures Exchange Online address lists. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsCredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOMailContact 'TestMailContact' { Alias = \"TestMailContact\" ; Credential = $Credscredential ; DisplayName = \"My Test Contact\" ; Ensure = \"Present\" ; ExternalEmailAddress = \"SMTP:test@tailspintoys.com\" ; MacAttachmentFormat = \"BinHex\" ; MessageBodyFormat = \"TextAndHtml\" ; MessageFormat = \"Mime\" ; ModeratedBy = @(); ModerationEnabled = $False ; Name = \"My Test Contact\" ; OrganizationalUnit = \"nampr03a010.prod.outlook.com/Microsoft Exchange Hosted Organizations/$OrganizationName\" ; SendModerationNotifications = \"Always\" ; UsePreferMessageFormat = $True ; } } }","title":"EXOMailContact"},{"location":"resources/exchange/EXOMailTips/","text":"EXOMailTips \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Organization Key String MailTipsAllTipsEnabled Write Boolean Specifies whether MailTips are enabled. MailTipsGroupMetricsEnabled Write Boolean Specifies whether MailTips that rely on group metrics data are enabled. MailTipsLargeAudienceThreshold Write UInt32 Specifies what a large audience is. MailTipsMailboxSourcedTipsEnabled Write Boolean Specifies whether MailTips that rely on mailbox data (out-of-office or full mailbox) are enabled. MailTipsExternalRecipientsTipsEnabled Write Boolean Specifies whether MailTips for external recipients are enabled. Ensure Write String Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOMailTips \u00b6 Description \u00b6 This resource allows to configure Mailtips behaviors in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOMailTips 'OrgWideMailTips' { Organization = \"contoso.com\" MailTipsAllTipsEnabled = $True MailTipsGroupMetricsEnabled = $True MailTipsLargeAudienceThreshold = 100 MailTipsMailboxSourcedTipsEnabled = $True MailTipsExternalRecipientsTipsEnabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOMailTips"},{"location":"resources/exchange/EXOMailboxPlan/","text":"EXOMailboxPlan \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the Mailbox Plan that you want to modify. Ensure Write String MailboxPlans cannot be created/removed in O365. This must be set to 'Present' Present IssueWarningQuota Write String The IssueWarningQuota parameter specifies the warning threshold for the size of the mailboxes that are created or enabled using the mailbox plan. MaxReceiveSize Write String The MaxReceiveSize parameter specifies the maximum size of a message that can be sent to the mailbox. MaxSendSize Write String The MaxSendSize parameter specifies the maximum size of a message that can be sent by the mailbox. ProhibitSendQuota Write String The ProhibitSendQuota parameter specifies a size limit for the mailbox. ProhibitSendReceiveQuota Write String The ProhibitSendReceiveQuota parameter specifies a size limit for the mailbox. RetainDeletedItemsFor Write String The RetainDeletedItemsFor parameter specifies the length of time to keep soft-deleted items for the mailbox. RetentionPolicy Write String The RetentionPolicy parameter specifies the retention policy that's applied to the mailbox. RoleAssignmentPolicy Write String The RoleAssignmentPolicy parameter specifies the role assignment policy that's applied to the mailbox. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOMailboxPlan \u00b6 Description \u00b6 Use this resource to modify the settings of mailbox plans in the cloud-based service. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOMailboxPlan 'ConfigureMailboxPlan' { Ensure = \"Present\" ; Identity = \"ExchangeOnlineEnterprise\" ; IssueWarningQuota = \"98 GB (105,226,698,752 bytes)\" ; MaxReceiveSize = \"25 MB (26,214,400 bytes)\" ; MaxSendSize = \"25 MB (26,214,400 bytes)\" ; ProhibitSendQuota = \"99 GB (106,300,440,576 bytes)\" ; ProhibitSendReceiveQuota = \"100 GB (107,374,182,400 bytes)\" ; RetainDeletedItemsFor = \"14.00:00:00\" ; RoleAssignmentPolicy = \"Default Role Assignment Policy\" ; Credential = $credsGlobalAdmin } } }","title":"EXOMailboxPlan"},{"location":"resources/exchange/EXOMailboxSettings/","text":"EXOMailboxSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String The display name of the Shared Mailbox TimeZone Write String The name of the Time Zone to assign to the mailbox Locale Write String The code of the Locale to assign to the mailbox Ensure Write String Present ensures the Mailbox Settings are applied Present Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXO MailboxSettings \u00b6 Description \u00b6 This resource configures settings on Mailboxes such as the Regional settings and its timezone. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. $ConfigurationData = @{ AllNodes = @( @{ NodeName = \"localhost\" } ) } Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOMailboxSettings 'OttawaTeamMailboxSettings' { DisplayName = \"Ottawa Employees\" TimeZone = \"Eastern Standard Time\" Locale = \"fr-CA\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOMailboxSettings"},{"location":"resources/exchange/EXOMalwareFilterPolicy/","text":"EXOMalwareFilterPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the MalwareFilterPolicy you want to modify. Action Write String DEPRECATED DeleteMessage, DeleteAttachmentAndUseDefaultAlert, DeleteAttachmentAndUseCustomAlert AdminDisplayName Write String The AdminDisplayName parameter specifies a description for the policy. If the value contains spaces, enclose the value in quotation marks. CustomAlertText Write String The CustomAlertText parameter specifies the custom text to use in the replacement attachment named Malware Alert Text.txt. If the value contains spaces, enclose the value in quotation marks. CustomExternalBody Write String The CustomExternalBody parameter specifies the body of the custom notification message for malware detections in messages from external senders. If the value contains spaces, enclose the value in quotation marks. CustomExternalSubject Write String The CustomExternalSubject parameter specifies the subject of the custom notification message for malware detections in messages from external senders. If the value contains spaces, enclose the value in quotation marks. CustomFromAddress Write String The CustomFromAddress parameter specifies the From address of the custom notification message for malware detections in messages from internal or external senders. CustomFromName Write String The CustomFromName parameter specifies the From name of the custom notification message for malware detections in messages from internal or external senders. If the value contains spaces, enclose the value in quotation marks. CustomInternalBody Write String The CustomInternalBody parameter specifies the body of the custom notification message for malware detections in messages from internal senders. If the value contains spaces, enclose the value in quotation marks. CustomInternalSubject Write String The CustomInternalSubject parameter specifies the subject of the custom notification message for malware detections in messages from internal senders. If the value contains spaces, enclose the value in quotation marks. CustomNotifications Write Boolean The CustomNotifications parameter enables or disables custom notification messages for malware detections in messages from internal or external senders. Valid values are: $true, $false. EnableExternalSenderAdminNotifications Write Boolean The EnableExternalSenderAdminNotifications parameter enables or disables sending malware detection notification messages to an administrator for messages from external senders. Valid values are: $true, $false. EnableExternalSenderNotifications Write Boolean DEPRECATED EnableFileFilter Write Boolean The EnableFileFilter parameter enables or disables common attachment blocking - also known as the Common Attachment Types Filter.Valid values are: $true, $false. EnableInternalSenderAdminNotifications Write Boolean The EnableInternalSenderAdminNotifications parameter enables or disables sending malware detection notification messages to an administrator for messages from internal senders. Valid values are: $true, $false. EnableInternalSenderNotifications Write Boolean DEPRECATED ExternalSenderAdminAddress Write String The ExternalSenderAdminAddress parameter specifies the email address of the administrator who will receive notification messages for malware detections in messages from external senders. FileTypeAction Write String The FileTypeAction parameter specifies what's done to messages that contain one or more attachments where the file extension is included in the FileTypes parameter (common attachment blocking). Valid values are Quarantine and Reject. The default value is Reject. Quarantine, Reject FileTypes Write StringArray[] The FileTypes parameter specifies the file types that are automatically blocked by common attachment blocking (also known as the Common Attachment Types Filter), regardless of content. InternalSenderAdminAddress Write String The InternalSenderAdminAddress parameter specifies the email address of the administrator who will receive notification messages for malware detections in messages from internal senders. MakeDefault Write Boolean MakeDefault makes this malware filter policy the default policy. Valid values are: $true, $false. QuarantineTag Write String The QuarantineTag specifies the quarantine policy that's used on messages that are quarantined as malware. ZapEnabled Write Boolean The ZapEnabled parameter enables or disables zero-hour auto purge (ZAP) for malware. ZAP detects malware in unread messages that have already been delivered to the user's Inbox. Valid values are: $true, $false. Ensure Write String Specifies if this MalwareFilterPolicy should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOMalwareFilterPolicy \u00b6 Description \u00b6 Create or modify a EXOMalwareFilterPolicy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOMalwareFilterPolicy 'ConfigureMalwareFilterPolicy' { Identity = \"Default\" CustomNotifications = $False EnableExternalSenderAdminNotifications = $False EnableFileFilter = $False EnableInternalSenderAdminNotifications = $False FileTypeAction = \"Quarantine\" FileTypes = @( \"ace\" , \"ani\" , \"app\" , \"cab\" , \"docm\" , \"exe\" , \"iso\" , \"jar\" , \"jnlp\" , \"reg\" , \"scr\" , \"vbe\" , \"vbs\" ) QuarantineTag = \"AdminOnlyAccessPolicy\" ZapEnabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOMalwareFilterPolicy"},{"location":"resources/exchange/EXOMalwareFilterRule/","text":"EXOMalwareFilterRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the EXO resource you want to modify. Comments Write String The Comments parameter specifies informative comments for the rule, such as what the rule is used for or how it has changed over time. The length of the comment can't exceed 1024 characters. Enabled Write Boolean The Enabled parameter enables or disables the malware filter rule. Valid input for this parameter is $true or $false. The default value is $true. ExceptIfRecipientDomainIs Write StringArray[] The ExceptIfRecipientDomainIs parameter specifies an exception that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. ExceptIfSentTo Write StringArray[] The ExceptIfSentTo parameter specifies an exception that looks for recipients in messages. You can use any value that uniquely identifies the recipient. ExceptIfSentToMemberOf Write StringArray[] The ExceptIfSentToMemberOf parameter specifies an exception that looks for messages sent to members of groups. You can use any value that uniquely identifies the group. MalwareFilterPolicy Write String The MalwareFilterPolicy parameter specifies the malware filter policy to apply to messages that match the conditions defined by this malware filter rule. Priority Write String The Priority parameter specifies a priority value for the rule that determines the order of rule processing. A lower integer value indicates a higher priority, the value 0 is the highest priority, and rules can't have the same priority value. RecipientDomainIs Write StringArray[] The RecipientDomainIs parameter specifies a condition that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. SentTo Write StringArray[] The SentTo parameter specifies a condition that looks for recipients in messages. You can use any value that uniquely identifies the recipient. SentToMemberOf Write StringArray[] The SentToMemberOf parameter specifies a condition that looks for messages sent to members of distribution groups, dynamic distribution groups, or mail-enabled security groups. You can use any value that uniquely identifies the group. Ensure Write String Specifies if the Malware Filter Rule should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOMalwareFilterRule \u00b6 Description \u00b6 Create or modify a new EXOMalwareFilterRule in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOMalwareFilterRule 'ConfigureMalwareFilterRule' { Identity = \"Contoso Recipients\" MalwareFilterPolicy = \"Contoso Malware Filter Policy\" Comments = \"Apply the filter to all Contoso users\" Enabled = $True RecipientDomainIs = \"contoso.com\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOMalwareFilterRule"},{"location":"resources/exchange/EXOManagementRole/","text":"EXOManagementRole \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the name of the role. The maximum length of the name is 64 characters. Parent Key String The Parent parameter specifies the identity of the role to copy. Mandatory for management role creation/update or when Ensure=Present. Non-mandatory for Ensure=Absent Description Write String The Description parameter specifies the description that's displayed when the management role is viewed using the Get-ManagementRole cmdlet. Ensure Write String Specify if the Management Role should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOManagementRole \u00b6 Description \u00b6 This resource configures RBAC Management Roles in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOManagementRole 'ConfigureManagementRole' { Name = \"MyDisplayName\" Description = \"\" Parent = \"contoso.onmicrosoft.com\\MyProfileInformation\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOManagementRole"},{"location":"resources/exchange/EXOManagementRoleAssignment/","text":"EXOManagementRoleAssignment \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies a name for the new management role assignment. The maximum length of the name is 64 characters. Role Key String The Role parameter specifies the existing role to assign. You can use any value that uniquely identifies the role. App Write String The App parameter specifies the service principal to assign the management role to. Specifically, the ServiceId GUID value from the output of the Get-ServicePrincipal cmdlet (for example, 6233fba6-0198-4277-892f-9275bf728bcc). Policy Write String The Policy parameter specifies the name of the management role assignment policy to assign the management role to. SecurityGroup Write String The SecurityGroup parameter specifies the name of the management role group or mail-enabled universal security group to assign the management role to. User Write String The User parameter specifies the name or alias of the user to assign the management role to. CustomRecipientWriteScope Write String The CustomRecipientWriteScope parameter specifies the existing recipient-based management scope to associate with this management role assignment. CustomResourceScope Write String The CustomResourceScope parameter specifies the custom management scope to associate with this management role assignment. You can use any value that uniquely identifies the management scope. ExclusiveRecipientWriteScope Write String The ExclusiveConfigWriteScope parameter specifies the exclusive configuration-based management scope to associate with the new role assignment. RecipientAdministrativeUnitScope Write String The RecipientAdministrativeUnitScope parameter specifies the administrative unit to scope the new role assignment to. RecipientOrganizationalUnitScope Write String The RecipientOrganizationalUnitScope parameter specifies the OU to scope the new role assignment to. If you use the RecipientOrganizationalUnitScope parameter, you can't use the CustomRecipientWriteScope or ExclusiveRecipientWriteScope parameters. RecipientRelativeWriteScope Write String The RecipientRelativeWriteScope parameter specifies the type of restriction to apply to a recipient scope. The available types are None, Organization, MyGAL, Self, and MyDistributionGroups. The RecipientRelativeWriteScope parameter is automatically set when the CustomRecipientWriteScope or RecipientOrganizationalUnitScope parameters are used. Ensure Write String Specify if the Management Role Assignment should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOManagementRoleAssignment \u00b6 Description \u00b6 This resource configures RBAC Management Roles Assignments in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsCredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOManagementRoleAssignment 'AssignManagementRole' { Credential = $credsCredential ; Ensure = \"Present\" ; Name = \"MyManagementRoleAssignment\" ; Role = \"UserApplication\" ; User = \"John.Smith\" ; } } }","title":"EXOManagementRoleAssignment"},{"location":"resources/exchange/EXOMessageClassification/","text":"EXOMessageClassification \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the OME Configuration policy that you want to modify. ClassificationID Write String The ClassificationID parameter specifies the classification ID (GUID) of an existing message classification that you want to import and use in your Exchange organization. DisplayName Write String The DisplayName parameter specifies the title of the message classification that's displayed in Outlook and selected by users. DisplayPrecedence Write String The DisplayPrecedence parameter specifies the relative precedence of the message classification to other message classifications that may be applied to a specified message. Highest, Higher, High, MediumHigh, Medium, MediumLow, Low, Lower, Lowest Name Write String The Name parameter specifies the unique name for the message classification. PermissionMenuVisible Write Boolean The PermissionMenuVisible parameter specifies whether the values that you entered for the DisplayName and RecipientDescription parameters are displayed in Outlook as the user composes a message. RecipientDescription Write String The RecipientDescription parameter specifies the detailed text that's shown to Outlook recipient when they receive a message that has the message classification applied. RetainClassificationEnabled Write Boolean The RetainClassificationEnabled parameter specifies whether the message classification should persist with the message if the message is forwarded or replied to. SenderDescription Write String The SenderDescription parameter specifies the detailed text that's shown to Outlook senders when they select a message classification to apply to a message before they send the message. Ensure Write String Specifies if this Outbound connector should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOMessageClassification \u00b6 Description \u00b6 Create a new Message Classification policy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOMessageClassification 'ConfigureMessageClassification' { Identity = \"Contoso Message Classification\" Name = \"Contoso Message Classification\" DisplayName = \"Contoso Message Classification\" DisplayPrecedence = \"Highest\" PermissionMenuVisible = $True RecipientDescription = \"Shown to receipients\" SenderDescription = \"Shown to senders\" RetainClassificationEnabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOMessageClassification"},{"location":"resources/exchange/EXOMobileDeviceMailboxPolicy/","text":"EXOMobileDeviceMailboxPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the friendly name of the mobile device mailbox policy. AllowApplePushNotifications Write Boolean The AllowApplePushNotifications parameter specifies whether push notifications are allowed to Apple mobile devices. AllowBluetooth Write String The AllowBluetooth parameter specifies whether the Bluetooth capabilities are allowed on the mobile phone. The available options are Disable, HandsfreeOnly, and Allow. The default value is Allow. Disable, HandsfreeOnly, Allow AllowBrowser Write Boolean The AllowBrowser parameter indicates whether Microsoft Pocket Internet Explorer is allowed on the mobile phone. This parameter doesn't affect third-party browsers. AllowCamera Write Boolean The AllowCamera parameter specifies whether the mobile phone's camera is allowed. AllowConsumerEmail Write Boolean The AllowConsumerEmail parameter specifies whether the mobile phone user can configure a personal email account on the mobile phone. AllowDesktopSync Write Boolean The AllowDesktopSync parameter specifies whether the mobile phone can synchronize with a desktop computer through a cable. AllowExternalDeviceManagement Write Boolean The AllowExternalDeviceManagement parameter specifies whether an external device management program is allowed to manage the mobile phone. AllowGooglePushNotifications Write Boolean The AllowGooglePushNotifications parameter controls whether the user can receive push notifications from Google for Outlook on the web for devices. AllowHTMLEmail Write Boolean The AllowHTMLEmail parameter specifies whether HTML email is enabled on the mobile phone. AllowInternetSharing Write Boolean The AllowInternetSharing parameter specifies whether the mobile phone can be used as a modem to connect a computer to the Internet. AllowIrDA Write Boolean The AllowIrDA parameter specifies whether infrared connections are allowed to the mobile phone. AllowMobileOTAUpdate Write Boolean The AllowMobileOTAUpdate parameter specifies whether the Exchange ActiveSync mailbox policy can be sent to the mobile phone over a cellular data connection. AllowMicrosoftPushNotifications Write Boolean The AllowMicrosoftPushNotifications parameter specifies whether push notifications are enabled on the mobile device. AllowNonProvisionableDevices Write Boolean The AllowNonProvisionableDevices parameter specifies whether all mobile phones can synchronize with the server running Exchange. AllowPOPIMAPEmail Write Boolean The AllowPOPIMAPEmail parameter specifies whether the user can configure a POP3 or IMAP4 email account on the mobile phone. AllowRemoteDesktop Write Boolean The AllowRemoteDesktop parameter specifies whether the mobile phone can initiate a remote desktop connection. AllowSimplePassword Write Boolean The AllowSimplePassword parameter specifies whether a simple device password is allowed. A simple device password is a password that has a specific pattern, such as 1111 or 1234. AllowSMIMEEncryptionAlgorithmNegotiation Write String The AllowSMIMEEncryptionAlgorithmNegotiation parameter specifies whether the messaging application on the mobile device can negotiate the encryption algorithm if a recipient's certificate doesn't support the specified encryption algorithm. AllowAnyAlgorithmNegotiation, BlockNegotiation, OnlyStrongAlgorithmNegotiation AllowSMIMESoftCerts Write Boolean The AllowSMIMESoftCerts parameter specifies whether S/MIME software certificates are allowed. AllowStorageCard Write Boolean The AllowStorageCard parameter specifies whether the mobile phone can access information stored on a storage card. AllowTextMessaging Write Boolean The AllowTextMessaging parameter specifies whether text messaging is allowed from the mobile phone. AllowUnsignedApplications Write Boolean The AllowUnsignedApplications parameter specifies whether unsigned applications can be installed on the mobile phone. AllowUnsignedInstallationPackages Write Boolean The AllowUnsignedInstallationPackages parameter specifies whether unsigned installation packages can be executed on the mobile phone. AllowWiFi Write Boolean The AllowWiFi parameter specifies whether wireless Internet access is allowed on the mobile phone. AlphanumericPasswordRequired Write Boolean The AlphanumericPasswordRequired parameter specifies whether the password for the mobile phone must be alphanumeric. ApprovedApplicationList Write StringArray[] The ApprovedApplicationList parameter specifies a list of approved applications for the mobile phone. AttachmentsEnabled Write Boolean The AttachmentsEnabled parameter specifies whether attachments can be downloaded. DeviceEncryptionEnabled Write Boolean The DeviceEncryptionEnabled parameter specifies whether encryption is enabled. DevicePolicyRefreshInterval Write String The DevicePolicyRefreshInterval parameter specifies how often the policy is sent from the server to the mobile phone. IrmEnabled Write Boolean The IrmEnabled parameter specifies whether Information Rights Management (IRM) is enabled for the mailbox policy. IsDefault Write Boolean The IsDefault parameter specifies whether this policy is the default Mobile Device mailbox policy. MaxAttachmentSize Write String The MaxAttachmentSize parameter specifies the maximum size of attachments that can be downloaded to the mobile phone. MaxCalendarAgeFilter Write String The MaxCalendarAgeFilter parameter specifies the maximum range of calendar days that can be synchronized to the device. All, TwoWeeks, OneMonth, ThreeMonths, SixMonths MaxEmailAgeFilter Write String The MaxEmailAgeFilter parameter specifies the maximum number of days of email items to synchronize to the mobile phone. All, OneDay, ThreeDays, OneWeek, TwoWeeks, OneMonth MaxEmailBodyTruncationSize Write String The MaxEmailBodyTruncationSize parameter specifies the maximum size at which email messages are truncated when synchronized to the mobile phone. The value is specified in kilobytes (KB). MaxEmailHTMLBodyTruncationSize Write String The MaxEmailHTMLBodyTruncationSize parameter specifies the maximum size at which HTML-formatted email messages are synchronized to the mobile phone. The value is specified in KB. MaxInactivityTimeLock Write String The MaxInactivityTimeDeviceLock parameter specifies the length of time that the mobile phone can be inactive before the password is required to reactivate it. MaxPasswordFailedAttempts Write String The MaxPasswordFailedAttempts parameter specifies the number of attempts a user can make to enter the correct password for the mobile phone. You can enter any number from 4 through 16 or the value Unlimited. MinPasswordComplexCharacters Write String The MinPasswordComplexCharacters parameter specifies the character sets that are required in the password of the mobile device. MinPasswordLength Write String The MinPasswordLength parameter specifies the minimum number of characters in the mobile device password. PasswordEnabled Write Boolean The PasswordEnabled parameter specifies whether a password is required on the mobile device. PasswordExpiration Write String The PasswordExpiration parameter specifies how long a password can be used on a mobile device before the user is forced to change the password. PasswordHistory Write String The PasswordHistory parameter specifies the number of unique new passwords that need to be created on the mobile device before an old password can be reused. PasswordRecoveryEnabled Write Boolean The PasswordRecoveryEnabled parameter specifies whether the recovery password for the mobile device is stored in Exchange. RequireDeviceEncryption Write Boolean The RequireDeviceEncryption parameter specifies whether encryption is required on the mobile device. RequireEncryptedSMIMEMessages Write Boolean The RequireEncryptedSMIMEMessages parameter specifies whether the mobile device must send encrypted S/MIME messages. RequireEncryptionSMIMEAlgorithm Write String The RequireEncryptionSMIMEAlgorithm parameter specifies the algorithm that's required to encrypt S/MIME messages on a mobile device. DES, TripleDES, RC240bit, RC264bit, RC2128bit RequireManualSyncWhenRoaming Write Boolean The RequireSignedSMIMEAlgorithm parameter specifies the algorithm that's used to sign S/MIME messages on the mobile device. RequireSignedSMIMEAlgorithm Write String The RequireSignedSMIMEAlgorithm parameter specifies the algorithm that's used to sign S/MIME messages on the mobile device. SHA1, MD5 RequireSignedSMIMEMessages Write Boolean The RequireSignedSMIMEMessages parameter specifies whether the mobile device must send signed S/MIME messages. RequireStorageCardEncryption Write Boolean The RequireStorageCardEncryption parameter specifies whether storage card encryption is required on the mobile device. UnapprovedInROMApplicationList Write StringArray[] The UnapprovedInROMApplicationList parameter specifies a list of applications that can't be run in ROM on the mobile device. UNCAccessEnabled Write Boolean The UNCAccessEnabled parameter specifies whether access to Microsoft Windows file shares is enabled from the mobile device. WSSAccessEnabled Write Boolean The WSSAccessEnabled parameter specifies whether access to Microsoft Windows SharePoint Services is enabled from the mobile device. Ensure Write String Specify if the Mobile Device Mailbox Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOMobileDeviceMailboxPolicy \u00b6 Description \u00b6 This resource configures Mobile Device Mailbox Policies in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOMobileDeviceMailboxPolicy 'ConfigureMobileDeviceMailboxPolicy' { Name = \"Default\" AllowApplePushNotifications = $True AllowBluetooth = \"Allow\" AllowBrowser = $True AllowCamera = $True AllowConsumerEmail = $True AllowDesktopSync = $True AllowExternalDeviceManagement = $False AllowGooglePushNotifications = $True AllowHTMLEmail = $True AllowInternetSharing = $True AllowIrDA = $True AllowMicrosoftPushNotifications = $True AllowMobileOTAUpdate = $True AllowNonProvisionableDevices = $True AllowPOPIMAPEmail = $True AllowRemoteDesktop = $True AllowSimplePassword = $True AllowSMIMEEncryptionAlgorithmNegotiation = \"AllowAnyAlgorithmNegotiation\" AllowSMIMESoftCerts = $True AllowStorageCard = $True AllowTextMessaging = $True AllowUnsignedApplications = $True AllowUnsignedInstallationPackages = $True AllowWiFi = $True AlphanumericPasswordRequired = $False ApprovedApplicationList = @() AttachmentsEnabled = $True DeviceEncryptionEnabled = $False DevicePolicyRefreshInterval = \"Unlimited\" IrmEnabled = $True IsDefault = $True MaxAttachmentSize = \"Unlimited\" MaxCalendarAgeFilter = \"All\" MaxEmailAgeFilter = \"All\" MaxEmailBodyTruncationSize = \"Unlimited\" MaxEmailHTMLBodyTruncationSize = \"Unlimited\" MaxInactivityTimeLock = \"Unlimited\" MaxPasswordFailedAttempts = \"Unlimited\" MinPasswordComplexCharacters = 1 PasswordEnabled = $False PasswordExpiration = \"Unlimited\" PasswordHistory = 0 PasswordRecoveryEnabled = $False RequireDeviceEncryption = $False RequireEncryptedSMIMEMessages = $False RequireEncryptionSMIMEAlgorithm = \"TripleDES\" RequireManualSyncWhenRoaming = $False RequireSignedSMIMEAlgorithm = \"SHA1\" RequireSignedSMIMEMessages = $False RequireStorageCardEncryption = $False UnapprovedInROMApplicationList = @() UNCAccessEnabled = $True WSSAccessEnabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOMobileDeviceMailboxPolicy"},{"location":"resources/exchange/EXOOMEConfiguration/","text":"EXOOMEConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the OME Configuration policy that you want to modify. BackgroundColor Write String The BackgroundColor parameter specifies the background color DisclaimerText Write String The DisclaimerText parameter specifies the disclaimer text in the email that contains the encrypted message EmailText Write String The EmailText parameter specifies the default text that accompanies encrypted email messages. ExternalMailExpiryInDays Write UInt32 The ExternalMailExpiryInDays parameter specifies the number of days that the encrypted message is available to external recipients in the Microsoft 365 portal. A valid value is an integer from 0 to 730. IntroductionText Write String The IntroductionText parameter specifies the default text that accompanies encrypted email messages. OTPEnabled Write Boolean The OTPEnabled parameter specifies whether to allow recipients to use a one-time passcode to view encrypted messages. PortalText Write String The PortalText parameter specifies the text that appears at the top of the encrypted email viewing portal. PrivacyStatementUrl Write String The PrivacyStatementUrl parameter specifies the Privacy Statement link in the encrypted email notification message. ReadButtonText Write String The ReadButtonText parameter specifies the text that appears on the 'Read the message' button. SocialIdSignIn Write Boolean The SocialIdSignIn parameter specifies whether a user is allowed to view an encrypted message in the Microsoft 365 admin center using their own social network id (Google, Yahoo, and Microsoft account). Ensure Write String Specifies if this Outbound connector should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOOMEConfiguration \u00b6 Description \u00b6 Create a new OME Configuration policy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOOMEConfiguration 'ConfigureOMEConfiguration' { Identity = \"Contoso Marketing\" BackgroundColor = \"0x00FFFF00\" DisclaimerText = \"Encryption security disclaimer.\" EmailText = \"Encrypted message enclosed.\" ExternalMailExpiryInDays = 0 IntroductionText = \"You have received an encypted message\" OTPEnabled = $True PortalText = \"This portal is encrypted.\" SocialIdSignIn = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOOMEConfiguration"},{"location":"resources/exchange/EXOOfflineAddressBook/","text":"EXOOfflineAddressBook \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the Offline Address Book. The maximum length is 64 characters. AddressLists Write StringArray[] The AddressLists parameter specifies the address lists or global address lists that are included in the OAB. You can use any value that uniquely identifies the address list. ConfiguredAttributes Write StringArray[] The ConfiguredAttributes parameter specifies the recipient MAPI properties that are available in the OAB. DiffRetentionPeriod Write String The DiffRetentionPeriod parameter specifies the number of days that the OAB difference files are stored on the server. IsDefault Write Boolean The IsDefault parameter specifies whether the OAB is used by all mailboxes and mailbox databases that don't have an OAB specified. Ensure Write String Specify if the Offline Address Book should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOOfflineAddressBook \u00b6 Description \u00b6 This resource configures Offline Address Books in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOOfflineAddressBook 'ConfigureOfflineAddressBook' { Name = \"Default Offline Address Book\" AddressLists = @( '\\Offline Global Address List' ) ConfiguredAttributes = @( 'OfficeLocation, ANR' , 'ProxyAddresses, ANR' , 'PhoneticGivenName, ANR' , 'GivenName, ANR' , 'PhoneticSurname, ANR' , 'Surname, ANR' , 'Account, ANR' , 'PhoneticDisplayName, ANR' , 'UserInformationDisplayName, ANR' , 'ExternalMemberCount, Value' , 'TotalMemberCount, Value' , 'ModerationEnabled, Value' , 'DelivContLength, Value' , 'MailTipTranslations, Value' , 'ObjectGuid, Value' , 'IsOrganizational, Value' , 'HabSeniorityIndex, Value' , 'DisplayTypeEx, Value' , 'SimpleDisplayNameAnsi, Value' , 'HomeMdbA, Value' , 'Certificate, Value' , 'UserSMimeCertificate, Value' , 'UserCertificate, Value' , 'Comment, Value' , 'PagerTelephoneNumber, Value' , 'AssistantTelephoneNumber, Value' , 'MobileTelephoneNumber, Value' , 'PrimaryFaxNumber, Value' , 'Home2TelephoneNumberMv, Value' , 'Business2TelephoneNumberMv, Value' , 'HomeTelephoneNumber, Value' , 'TargetAddress, Value' , 'PhoneticDepartmentName, Value' , 'DepartmentName, Value' , 'Assistant, Value' , 'PhoneticCompanyName, Value' , 'CompanyName, Value' , 'Title, Value' , 'Country, Value' , 'PostalCode, Value' , 'StateOrProvince, Value' , 'Locality, Value' , 'StreetAddress, Value' , 'Initials, Value' , 'BusinessTelephoneNumber, Value' , 'SendRichInfo, Value' , 'ObjectType, Value' , 'DisplayType, Value' , 'RejectMessagesFromDLMembers, Indicator' , 'AcceptMessagesOnlyFromDLMembers, Indicator' , 'RejectMessagesFrom, Indicator' , 'AcceptMessagesOnlyFrom, Indicator' , 'UmSpokenName, Indicator' , 'ThumbnailPhoto, Indicator' ) DiffRetentionPeriod = \"30\" IsDefault = \"Yes\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOOfflineAddressBook"},{"location":"resources/exchange/EXOOnPremisesOrganization/","text":"EXOOnPremisesOrganization \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the identity of the on-premises organization object. HybridDomains Write StringArray[] The HybridDomains parameter specifies the domains that are configured in the hybrid deployment between an Office 365 tenant and an on-premises Exchange organization. The domains specified in this parameter must match the domains listed in the HybridConfiguration Active Directory object for the on-premises Exchange organization configured by the Hybrid Configuration wizard. InboundConnector Write String The InboundConnector parameter specifies the name of the inbound connector configured on the Microsoft Exchange Online Protection (EOP) service for a hybrid deployment configured with an on-premises Exchange organization. OutboundConnector Write String The OutboundConnector parameter specifies the name of the outbound connector configured on the EOP service for a hybrid deployment configured with an on-premises Exchange organization. OrganizationName Write String The OrganizationName parameter specifies the Active Directory object name of the on-premises Exchange organization. OrganizationGuid Write String The OrganizationGuid parameter specifies the globally unique identifier (GUID) of the on-premises Exchange organization object in the Office 365 tenant. OrganizationRelationship Write String The OrganizationRelationship parameter specifies the organization relationship configured by the Hybrid Configuration wizard on the Office 365 tenant as part of a hybrid deployment with an on-premises Exchange organization. This organization relationship defines the federated sharing features enabled on the Office 365 tenant. Comment Write String The Comment parameter specifies an optional comment. Ensure Write String Specify if the On-Premises Organization should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOOnPremisesOrganization \u00b6 Description \u00b6 This resource configures On-Premises Organization in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOOnPremisesOrganization 'ConfigureOnPremisesOrganization' { Identity = \"Contoso\" Comment = \"Mail for Contoso\" HybridDomains = \"contoso.com\" , \"sales.contoso.com\" InboundConnector = \"Inbound to Contoso\" OrganizationGuid = \"a1bc23cb-3456-bcde-abcd-feb363cacc88\" OrganizationName = \"Contoso\" OutboundConnector = \"Outbound to Contoso\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } } New-OnPremisesOrganization -Name -OrganizationGuid -HybridDomains -InboundConnector -OutboundConnector","title":"EXOOnPremisesOrganization"},{"location":"resources/exchange/EXOOrganizationConfig/","text":"EXOOrganizationConfig \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Only valid value is 'Yes'. Yes ActivityBasedAuthenticationTimeoutEnabled Write Boolean The ActivityBasedAuthenticationTimeoutEnabled parameter specifies whether the timed logoff feature is enabled. The default value is $true ActivityBasedAuthenticationTimeoutInterval Write String The ActivityBasedAuthenticationTimeoutInterval parameter specifies the time span for logoff. You enter this value as a time span: hh:mm:ss where hh = hours, mm = minutes and ss = seconds. Valid values for this parameter are from 00:05:00 to 08:00:00 (5 minutes to 8 hours). The default value is 06:00:00 (6 hours). ActivityBasedAuthenticationTimeoutWithSingleSignOnEnabled Write Boolean The ActivityBasedAuthenticationTimeoutWithSingleSignOnEnabled parameter specifies whether to keep single sign-on enabled. The default value is $true. AppsForOfficeEnabled Write Boolean The AppsForOfficeEnabled parameter specifies whether to enable apps for Outlook features. By default, the parameter is set to $true. If the flag is set to $false, no new apps can be activated for any user in the organization. AllowPlusAddressInRecipients Write Boolean DEPRECATED AsyncSendEnabled Write Boolean The AsyncSendEnabled parameter specifies whether to enable or disable async send in Outlook on the web. AuditDisabled Write Boolean The AuditDisabled parameter specifies whether to disable or enable mailbox auditing for the organization. AutodiscoverPartialDirSync Write Boolean Setting this parameter to $true will cause unknown users to be redirected to the on-premises endpoint and will allow on-premises users to discover their mailbox automatically. AutoExpandingArchive Write Boolean The AutoExpandingArchive switch enables the unlimited archiving feature (called auto-expanding archiving) in an Exchange Online organization. You don't need to specify a value with this switch. BlockMoveMessagesForGroupFolders Write Boolean No description available for BlockMoveMessagesForGroupFolders BookingsAddressEntryRestricted Write Boolean The BookingsAddressEntryRestricted parameter specifies whether addresses can be collected from Bookings customers. BookingsAuthEnabled Write Boolean The BookingsAuthEnabled parameter specifies whether to enforce authentication to access all published Bookings pages. BookingsBlockedWordsEnabled Write Boolean No description available for BookingsBlockedWordsEnabled BookingsCreationOfCustomQuestionsRestricted Write Boolean The BookingsCreationOfCustomQuestionsRestricted parameter specifies whether Bookings admins can add custom questions. BookingsEnabled Write Boolean The BookingsEnabled parameter specifies whether to enable Microsoft Bookings in an organization. BookingsExposureOfStaffDetailsRestricted Write Boolean The BookingsExposureOfStaffDetailsRestricted parameter specifies whether the attributes of internal Bookings staff members are visible to external Bookings customers. BookingsMembershipApprovalRequired Write Boolean The BookingsMembershipApprovalRequired parameter enables a membership approval requirement when new staff members are added to Bookings calendars. BookingsNamingPolicyEnabled Write Boolean No description available for BookingsNamingPolicyEnabled BookingsNamingPolicyPrefix Write String No description available for BookingsNamingPolicyPrefix BookingsNamingPolicyPrefixEnabled Write Boolean No description available for BookingsNamingPolicyPrefixEnabled BookingsNamingPolicySuffix Write String No description available for BookingsNamingPolicySuffix BookingsNamingPolicySuffixEnabled Write Boolean No description available for BookingsNamingPolicySuffixEnabled BookingsNotesEntryRestricted Write Boolean The BookingsNotesEntryRestricted parameter specifies whether appointment notes can be collected from Bookings customers. BookingsPaymentsEnabled Write Boolean The BookingsPaymentsEnabled parameter specifies whether to enable online payment node inside Bookings. BookingsPhoneNumberEntryRestricted Write Boolean The BookingsPhoneNumberEntryRestricted parameter specifies whether phone numbers can be collected from Bookings customers. BookingsSearchEngineIndexDisabled Write Boolean No description available for BookingsSearchEngineIndexDisabled BookingsSmsMicrosoftEnabled Write Boolean No description available for BookingsSmsMicrosoftEnabled BookingsSocialSharingRestricted Write Boolean The BookingsSocialSharingRestricted parameter allows you to control whether, or not, your users can see social sharing options inside Bookings. ByteEncoderTypeFor7BitCharsets Write UInt32 The ByteEncoderTypeFor7BitCharsets parameter specifies the 7-bit transfer encoding method for MIME format for messages sent to this remote domain. ComplianceMLBgdCrawlEnabled Write Boolean No description available for ComplianceMLBgdCrawlEnabled ConnectorsActionableMessagesEnabled Write Boolean The ConnectorsActionableMessagesEnabled parameter specifies whether to enable or disable actionable buttons in messages (connector cards) from connected apps on Outlook on the web. ConnectorsEnabled Write Boolean The ConnectorsEnabled parameter specifies whether to enable or disable all connected apps in organization. ConnectorsEnabledForOutlook Write Boolean The ConnectorsEnabledForOutlook parameter specifies whether to enable or disable connected apps in Outlook on the web. ConnectorsEnabledForSharepoint Write Boolean The ConnectorsEnabledForSharepoint parameter specifies whether to enable or disable connected apps on Sharepoint. ConnectorsEnabledForTeams Write Boolean The ConnectorsEnabledForTeams parameter specifies whether to enable or disable connected apps on Teams. ConnectorsEnabledForYammer Write Boolean The ConnectorsEnabledForYammer parameter specifies whether to enable or disable connected apps on Yammer. CustomerLockboxEnabled Write Boolean Enable Customer Lockbox. DefaultAuthenticationPolicy Write String The DefaultAuthenticationPolicy parameter specifies the authentication policy that's used for the whole organization. You can use any value that uniquely identifies the policy. DefaultGroupAccessType Write String The DefaultGroupAccessType parameter specifies the default access type for Office 365 groups. Private, Public DefaultMinutesToReduceLongEventsBy Write UInt32 The DefaultMinutesToReduceLongEventsBy parameter specifies the number of minutes to reduce calendar events by if the events are 60 minutes or longer. DefaultMinutesToReduceShortEventsBy Write UInt32 The DefaultMinutesToReduceShortEventsBy parameter specifies the number of minutes to reduce calendar events by if the events are less than 60 minutes long. DefaultPublicFolderAgeLimit Write String The DefaultPublicFolderAgeLimit parameter specifies the default age limit for the contents of public folders across the entire organization. Content in a public folder is automatically deleted when this age limit is exceeded. This attribute applies to all public folders in the organization that don't have their own AgeLimit setting. To specify a value, enter it as a time span: dd.hh:mm:ss where d = days, h = hours, m = minutes, and s = seconds. Or, enter the value $null. The default value is blank ($null). DefaultPublicFolderDeletedItemRetention Write String The DefaultPublicFolderDeletedItemRetention parameter specifies the default value of the length of time to retain deleted items for public folders across the entire organization. This attribute applies to all public folders in the organization that don't have their own RetainDeletedItemsFor attribute set. DefaultPublicFolderIssueWarningQuota Write String The DefaultPublicFolderIssueWarningQuota parameter specifies the default value across the entire organization for the public folder size at which a warning message is sent to this folder's owners, warning that the public folder is almost full. This attribute applies to all public folders within the organization that don't have their own warning quota attribute set. The default value of this attribute is unlimited. The valid input range for this parameter is from 0 through 2199023254529 bytes(2 TB). If you enter a value of unlimited, no size limit is imposed on the public folder. DefaultPublicFolderMaxItemSize Write String The DefaultPublicFolderMaxItemSize parameter specifies the default maximum size for posted items within public folders across the entire organization. Items larger than the value of the DefaultPublicFolderMaxItemSize parameter are rejected. This attribute applies to all public folders within the organization that don't have their own MaxItemSize attribute set. The default value of this attribute is unlimited. DefaultPublicFolderMovedItemRetention Write String The DefaultPublicFolderMovedItemRetention parameter specifies how long items that have been moved between mailboxes are kept in the source mailbox for recovery purposes before being removed by the Public Folder Assistant. DefaultPublicFolderProhibitPostQuota Write String The DefaultPublicFolderProhibitPostQuota parameter specifies the size of a public folder at which users are notified that the public folder is full. Users can't post to a folder whose size is larger than the DefaultPublicFolderProhibitPostQuota parameter value. The default value of this attribute is unlimited. DirectReportsGroupAutoCreationEnabled Write Boolean The DirectReportsGroupAutoCreationEnabled parameter specifies whether to enable or disable the automatic creation of direct report Office 365 groups. DisablePlusAddressInRecipients Write Boolean The DisablePlusAddressInRecipients parameter specifies whether to enable or disable plus addressing (also known as subaddressing) for Exchange Online mailboxes. DistributionGroupDefaultOU Write String The DistributionGroupDefaultOU parameter specifies the container where distribution groups are created by default. DistributionGroupNameBlockedWordsList Write StringArray[] The DistributionGroupNameBlockedWordsList parameter specifies words that can't be included in the names of distribution groups. Separate multiple values with commas. DistributionGroupNamingPolicy Write String The DistributionGroupNamingPolicy parameter specifies the template applied to the name of distribution groups that are created in the organization. You can enforce that a prefix or suffix be applied to all distribution groups. Prefixes and suffixes can be either a string or an attribute, and you can combine strings and attributes. ElcProcessingDisabled Write Boolean The ElcProcessingDisabled parameter specifies whether to enable or disable the processing of mailboxes by the Managed Folder Assistant. EnableOutlookEvents Write Boolean The EnableOutlookEvents parameter specifies whether Outlook or Outlook on the web automatically discovers events from email messages and adds them to user calendars. EndUserDLUpgradeFlowsDisabled Write Boolean The EndUserDLUpgradeFlowsDisabled parameter specifies whether to prevent users from upgrading their own distribution groups to Office 365 groups in an Exchange Online organization. EwsAllowEntourage Write Boolean The EwsAllowEntourage parameter specifies whether to enable or disable Entourage 2008 to access Exchange Web Services (EWS) for the entire organization. EwsAllowList Write StringArray[] The EwsAllowList parameter specifies the applications that are allowed to access EWS or REST when the EwsApplicationAccessPolicy parameter is set to EwsAllowList. Other applications that aren't specified by this parameter aren't allowed to access EWS or REST. You identify the application by its user agent string value. Wildcard characters (*) are supported. EwsAllowMacOutlook Write Boolean The EwsAllowMacOutlook parameter enables or disables access to mailboxes by Outlook for Mac clients that use Exchange Web Services (for example, Outlook for Mac 2011 or later). EwsAllowOutlook Write Boolean The EwsAllowOutlook parameter enables or disables access to mailboxes by Outlook clients that use Exchange Web Services. Outlook uses Exchange Web Services for free/busy, out-of-office settings, and calendar sharing. EwsApplicationAccessPolicy Write String The EwsApplicationAccessPolicy parameter specifies the client applications that have access to EWS and REST. EnforceAllowList, EnforceBlockList EwsBlockList Write StringArray[] The EwsBlockList parameter specifies the applications that aren't allowed to access EWS or REST when the EwsApplicationAccessPolicy parameter is set to EnforceBlockList. All other applications that aren't specified by this parameter are allowed to access EWS or REST. You identify the application by its user agent string value. Wildcard characters (*) are supported. EwsEnabled Write Boolean The EwsEnabled parameter specifies whether to globally enable or disable EWS access for the entire organization, regardless of what application is making the request. ExchangeNotificationEnabled Write Boolean The ExchangeNotificationEnabled parameter enables or disables Exchange notifications sent to administrators regarding their organizations. Valid input for this parameter is $true or $false. ExchangeNotificationRecipients Write StringArray[] The ExchangeNotificationRecipients parameter specifies the recipients for Exchange notifications sent to administrators regarding their organizations. If the ExchangeNotificationEnabled parameter is set to $false, no notification messages are sent. Be sure to enclose values that contain spaces in quotation marks and separate multiple values with commas. If this parameter isn't set, Exchange notifications are sent to all administrators. FindTimeAttendeeAuthenticationEnabled Write Boolean The FindTimeAttendeeAuthenticationEnabled parameter controls whether attendees are required to verify their identity in meeting polls using the FindTime Outlook add-in. FindTimeAutoScheduleDisabled Write Boolean The FindTimeAutoScheduleDisabled parameter controls automatically scheduling the meeting once a consensus is reached in meeting polls using the FindTime Outlook add-in. FindTimeLockPollForAttendeesEnabled Write Boolean The FindTimeLockPollForAttendeesEnabled controls whether the Lock poll for attendees setting is managed by the organization. FindTimeOnlineMeetingOptionDisabled Write Boolean The FindTimeOnlineMeetingOptionDisabled parameter controls the availability of the Online meeting checkbox for Teams in meeting polls using the FindTime Outlook add-in. FocusedInboxOn Write Boolean The FocusedInboxOn parameter enables or disables Focused Inbox for the organization. HierarchicalAddressBookRoot Write String The HierarchicalAddressBookRoot parameter specifies the user, contact, or group to be used as the root organization for a hierarchical address book in the Exchange organization. You can use any value that uniquely identifies the recipient. IPListBlocked Write StringArray[] The IPListBlocked parameter specifies the blocked IP addresses that aren't allowed to connect to Exchange Online organization. These settings affect client connections that use Basic authentication where on-premises Active Directory Federation Services (ADFS) servers federate authentication with Azure Active Directory. Note that the new settings might take up to 4 hours to fully propagate across the service. IsGroupFoldersAndRulesEnabled Write Boolean No description available for IsGroupFoldersAndRulesEnabled IsGroupMemberAllowedToEditContent Write Boolean No description available for IsGroupMemberAllowedToEditContent LeanPopoutEnabled Write Boolean The LeanPopoutEnabled parameter specifies whether to enable faster loading of pop-out messages in Outlook on the web for Internet Explorer and Microsoft Edge. LinkPreviewEnabled Write Boolean The LinkPreviewEnabled parameter specifies whether link preview of URLs in email messages is allowed for the organization. MailTipsAllTipsEnabled Write Boolean The MailTipsAllTipsEnabled parameter specifies whether MailTips are enabled. The default value is $true. MailTipsExternalRecipientsTipsEnabled Write Boolean The MailTipsExternalRecipientsTipsEnabled parameter specifies whether MailTips for external recipients are enabled. The default value is $false. MailTipsGroupMetricsEnabled Write Boolean The MailTipsGroupMetricsEnabled parameter specifies whether MailTips that rely on group metrics data are enabled. The default value is $true. MailTipsLargeAudienceThreshold Write UInt32 The MailTipsLargeAudienceThreshold parameter specifies what a large audience is. The default value is 25. MailTipsMailboxSourcedTipsEnabled Write Boolean The MailTipsMailboxSourcedTipsEnabled parameter specifies whether MailTips that rely on mailbox data (out-of-office or full mailbox) are enabled. MaskClientIpInReceivedHeadersEnabled Write Boolean No description available for MaskClientIpInReceivedHeadersEnabled. MatchSenderOrganizerProperties Write Boolean No description available for MatchSenderOrganizerProperties. MessageHighlightsEnabled Write Boolean No description available for MessageHighlightsEnabled. MessageRemindersEnabled Write Boolean The MessageRemindersEnabled parameter enables or disables the message reminders feature in the organization. MobileAppEducationEnabled Write Boolean The MobileAppEducationEnabled specifies whether to show or hide the Outlook for iOS and Android education reminder in Outlook on the web. OAuth2ClientProfileEnabled Write Boolean The OAuth2ClientProfileEnabled parameter enables or disables modern authentication in the Exchange organization. OnlineMeetingsByDefaultEnabled Write Boolean The OnlineMeetingsByDefaultEnabled parameter specifies whether to set all meetings as Teams by default during meeting creation. OutlookGifPickerDisabled Write Boolean The OutlookGifPickerDisabled parameter disables the GIF Search (powered by Bing) feature that's built into the Compose page in Outlook on the web. OutlookMobileGCCRestrictionsEnabled Write Boolean The OutlookMobileGCCRestrictionsEnabled parameter specifies whether to enable or disable features within Outlook for iOS and Android that are not FedRAMP compliant for Office 365 US Government Community Cloud (GCC) customers. OutlookPayEnabled Write Boolean The OutlookPayEnabled parameter enables or disables Payments in Outlook in the Office 365 organization. OutlookTextPredictionDisabled Write Boolean No description available for OutlookTextPredictionDisabled. PublicComputersDetectionEnabled Write Boolean The PublicComputersDetectionEnabled parameter specifies whether Outlook on the web will detect when a user signs from a public or private computer or network, and then enforces the attachment handling settings from public networks. The default is $false. However, if you set this parameter to $true, Outlook on the web will determine if the user is signing in from a public computer, and all public attachment handling rules will be applied and enforced. PublicFoldersEnabled Write String The PublicFoldersEnabled parameter specifies how public folders are deployed in your organization. None, Local, Remote PublicFolderShowClientControl Write Boolean The PublicFolderShowClientControl parameter enables or disables access to public folders in Microsoft Outlook. ReadTrackingEnabled Write Boolean The ReadTrackingEnabled parameter specifies whether the tracking for read status for messages in an organization is enabled. The default value is $false. RecallReadMessagesEnabled Write Boolean No description available for RecallReadMessagesEnabled. RemotePublicFolderMailboxes Write StringArray[] The RemotePublicFolderMailboxes parameter specifies the identities of the public folder objects (represented as mail user objects locally) corresponding to the public folder mailboxes created in the remote forest. The public folder values set here are used only if the public folder deployment is a remote deployment. SendFromAliasEnabled Write Boolean The SendFromAliasEnabled parameter allows mailbox users to send messages using aliases (proxy addresses). It does this by disabling the rewriting of aliases to their primary SMTP address. This change is implemented in the Exchange Online service SharedDomainEmailAddressFlowEnabled Write Boolean No description available for SharedDomainEmailAddressFlowEnabled. ShortenEventScopeDefault Write String The ShortenEventScopeDefault parameter specifies whether calendar events start late or end early in the organization. SiteMailboxCreationURL Write String The SiteMailboxCreationURL parameter specifies the URL that's used to create site mailboxes. Site mailboxes improve collaboration and user productivity by allowing access to both SharePoint documents and Exchange email in Outlook 2013 or later. SmtpActionableMessagesEnabled Write Boolean The SmtpActionableMessagesEnabled parameter specifies whether to enable or disable action buttons in email messages in Outlook on the web. VisibleMeetingUpdateProperties Write String The VisibleMeetingUpdateProperties parameter specifies whether meeting message updates will be auto-processed on behalf of attendees. Auto-processed updates are applied to the attendee's calendar item, and then the meeting message is moved to the deleted items. The attendee never sees the update in their inbox, but their calendar is updated. WebPushNotificationsDisabled Write Boolean The WebPushNotificationsDisabled parameter specifies whether to enable or disable Web Push Notifications in Outlook on the Web. This feature provides web push notifications which appear on a user's desktop while the user is not using Outlook on the Web. This brings awareness of incoming messages while they are working elsewhere on their computer. WebSuggestedRepliesDisabled Write Boolean The WebSuggestedRepliesDisabled parameter specifies whether to enable or disable Suggested Replies in Outlook on the web. This feature provides suggested replies to emails so users can easily and quickly respond to messages. WorkspaceTenantEnabled Write Boolean The WorkspaceTenantEnabled parameter enables or disables workspace booking in the organization. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOOrganizationConfig \u00b6 Description \u00b6 This resource configures the Exchange Online organization-wide settings. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOOrganizationConfig 'EXOOrganizationConfig' { IsSingleInstance = \"Yes\" ElcProcessingDisabled = $False DefaultPublicFolderProhibitPostQuota = \"13 KB (13,312 bytes)\" VisibleMeetingUpdateProperties = \"Location,AllProperties:15\" BookingsEnabled = $True ExchangeNotificationRecipients = @() EwsEnabled = $null LinkPreviewEnabled = $True FocusedInboxOn = $null AsyncSendEnabled = $True EwsAllowEntourage = $null RemotePublicFolderMailboxes = @() AuditDisabled = $False EwsAllowMacOutlook = $null ConnectorsEnabledForTeams = $True DefaultPublicFolderIssueWarningQuota = \"13 KB (13,312 bytes)\" MailTipsMailboxSourcedTipsEnabled = $True EndUserDLUpgradeFlowsDisabled = $False DistributionGroupDefaultOU = $null OutlookPayEnabled = $True EwsAllowOutlook = $null DefaultAuthenticationPolicy = $null DistributionGroupNameBlockedWordsList = @() ConnectorsEnabled = $True DefaultPublicFolderAgeLimit = $null OutlookMobileGCCRestrictionsEnabled = $False ActivityBasedAuthenticationTimeoutEnabled = $True ConnectorsEnabledForYammer = $True HierarchicalAddressBookRoot = $null DefaultPublicFolderMaxItemSize = \"13 KB (13,312 bytes)\" MailTipsLargeAudienceThreshold = 25 ConnectorsActionableMessagesEnabled = $True ExchangeNotificationEnabled = $True ActivityBasedAuthenticationTimeoutWithSingleSignOnEnabled = $True DirectReportsGroupAutoCreationEnabled = $False OAuth2ClientProfileEnabled = $True AppsForOfficeEnabled = $True PublicFoldersEnabled = \"Local\" WebPushNotificationsDisabled = $False MailTipsGroupMetricsEnabled = $True DefaultPublicFolderMovedItemRetention = \"07.00:00:00\" DistributionGroupNamingPolicy = \"\" DefaultPublicFolderDeletedItemRetention = \"30.00:00:00\" MailTipsAllTipsEnabled = $True LeanPopoutEnabled = $False PublicComputersDetectionEnabled = $False ByteEncoderTypeFor7BitCharsets = 0 ConnectorsEnabledForOutlook = $True WebSuggestedRepliesDisabled = $False PublicFolderShowClientControl = $False ActivityBasedAuthenticationTimeoutInterval = \"06:00:00\" BookingsSocialSharingRestricted = $False DefaultGroupAccessType = \"Private\" IPListBlocked = @() SmtpActionableMessagesEnabled = $True SiteMailboxCreationURL = $null BookingsPaymentsEnabled = $False MailTipsExternalRecipientsTipsEnabled = $False AutoExpandingArchive = $null ConnectorsEnabledForSharepoint = $True ReadTrackingEnabled = $False Credential = $credsGlobalAdmin } } }","title":"EXOOrganizationConfig"},{"location":"resources/exchange/EXOOrganizationRelationship/","text":"EXOOrganizationRelationship \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the organization relationship. The maximum length is 64 characters. ArchiveAccessEnabled Write Boolean The ArchiveAccessEnabled parameter specifies whether the organization relationship has been configured to provide remote archive access. DeliveryReportEnabled Write Boolean The DeliveryReportEnabled parameter specifies whether Delivery Reports should be shared over the organization relationship. DomainNames Write StringArray[] The DomainNames parameter specifies the SMTP domains of the external organization. You can specify multiple domains separated by commas. Enabled Write Boolean The Enabled parameter specifies whether to enable the organization relationship. FreeBusyAccessEnabled Write Boolean The FreeBusyAccessEnabled parameter specifies whether the organization relationship should be used to retrieve free/busy information from the external organization. FreeBusyAccessLevel Write String The FreeBusyAccessLevel parameter specifies the maximum amount of detail returned to the requesting organization. Valid values are: None, AvailabilityOnly or LimitedDetails None, AvailabilityOnly, LimitedDetails FreeBusyAccessScope Write String The FreeBusyAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. MailboxMoveEnabled Write Boolean The MailboxMoveEnabled parameter specifies whether the organization relationship enables moving mailboxes to or from the external organization. MailboxMoveCapability Write String The MailboxMoveCapability parameter is used in cross-tenant mailbox migrations. Inbound, Outbound, RemoteInbound, RemoteOutbound, None MailboxMovePublishedScopes Write StringArray[] The MailboxMovePublishedScopes parameter is used in cross-tenant mailbox migrations to specify the mail-enabled security groups whose members are allowed to migrate. MailTipsAccessEnabled Write Boolean The MailTipsAccessEnabled parameter specifies whether MailTips for users in this organization are returned over this organization relationship. MailTipsAccessLevel Write String The MailTipsAccessLevel parameter specifies the level of MailTips data externally shared over this organization relationship. This parameter can have the following values: All, Limited, None None, All, Limited MailTipsAccessScope Write String The MailTipsAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. OauthApplicationId Write String The OAuthApplicationId is used in cross-tenant mailbox migrations to specify the application ID of the mailbox migration app that you consented to. OrganizationContact Write String The OrganizationContact parameter specifies the email address that can be used to contact the external organization (for example, administrator@fourthcoffee.com). PhotosEnabled Write Boolean The PhotosEnabled parameter specifies whether photos for users in the internal organization are returned over the organization relationship. TargetApplicationUri Write String The TargetApplicationUri parameter specifies the target Uniform Resource Identifier (URI) of the external organization. The TargetApplicationUri parameter is specified by Exchange when requesting a delegated token to retrieve free and busy information, for example, mail.contoso.com. TargetAutodiscoverEpr Write String The TargetAutodiscoverEpr parameter specifies the Autodiscover URL of Exchange Web Services for the external organization. Exchange uses Autodiscover to automatically detect the correct Exchangeserver endpoint to use for external requests. TargetOwaURL Write String The TargetOwaURL parameter specifies the Outlook on the web (formerly Outlook Web App) URL of the external organization that's defined in the organization relationship. It is used for Outlook on the web redirection in a cross-premise Exchange scenario. Configuring this attribute enables users in the organization to use their current Outlook on the web URL to access Outlook on the web in the external organization. TargetSharingEpr Write String The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services for the external organization. Ensure Write String Specify if the OrganizationRelationship should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOOrganizationRelationship \u00b6 Description \u00b6 This resource configures the Organization Relationship in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOOrganizationRelationship 'ConfigureOrganizationRelationship' { Name = \"Contoso\" ArchiveAccessEnabled = $True DeliveryReportEnabled = $True DomainNames = \"mail.contoso.com\" Enabled = $True FreeBusyAccessEnabled = $True FreeBusyAccessLevel = \"AvailabilityOnly\" MailboxMoveEnabled = $True MailTipsAccessEnabled = $True MailTipsAccessLevel = \"None\" PhotosEnabled = $True TargetApplicationUri = \"mail.contoso.com\" TargetAutodiscoverEpr = \"https://mail.contoso.com/autodiscover/autodiscover.svc/wssecurity\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOOrganizationRelationship"},{"location":"resources/exchange/EXOOutboundConnector/","text":"EXOOutboundConnector \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the outbound connector that you want to modify. Enabled Write Boolean Specifies whether connector is enabled. UseMXRecord Write Boolean Specifies whether connector should use MXRecords for target resolution. Comment Write String The Comment parameter specifies an optional comment. ConnectorSource Write String The ConnectorSource parameter specifies how the connector is created. DO NOT CHANGE THIS! values are Default (the default) Migrated ConnectorType Write String The ConnectorType parameter specifies a category for the domains that are serviced by the connector. Valid values are Partner and OnPremises Partner, OnPremises RecipientDomains Write StringArray[] The RecipientDomains parameter specifies the domain that the Outbound connector routes mail to. You can specify multiple domains separated by commas. SmartHosts Write StringArray[] The SmartHosts parameter specifies the smart hosts the Outbound connector uses to route mail. This parameter is required if you set the UseMxRecord parameter to $false and must be specified on the same command line. TlsDomain Write String The TlsDomain parameter specifies the domain name that the Outbound connector uses to verify the FQDN of the target certificate when establishing a TLS secured connection. This parameter is only used if the TlsSettings parameter is set to DomainValidation. Valid input for the TlsDomain parameter is an SMTP domain. You can use a wildcard character to specify all subdomains of a specified domain, as shown in the following example: .contoso.com. However, you can't embed a wildcard character, as shown in the following example: domain. .contoso.com TlsSettings Write String The TlsSettings parameter specifies the TLS authentication level that's used for outbound TLS connections established by this Outbound connector. Valid values are:EncryptionOnly CertificateValidation IsTransportRuleScoped Write Boolean The IsTransportRuleScoped parameter specifies whether the Outbound connector is associated with a transport rule (also known as a mail flow rule). Valid values are: $true $false RouteAllMessagesViaOnPremises Write Boolean The RouteAllMessagesViaOnPremises parameter specifies that all messages serviced by this connector are first routed through the on-premises messaging system (Centralized mailrouting). Valid values are: $true $false CloudServicesMailEnabled Write Boolean The CloudServicesMailEnabled parameter specifies whether the connector is used for hybrid mail flow between an on-premises Exchange environment and Microsoft Office 365. Specifically, this parameter controls how certain internal X-MS-Exchange-Organization-* message headers are handled in messages that are sent between accepted domains in the on-premises and cloud organizations. These headers are collectively known as cross-premises headers. DO NOT USE MANUALLY! Valid values are: $true $false AllAcceptedDomains Write Boolean The AllAcceptedDomains parameter specifies whether the Outbound connector is used in hybrid organizations where message recipients are in accepted domains of the cloud-based organization. Valid values are: $true $false (default) SenderRewritingEnabled Write Boolean The SenderRewritingEnabled parameter specifies that all messages that normally qualify for SRS rewriting are rewritten for routing through the on-premises email system. TestMode Write Boolean The TestMode parameter specifies whether you want to enabled or disable test mode for the Outbound connector. Valid values are: $true $false (default) ValidationRecipients Write StringArray[] The ValidationRecipients parameter specifies the email addresses of the validation recipients for the Outbound connector. You can specify multiple email addresses separated by commas. Ensure Write String Specifies if this Outbound connector should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOOutboundConnector \u00b6 Description \u00b6 Create a new Inbound connector in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOOutboundConnector 'ConfigureOutboundConnector' { Identity = \"Contoso Outbound Connector\" AllAcceptedDomains = $True CloudServicesMailEnabled = $True Comment = \"Outbound connector to Contoso\" ConnectorSource = \"Default\" ConnectorType = \"OnPremises\" Enabled = $True IsTransportRuleScoped = $True RecipientDomains = \"*.contoso.com\" RouteAllMessagesViaOnPremises = $True TlsDomain = \"*.contoso.com\" TlsSettings = \"DomainValidation\" UseMxRecord = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOOutboundConnector"},{"location":"resources/exchange/EXOOwaMailboxPolicy/","text":"EXOOwaMailboxPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name for the policy. The maximum length is 64 characters. ActionForUnknownFileAndMIMETypes Write String The ActionForUnknownFileAndMIMETypes parameter specifies how to handle file types that aren't specified in the Allow, Block, and Force Save lists for file types and MIME types Allow, ForceSave, Block ActiveSyncIntegrationEnabled Write Boolean The ActiveSyncIntegrationEnabled parameter specifies whether to enable or disable Exchange ActiveSync settings in Outlook on the web. AdditionalAccountsEnabled Write Boolean No description available. AdditionalStorageProvidersAvailable Write Boolean The AdditionalStorageProvidersAvailable parameter specifies whether to allow additional storage providers (for example, Box, Dropbox, Facebook, Google Drive, Egnyte, personal OneDrive) attachments in Outlook on the web. AllAddressListsEnabled Write Boolean The AllAddressListsEnabled parameter specifies which address lists are available in Outlook on the web. AllowCopyContactsToDeviceAddressBook Write Boolean The AllowCopyContactsToDeviceAddressBook parameter specifies whether users can copy the contents of their Contacts folder to a mobile device's native address book when using Outlook on the web for devices. AllowedFileTypes Write StringArray[] The AllowedFileTypes parameter specifies the attachment file types (file extensions) that can be saved locally or viewed from Outlook on the web. AllowedMimeTypes Write StringArray[] The AllowedMimeTypes parameter specifies the MIME extensions of attachments that allow the attachments to be saved locally or viewed from Outlook on the web. BlockedFileTypes Write StringArray[] The BlockedFileTypes parameter specifies a list of attachment file types (file extensions) that can't be saved locally or viewed from Outlook on the web. BlockedMimeTypes Write StringArray[] The BlockedMimeTypes parameter specifies MIME extensions in attachments that prevent the attachments from being saved locally or viewed from Outlook on the web. BookingsMailboxCreationEnabled Write Boolean No description available. ChangeSettingsAccountEnabled Write Boolean No description available. ClassicAttachmentsEnabled Write Boolean The ClassicAttachmentsEnabled parameter specifies whether users can attach local files as regular email attachments in Outlook on the web. ConditionalAccessPolicy Write String The ConditionalAccessPolicy parameter specifies the Outlook on the Web Policy for limited access. For this feature to work properly, you also need to configure a Conditional Access policy in the Azure Active Directory Portal. Off, ReadOnly, ReadOnlyPlusAttachmentsBlocked DefaultTheme Write String The DefaultTheme parameter specifies the default theme that's used in Outlook on the web when the user hasn't selected a theme. The default value is blank ($null). DirectFileAccessOnPrivateComputersEnabled Write Boolean The DirectFileAccessOnPrivateComputersEnabled parameter specifies the left-click options for attachments in Outlook on the web for private computer sessions. DirectFileAccessOnPublicComputersEnabled Write Boolean The DirectFileAccessOnPrivateComputersEnabled parameter specifies the left-click options for attachments in Outlook on the web for public computer sessions. DisableFacebook Write Boolean The DisableFacebook switch specifies whether users can synchronize their Facebook contacts to their Contacts folder in Outlook on the web. By default, Facebook integration is enabled. DisplayPhotosEnabled Write Boolean The DisplayPhotosEnabled parameter specifies whether users see sender photos in Outlook on the web. ExplicitLogonEnabled Write Boolean The ExplicitLogonEnabled parameter specifies whether to allow a user to open someone else's mailbox in Outlook on the web (provided that user has permissions to the mailbox). ExternalImageProxyEnabled Write Boolean The ExternalImageProxyEnabled parameter specifies whether to load all external images through the Outlook external image proxy. ExternalSPMySiteHostURL Write String The ExternalSPMySiteHostURL specifies the My Site Host URL for external users. FeedbackEnabled Write Boolean The FeedbackEnabled parameter specifies whether to enable or disable inline feedback surveys in Outlook on the web. ForceSaveAttachmentFilteringEnabled Write Boolean The ForceSaveAttachmentFilteringEnabled parameter specifies whether files are filtered before they can be saved from Outlook on the web. ForceSaveFileTypes Write StringArray[] The ForceSaveFileTypes parameter specifies the attachment file types (file extensions) that can only be saved from Outlook on the web (not opened). ForceSaveMimeTypes Write StringArray[] The ForceSaveMimeTypes parameter specifies the MIME extensions in attachments that only allow the attachments to be saved locally (not opened). ForceWacViewingFirstOnPrivateComputers Write Boolean The ForceWacViewingFirstOnPrivateComputers parameter specifies whether private computers must first preview an Office file as a web page in Office Online Server (formerly known as Office Web Apps Server and Web Access Companion Server) before opening the file in the local application. ForceWacViewingFirstOnPublicComputers Write Boolean The ForceWacViewingFirstOnPublicComputers parameter specifies whether public computers must first preview an Office file as a web page in Office Online Server before opening the file in the local application. FreCardsEnabled Write Boolean The FreCardsEnabled parameter specifies whether the theme, signature, and phone cards are available in Outlook on the web. GlobalAddressListEnabled Write Boolean The GlobalAddressListEnabled parameter specifies whether the global address list is available in Outlook on the web. GroupCreationEnabled Write Boolean The GroupCreationEnabled parameter specifies whether Office 365 group creation is available in Outlook on the web. InstantMessagingEnabled Write Boolean The InstantMessagingEnabled parameter specifies whether instant messaging is available in Outlook on the web. InstantMessagingType Write String The InstantMessagingType parameter specifies the type of instant messaging provider in Outlook on the web. None, Ocs InterestingCalendarsEnabled Write Boolean The InterestingCalendarsEnabled parameter specifies whether interesting calendars are available in Outlook on the web. InternalSPMySiteHostURL Write String The InternalSPMySiteHostURL specifies the My Site Host URL for internal users. IRMEnabled Write Boolean The IRMEnabled parameter specifies whether Information Rights Management (IRM) features are available in Outlook on the web. ItemsToOtherAccountsEnabled Write Boolean No description available. IsDefault Write Boolean The IsDefault switch specifies whether the Outlook on the web policy is the default policy that's used to configure the Outlook on the web settings for new mailboxes. JournalEnabled Write Boolean The JournalEnabled parameter specifies whether the Journal folder is available in Outlook on the web. LocalEventsEnabled Write Boolean The LocalEventsEnabled parameter specifies whether local events calendars are available in Outlook on the web. LogonAndErrorLanguage Write SInt32 The LogonAndErrorLanguage parameter specifies the language that used in Outlook on the web for forms-based authentication and for error messages when a user's current language setting can't be read. A valid value is a supported Microsoft Windows Language Code Identifier (LCID). For example, 1033 is US English. MessagePreviewsDisabled Write Boolean No description available. NotesEnabled Write Boolean The NotesEnabled parameter specifies whether the Notes folder is available in Outlook on the web. NpsSurveysEnabled Write Boolean The NpsSurveysEnabled parameter specifies whether to enable or disable the Net Promoter Score (NPS) survey in Outlook on the web. The survey allows uses to rate Outlook on the web on a scale of 1 to 5, and to provide feedback and suggested improvements in free text. OneWinNativeOutlookEnabled Write Boolean The OneWinNativeOutlookEnabled parameter controls the availability of the new Outlook for Windows App. OrganizationEnabled Write Boolean When the OrganizationEnabled parameter is set to $false, the Automatic Reply option doesn't include external and internal options, the address book doesn't show the organization hierarchy, and the Resources tab in Calendar forms is disabled. OnSendAddinsEnabled Write Boolean The OnSendAddinsEnabled parameter specifies whether to enable or disable on send add-ins in Outlook on the web (add-ins that support events when a user clicks Send). OutboundCharset Write String The OutboundCharset parameter specifies the character set that's used for outgoing messages in Outlook on the web. AutoDetect, AlwaysUTF8, UserLanguageChoice OutlookBetaToggleEnabled Write Boolean The OutlookBetaToggleEnabled parameter specifies whether to enable or disable the Outlook on the web Preview toggle. The Preview toggle allows users to try the new Outlook on the web experience. OWALightEnabled Write Boolean The OWALightEnabled parameter controls the availability of the light version of Outlook on the web. PersonalAccountsEnabled Write Boolean No description available. PersonalAccountCalendarsEnabled Write Boolean The PersonalAccountCalendarsEnabled parameter specifies whether to allow users to connect to their personal Outlook.com or Google Calendar in Outlook on the web. PhoneticSupportEnabled Write Boolean The PhoneticSupportEnabled parameter specifies phonetically spelled entries in the address book. This parameter is available for use in Japan. PlacesEnabled Write Boolean The PlacesEnabled parameter specifies whether to enable or disable Places in Outlook on the web. Places lets users search, share, and map location details by using Bing. PremiumClientEnabled Write Boolean The PremiumClientEnabled parameter controls the availability of the full version of Outlook Web App. PrintWithoutDownloadEnabled Write Boolean The PrintWithoutDownloadEnabled specifies whether to allow printing of supported files without downloading the attachment in Outlook on the web. ProjectMocaEnabled Write Boolean The ProjectMocaEnabled parameter enables or disables access to Project Moca in Outlook on the web. PublicFoldersEnabled Write Boolean The PublicFoldersEnabled parameter specifies whether a user can browse or read items in public folders in Outlook Web App. RecoverDeletedItemsEnabled Write Boolean The RecoverDeletedItemsEnabled parameter specifies whether a user can use Outlook Web App to view, recover, or delete permanently items that have been deleted from the Deleted Items folder. ReferenceAttachmentsEnabled Write Boolean The ReferenceAttachmentsEnabled parameter specifies whether users can attach files from the cloud as linked attachments in Outlook on the web. RemindersAndNotificationsEnabled Write Boolean The RemindersAndNotificationsEnabled parameter specifies whether notifications and reminders are enabled in Outlook on the web. ReportJunkEmailEnabled Write Boolean The ReportJunkEmailEnabled parameter specifies whether users can report messages to Microsoft or unsubscribe from messages in Outlook on the web. RulesEnabled Write Boolean The RulesEnabled parameter specifies whether a user can view, create, or modify server-side rules in Outlook on the web. SatisfactionEnabled Write Boolean The SatisfactionEnabled parameter specifies whether to enable or disable the satisfaction survey. SaveAttachmentsToCloudEnabled Write Boolean The SaveAttachmentsToCloudEnabled parameter specifies whether users can save regular email attachments to the cloud. SearchFoldersEnabled Write Boolean The SearchFoldersEnabled parameter specifies whether Search Folders are available in Outlook on the web. SetPhotoEnabled Write Boolean The SetPhotoEnabled parameter specifies whether users can add, change, and remove their sender photo in Outlook on the web. SetPhotoURL Write String The SetPhotoURL parameter controls where users go to select their photo. Note that you can't specify a URL that contains one or more picture files, as there is no mechanism to copy a URL photo to the properties of the users' Exchange Online mailboxes. ShowOnlineArchiveEnabled Write Boolean No description available. SignaturesEnabled Write Boolean The SignaturesEnabled parameter specifies whether to enable or disable the use of signatures in Outlook on the web. SkipCreateUnifiedGroupCustomSharepointClassification Write Boolean The SkipCreateUnifiedGroupCustomSharepointClassification parameter specifies whether to skip a custom SharePoint page during the creation of Office 365 Groups in Outlook web app. TeamSnapCalendarsEnabled Write Boolean The TeamSnapCalendarsEnabled parameter specifies whether to allow users to connect to their personal TeamSnap calendars in Outlook on the web. TextMessagingEnabled Write Boolean The TextMessagingEnabled parameter specifies whether users can send and receive text messages in Outlook on the web. ThemeSelectionEnabled Write Boolean The ThemeSelectionEnabled parameter specifies whether users can change the theme in Outlook on the web. UMIntegrationEnabled Write Boolean The UMIntegrationEnabled parameter specifies whether Unified Messaging (UM) integration is enabled in Outlook on the web. UseGB18030 Write Boolean The UseGB18030 parameter specifies whether to use the GB18030 character set instead of GB2312 in Outlook on the web. UseISO885915 Write Boolean The UseISO885915 parameter specifies whether to use the character set ISO8859-15 instead of ISO8859-1 in Outlook on the web. UserVoiceEnabled Write Boolean The UserVoiceEnabled parameter specifies whether to enable or disable Outlook UserVoice in Outlook on the web. Outlook UserVoice is a customer feedback area that's available in Office 365. WacEditingEnabled Write Boolean The WacEditingEnabled parameter specifies whether to enable or disable editing documents in Outlook on the web by using Office Online Server (formerly known as Office Web Apps Server and Web Access Companion Server). WacExternalServicesEnabled Write Boolean The WacExternalServicesEnabled parameter specifies whether to enable or disable external services when viewing documents in Outlook on the web (for example, machine translation) by using Office Online Server. WacOMEXEnabled Write Boolean The WacOMEXEnabled parameter specifies whether to enable or disable apps for Outlook in Outlook on the web in Office Online Server. WacViewingOnPrivateComputersEnabled Write Boolean The WacViewingOnPrivateComputersEnabled parameter specifies whether to enable or disable web viewing of supported Office documents private computer sessions in Office Online Server (formerly known as Office Web Apps Server and Web Access Companion Server). By default, all Outlook on the web sessions are considered to be on private computers. WacViewingOnPublicComputersEnabled Write Boolean The WacViewingOnPublicComputersEnabled parameter specifies whether to enable or disable web viewing of supported Office documents in public computer sessions in Office Online Server. WeatherEnabled Write Boolean The WeatherEnabled parameter specifies whether to enable or disable weather information in the calendar in Outlook on the web. WebPartsFrameOptionsType Write String The WebPartsFrameOptionsType parameter specifies what sources can access web parts in IFRAME or FRAME elements in Outlook on the web. None, SameOrigin, Deny Ensure Write String Specify if the OWA Mailbox Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOOwaMailboxPolicy \u00b6 Description \u00b6 This resource configures OWA Mailbox Policies in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOOwaMailboxPolicy 'ConfigureOwaMailboxPolicy' { Name = \"OwaMailboxPolicy-Default\" ActionForUnknownFileAndMIMETypes = \"ForceSave\" ActiveSyncIntegrationEnabled = $True AdditionalStorageProvidersAvailable = $True AllAddressListsEnabled = $True AllowCopyContactsToDeviceAddressBook = $True AllowedFileTypes = @( \".rpmsg\" , \".xlsx\" , \".xlsm\" , \".xlsb\" , \".tiff\" , \".pptx\" , \".pptm\" , \".ppsx\" , \".ppsm\" , \".docx\" , \".docm\" , \".zip\" , \".xls\" , \".wmv\" , \".wma\" , \".wav\" , \".vsd\" , \".txt\" , \".tif\" , \".rtf\" , \".pub\" , \".ppt\" , \".png\" , \".pdf\" , \".one\" , \".mp3\" , \".jpg\" , \".gif\" , \".doc\" , \".bmp\" , \".avi\" ) AllowedMimeTypes = @( \"image/jpeg\" , \"image/png\" , \"image/gif\" , \"image/bmp\" ) BlockedFileTypes = @( \".settingcontent-ms\" , \".printerexport\" , \".appcontent-ms\" , \".appref-ms\" , \".vsmacros\" , \".website\" , \".msh2xml\" , \".msh1xml\" , \".diagcab\" , \".webpnp\" , \".ps2xml\" , \".ps1xml\" , \".mshxml\" , \".gadget\" , \".theme\" , \".psdm1\" , \".mhtml\" , \".cdxml\" , \".xbap\" , \".vhdx\" , \".pyzw\" , \".pssc\" , \".psd1\" , \".psc2\" , \".psc1\" , \".msh2\" , \".msh1\" , \".jnlp\" , \".aspx\" , \".appx\" , \".xnk\" , \".xml\" , \".xll\" , \".wsh\" , \".wsf\" , \".wsc\" , \".wsb\" , \".vsw\" , \".vst\" , \".vss\" , \".vhd\" , \".vbs\" , \".vbp\" , \".vbe\" , \".url\" , \".udl\" , \".tmp\" , \".shs\" , \".shb\" , \".sct\" , \".scr\" , \".scf\" , \".reg\" , \".pyz\" , \".pyw\" , \".pyo\" , \".pyc\" , \".pst\" , \".ps2\" , \".ps1\" , \".prg\" , \".prf\" , \".plg\" , \".pif\" , \".pcd\" , \".ops\" , \".msu\" , \".mst\" , \".msp\" , \".msi\" , \".msh\" , \".msc\" , \".mht\" , \".mdz\" , \".mdw\" , \".mdt\" , \".mde\" , \".mdb\" , \".mda\" , \".mcf\" , \".maw\" , \".mav\" , \".mau\" , \".mat\" , \".mas\" , \".mar\" , \".maq\" , \".mam\" , \".mag\" , \".maf\" , \".mad\" , \".lnk\" , \".ksh\" , \".jse\" , \".jar\" , \".its\" , \".isp\" , \".ins\" , \".inf\" , \".htc\" , \".hta\" , \".hpj\" , \".hlp\" , \".grp\" , \".fxp\" , \".exe\" , \".der\" , \".csh\" , \".crt\" , \".cpl\" , \".com\" , \".cnt\" , \".cmd\" , \".chm\" , \".cer\" , \".bat\" , \".bas\" , \".asx\" , \".asp\" , \".app\" , \".apk\" , \".adp\" , \".ade\" , \".ws\" , \".vb\" , \".py\" , \".pl\" , \".js\" ) BlockedMimeTypes = @( \"application/x-javascript\" , \"application/javascript\" , \"application/msaccess\" , \"x-internet-signup\" , \"text/javascript\" , \"application/xml\" , \"application/prg\" , \"application/hta\" , \"text/scriplet\" , \"text/xml\" ) ClassicAttachmentsEnabled = $True ConditionalAccessPolicy = \"Off\" DefaultTheme = \"\" DirectFileAccessOnPrivateComputersEnabled = $True DirectFileAccessOnPublicComputersEnabled = $True DisplayPhotosEnabled = $True ExplicitLogonEnabled = $True ExternalImageProxyEnabled = $True ForceSaveAttachmentFilteringEnabled = $False ForceSaveFileTypes = @( \".vsmacros\" , \".ps2xml\" , \".ps1xml\" , \".mshxml\" , \".gadget\" , \".psc2\" , \".psc1\" , \".aspx\" , \".wsh\" , \".wsf\" , \".wsc\" , \".vsw\" , \".vst\" , \".vss\" , \".vbs\" , \".vbe\" , \".url\" , \".tmp\" , \".swf\" , \".spl\" , \".shs\" , \".shb\" , \".sct\" , \".scr\" , \".scf\" , \".reg\" , \".pst\" , \".ps2\" , \".ps1\" , \".prg\" , \".prf\" , \".plg\" , \".pif\" , \".pcd\" , \".ops\" , \".mst\" , \".msp\" , \".msi\" , \".msh\" , \".msc\" , \".mdz\" , \".mdw\" , \".mdt\" , \".mde\" , \".mdb\" , \".mda\" , \".maw\" , \".mav\" , \".mau\" , \".mat\" , \".mas\" , \".mar\" , \".maq\" , \".mam\" , \".mag\" , \".maf\" , \".mad\" , \".lnk\" , \".ksh\" , \".jse\" , \".its\" , \".isp\" , \".ins\" , \".inf\" , \".hta\" , \".hlp\" , \".fxp\" , \".exe\" , \".dir\" , \".dcr\" , \".csh\" , \".crt\" , \".cpl\" , \".com\" , \".cmd\" , \".chm\" , \".cer\" , \".bat\" , \".bas\" , \".asx\" , \".asp\" , \".app\" , \".adp\" , \".ade\" , \".ws\" , \".vb\" , \".js\" ) ForceSaveMimeTypes = @( \"Application/x-shockwave-flash\" , \"Application/octet-stream\" , \"Application/futuresplash\" , \"Application/x-director\" ) ForceWacViewingFirstOnPrivateComputers = $False ForceWacViewingFirstOnPublicComputers = $False FreCardsEnabled = $True GlobalAddressListEnabled = $True GroupCreationEnabled = $True InstantMessagingEnabled = $True InstantMessagingType = \"Ocs\" InterestingCalendarsEnabled = $True IRMEnabled = $True IsDefault = $True JournalEnabled = $True LocalEventsEnabled = $False LogonAndErrorLanguage = 0 NotesEnabled = $True NpsSurveysEnabled = $True OnSendAddinsEnabled = $False OrganizationEnabled = $True OutboundCharset = \"AutoDetect\" OutlookBetaToggleEnabled = $True OWALightEnabled = $True PersonalAccountCalendarsEnabled = $True PhoneticSupportEnabled = $False PlacesEnabled = $True PremiumClientEnabled = $True PrintWithoutDownloadEnabled = $True PublicFoldersEnabled = $True RecoverDeletedItemsEnabled = $True ReferenceAttachmentsEnabled = $True RemindersAndNotificationsEnabled = $True ReportJunkEmailEnabled = $True RulesEnabled = $True SatisfactionEnabled = $True SaveAttachmentsToCloudEnabled = $True SearchFoldersEnabled = $True SetPhotoEnabled = $True SetPhotoURL = \"\" SignaturesEnabled = $True SkipCreateUnifiedGroupCustomSharepointClassification = $True TeamSnapCalendarsEnabled = $True TextMessagingEnabled = $True ThemeSelectionEnabled = $True UMIntegrationEnabled = $True UseGB18030 = $False UseISO885915 = $False UserVoiceEnabled = $True WacEditingEnabled = $True WacExternalServicesEnabled = $True WacOMEXEnabled = $False WacViewingOnPrivateComputersEnabled = $True WacViewingOnPublicComputersEnabled = $True WeatherEnabled = $True WebPartsFrameOptionsType = \"SameOrigin\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOOwaMailboxPolicy"},{"location":"resources/exchange/EXOPartnerApplication/","text":"EXOPartnerApplication \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies a new name for the partner application. ApplicationIdentifier Write String The ApplicationIdentifier parameter specifies a unique application identifier for the partner application that uses an authorization server. AcceptSecurityIdentifierInformation Write Boolean The AcceptSecurityIdentifierInformation parameter specifies whether Exchange should accept security identifiers (SIDs) from another trusted Active Directory forest for the partner application. AccountType Write String The AccountType parameter specifies the type of Microsoft account that's required for the partner application. OrganizationalAccount, ConsumerAccount Enabled Write Boolean The Enabled parameter specifies whether the partner application is enabled. LinkedAccount Write String The LinkedAccount parameter specifies a linked Active Directory user account for the application. Ensure Write String Specify if the Partner Application should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOPartnerApplication \u00b6 Description \u00b6 This resource configures Partner Applications in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOPartnerApplication 'ConfigurePartnerApplication' { Name = \"HRApp\" ApplicationIdentifier = \"00000006-0000-0dd1-ac00-000000000000\" AccountType = \"OrganizationalAccount\" Enabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOPartnerApplication"},{"location":"resources/exchange/EXOPerimeterConfiguration/","text":"EXOPerimeterConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Write String The Identity parameter specifies the Perimeter Configuration policy that you want to modify. GatewayIPAddresses Write StringArray[] Use the GatewayIPAddresses parameter to create or modify a list of gateway server IP addresses to add to IP safelists. Ensure Write String Specifies if this Outbound connector should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOPerimeterConfiguration \u00b6 Description \u00b6 Modify the perimeter Configuration policy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOPerimeterConfiguration 'ConfigurePerimeterConfiguration' { Identity = \"Global\" GatewayIPAddresses = \"123.0.0.1\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOPerimeterConfiguration"},{"location":"resources/exchange/EXOPolicyTipConfig/","text":"EXOPolicyTipConfig \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the custom Policy Tip you want to modify. Value Write String The Value parameter specifies the text that's displayed by the Policy Tip. Ensure Write String Specify if the Policy Tip Config should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOPolicyTipConfig \u00b6 Description \u00b6 This resource configures Policy Tips in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOPolicyTipConfig 'ConfigurePolicyTipConfig' { Name = \"en\\NotifyOnly\" Value = \"This message contains content that is restricted by Contoso company policy.\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOPolicyTipConfig"},{"location":"resources/exchange/EXOQuarantinePolicy/","text":"EXOQuarantinePolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the QuarantinePolicy you want to modify. EndUserQuarantinePermissionsValue Write UInt32 The EndUserQuarantinePermissionsValue parameter specifies the end-user permissions for the quarantine policy. ESNEnabled Write Boolean The ESNEnabled parameter specifies whether to enable quarantine notifications (formerly known as end-user spam notifications) for the policy. MultiLanguageCustomDisclaimer Write StringArray[] The MultiLanguageCustomDisclaimer parameter specifies the custom disclaimer text to use near the bottom of quarantine notifications. MultiLanguageSenderName Write StringArray[] The MultiLanguageSenderName parameter specifies the email sender's display name to use in quarantine notifications. MultiLanguageSetting Write StringArray[] The MultiLanguageSetting parameter specifies the language of quarantine notifications. OrganizationBrandingEnabled Write Boolean The OrganizationBrandingEnabled parameter enables or disables organization branding in the end-user quarantine notification messages. Ensure Write String Specifies if this QuarantinePolicy should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOQuarantinePolicy \u00b6 Description \u00b6 Create or modify a EXOQuarantinePolicy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) $OrganizationName = $credsGlobalAdmin . UserName . Split ( '@' )[ 1 ] Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOQuarantinePolicy 'ConfigureQuarantinePolicy' { EndUserQuarantinePermissionsValue = 87 ; ESNEnabled = $False ; Identity = \"$OrganizationName\\DefaultFullAccessPolicy\" ; Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOQuarantinePolicy"},{"location":"resources/exchange/EXORemoteDomain/","text":"EXORemoteDomain \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Specify the Identity for the RemoteDomain. DomainName Write String The DomainName parameter specifies the SMTP domain that you want to establish as a remote domain. A valid value is an SMTP domain (for example, contoso.com). The maximum length is 256 characters. Ensure Write String Specify if the RemoteDomain should exist or not. Present, Absent AllowedOOFType Write String The AllowedOOFType parameter specifies the type of automatic replies or out-of-office (also known as OOF) notifications than can be sent to recipients in the remote domain. Valid values are: External, ExternalLegacy, InternalLegacy or None External, ExternalLegacy, InternalLegacy, None AutoForwardEnabled Write Boolean The AutoForwardEnabled parameter specifies whether to allow messages that are auto-forwarded by client email programs in your organization. AutoReplyEnabled Write Boolean The AutoReplyEnabled parameter specifies whether to allow messages that are automatic replies from client email programs in your organization (for example, automatic reply messages that are generated by rules in Outlook). ByteEncoderTypeFor7BitCharsets Write String The ByteEncoderTypeFor7BitCharsets parameter specifies the 7-bit transfer encoding method for MIME format for messages sent to this remote domain. Use7Bit, UseQP, UseBase64, UseQPHtmlDetectTextPlain, UseBase64HtmlDetectTextPlain, UseQPHtml7BitTextPlain, UseBase64Html7BitTextPlain, Undefined CharacterSet Write String The CharacterSet parameter specifies a character set for MIME messages without defined character sets that are sent from your organization to recipients in the remote domain. ContentType Write String The ContentType parameter specifies the outbound message content type and formatting. MimeHtmlText, MimeText, MimeHtml DeliveryReportEnabled Write Boolean The DeliveryReportEnabled parameter specifies whether to allow delivery reports from client software in your organization to recipients in the remote domain. DisplaySenderName Write Boolean The DisplaySenderName parameter specifies whether to show the sender's Display Name in the From email address for messages sent to recipients in the remote domain. IsInternal Write Boolean The IsInternal parameter specifies whether the recipients in the remote domain are considered to be internal recipients. LineWrapSize Write String The LineWrapSize parameter specifies the line-wrap size for messages to recipients in the remote domain. Valid values are an integer from 0 through 132 or the value to unlimited. The default value is unlimited. MeetingForwardNotificationEnabled Write Boolean The MeetingForwardNotificationEnabled parameter specifies whether to enable meeting forward notifications for recipients in the remote domain. Name Write String The Name parameter specifies a unique name for the remote domain object. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks. NDREnabled Write Boolean The NDREnabled parameter specifies whether to allow non-delivery reports (also known NDRs or bounce messages) from your organization to recipients in the remote domain. NonMimeCharacterSet Write String The NonMimeCharacterSet parameter specifies a character set for plain text messages without defined character sets that are sent from your organization to recipients in the remote domain. PreferredInternetCodePageForShiftJis Write String The PreferredInternetCodePageForShiftJis parameter specifies the specific code page to use for Shift JIS character encoding in messages that are sent to recipients in the remote domain. 50220, 50221, 50222, Undefined RequiredCharsetCoverage Write SInt32 The RequiredCharsetCoverage parameter specifies a percentage threshold for characters in a message that must match to apply your organization's preferred character set before switching to automatic character set detection. TargetDeliveryDomain Write Boolean The TargetDeliveryDomain parameter specifies whether the remote domain is used in cross-forest deployments to generate target email addresses for new mail users that represent users in the other organization (for example, all mailboxes hosted on Exchange Online are represented as mail users in your on-premises organization). TNEFEnabled Write Boolean The TNEFEnabled parameter specifies whether Transport Neutral Encapsulation Format (TNEF) message encoding is used on messages sent to the remote domain. TrustedMailInboundEnabled Write Boolean The TrustedMailInboundEnabled parameter specifies whether messages from senders in the remote domain are treated as trusted messages. TrustedMailOutboundEnabled Write Boolean The TrustedMailOutboundEnabled parameter specifies whether messages sent to recipients in the remote domain are treated as trusted messages. UseSimpleDisplayName Write Boolean The UseSimpleDisplayName parameter specifies whether the sender's simple display name is used for the From email address in messages sent to recipients in the remote domain. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXORemoteDomain \u00b6 Description \u00b6 This resource configures the Remote Email Domains in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXORemoteDomain 583b0b70-b45d - 401f - 98a6 - 0e7fa8434946 { Identity = \"Default\" AllowedOOFType = \"External\" AutoForwardEnabled = $True AutoReplyEnabled = $True ByteEncoderTypeFor7BitCharsets = \"Undefined\" CharacterSet = \"iso-8859-1\" ContentType = \"MimeHtmlText\" DeliveryReportEnabled = $True DisplaySenderName = $True DomainName = \"*\" IsInternal = $False LineWrapSize = \"Unlimited\" MeetingForwardNotificationEnabled = $False Name = \"Default\" NonMimeCharacterSet = \"iso-8859-1\" PreferredInternetCodePageForShiftJis = \"Undefined\" TargetDeliveryDomain = $False TrustedMailInboundEnabled = $False TrustedMailOutboundEnabled = $False UseSimpleDisplayName = $False Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXORemoteDomain"},{"location":"resources/exchange/EXOResourceConfiguration/","text":"EXOResourceConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Write String The Identity parameter specifies the Perimeter Configuration policy that you want to modify. ResourcePropertySchema Write StringArray[] The ResourcePropertySchema parameter specifies the custom resource property that you want to make available to room or equipment mailboxes. This parameter uses the syntax Room/ or Equipment/ where the value doesn't contain spaces. For example, Room/Whiteboard or Equipment/Van. Ensure Write String Specifies if this Outbound connector should exist. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOResourceConfiguration \u00b6 Description \u00b6 Modify the resource Configuration policy in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOResourceConfiguration 'ConfigureResourceConfiguration' { Identity = \"Global\" ResourcePropertySchema = @(@{ Add = \"Room/TV\" ; Remove = \"Equipment/Laptop\" }) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOResourceConfiguration"},{"location":"resources/exchange/EXORoleAssignmentPolicy/","text":"EXORoleAssignmentPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the new name of the assignment policy. The maximum length is 64 characters. Description Write String The Description parameter specifies the description that's displayed when the role assignment policy is viewed using the Get-RoleAssignmentPolicy cmdlet. IsDefault Write Boolean The IsDefault switch makes the assignment policy the default assignment policy. Roles Write StringArray[] The Roles parameter specifies the management roles to assign to the role assignment policy when it's created. Ensure Write String Specify if the Role Assignment Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXORoleAssignmentPolicy \u00b6 Description \u00b6 This resource configures Role Assignment Policies in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXORoleAssignmentPolicy 'ConfigureRoleAssignmentPolicy' { Name = \"Default Role Assignment Policy\" Description = \"This policy grants end users the permission to set their options in Outlook on the web and perform other self-administration tasks.\" IsDefault = $True Roles = @( \"My Marketplace Apps\" , \"MyVoiceMail\" , \"MyDistributionGroups\" , \"MyRetentionPolicies\" , \"MyTeamMailboxes\" , \"MyContactInformation\" , \"MyMailSubscriptions\" , \"MyBaseOptions\" , \"MyTextMessaging\" , \"MyDistributionGroupMembership\" , \"MyProfileInformation\" , \"My Custom Apps\" , \"My ReadWriteMailbox Apps\" ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXORoleAssignmentPolicy"},{"location":"resources/exchange/EXOSafeAttachmentPolicy/","text":"EXOSafeAttachmentPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the SafeAttachmentpolicy that you want to modify. Action Write String The Action parameter specifies the action for the Safe Attachments policy. Block, Replace, Allow, DynamicDelivery ActionOnError Write Boolean The ActionOnError parameter specifies the error handling option for Safe Attachments scanning (what to do if scanning times out or an error occurs). Valid values are: $true: The action specified by the Action parameter is applied to messages even when the attachments aren't successfully scanned. $false: The action specified by the Action parameter isn't applied to messages when the attachments aren't successfully scanned. This is the default value. AdminDisplayName Write String The AdminDisplayName parameter specifies a description for the policy. Enable Write Boolean Specify if this policy should be enabled. Default is $true. QuarantineTag Write String The QuarantineTag specifies the quarantine policy that's used on messages that are quarantined as malware by Safe Attachments. Redirect Write Boolean The Redirect parameter specifies whether to send detected malware attachments to another email address. Valid values are: $true: Malware attachments are sent to the email address specified by the RedirectAddress parameter. $false: Malware attachments aren't sent to another email address. This is the default value. RedirectAddress Write String The RedirectAddress parameter specifies the email address where detected malware attachments are sent when the Redirect parameter is set to the value $true. Ensure Write String Specify if this policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOSafeAttachmentPolicy \u00b6 Description \u00b6 This resource configures the settings of the Safe Attachments policies in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOSafeAttachmentPolicy 'ConfigureSafeAttachmentPolicy' { Identity = \"Marketing Block Attachments\" Enable = $True Redirect = $True RedirectAddress = \"admin@contoso.com\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOSafeAttachmentPolicy"},{"location":"resources/exchange/EXOSafeAttachmentRule/","text":"EXOSafeAttachmentRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the SafeAttachment rule that you want to modify. SafeAttachmentPolicy Required String The SafeAttachmentPolicy parameter specifies the name of the SafeAttachment policy that's associated with the SafeAttachment rule. Enabled Write Boolean Specify if this rule should be enabled. Default is $true. Priority Write UInt32 The Priority parameter specifies a priority value for the rule that determines the order of rule processing. A lower integer value indicates a higher priority, the value 0 is the highest priority, and rules can't have the same priority value. Comments Write String The Comments parameter specifies informative comments for the rule, such as what the rule is used for or how it has changed over time. The length of the comment can't exceed 1024 characters. ExceptIfRecipientDomainIs Write StringArray[] The ExceptIfRecipientDomainIs parameter specifies an exception that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. ExceptIfSentTo Write StringArray[] The ExceptIfSentTo parameter specifies an exception that looks for recipients in messages. You can use any value that uniquely identifies the recipient. ExceptIfSentToMemberOf Write StringArray[] The ExceptIfSentToMemberOf parameter specifies an exception that looks for messages sent to members of groups. You can use any value that uniquely identifies the group. RecipientDomainIs Write StringArray[] The RecipientDomainIs parameter specifies a condition that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. SentTo Write StringArray[] The SentTo parameter specifies a condition that looks for recipients in messages. You can use any value that uniquely identifies the recipient. SentToMemberOf Write StringArray[] The SentToMemberOf parameter looks for messages sent to members of groups. You can use any value that uniquely identifies the group. Ensure Write String Specify if this rule should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOSafeAttachmentRule \u00b6 Description \u00b6 This resource configures an Safe Attachment Rule in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOSafeAttachmentRule 'ConfigureSafeAttachmentRule' { Identity = \"Research Department Attachment Rule\" Comments = \"Applies to Research Department, except managers\" Enabled = $True ExceptIfSentToMemberOf = \"Research Department Managers\" SafeAttachmentPolicy = \"Research Block Attachments\" SentToMemberOf = \"Research Department\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOSafeAttachmentRule"},{"location":"resources/exchange/EXOSafeLinksPolicy/","text":"EXOSafeLinksPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the SafeLinks policy that you want to modify. Ensure Write String Specify if this policy should exist or not. Present, Absent AdminDisplayName Write String The AdminDisplayName parameter specifies a description for the policy. AllowClickThrough Write Boolean The AllowClickThrough parameter specifies whether to allow users to click through to the original URL on warning pages. CustomNotificationText Write String The custom notification text specifies the customized notification text to show to users. DeliverMessageAfterScan Write Boolean The DeliverMessageAfterScan parameter specifies whether to deliver email messages only after Safe Links scanning is complete. Valid values are: $true: Wait until Safe Links scanning is complete before delivering the message. $false: If Safe Links scanning can't complete, deliver the message anyway. This is the default value. DoNotAllowClickThrough Write Boolean DEPRECATED DoNotRewriteUrls Write StringArray[] The DoNotRewriteUrls parameter specifies a URL that's skipped by Safe Links scanning. You can specify multiple values separated by commas. DoNotTrackUserClicks Write Boolean DEPRECATED EnableForInternalSenders Write Boolean The EnableForInternalSenders parameter specifies whether the Safe Links policy is applied to messages sent between internal senders and internal recipients within the same Exchange Online organization. EnableOrganizationBranding Write Boolean The EnableOrganizationBranding parameter specifies whether your organization's logo is displayed on Safe Links warning and notification pages. EnableSafeLinksForOffice Write Boolean The EnableSafeLinksForOffice parameter specifies whether to enable Safe Links protection for supported Office desktop, mobile, or web apps. EnableSafeLinksForTeams Write Boolean The EnableSafeLinksForTeams parameter specifies whether Safe Links is enabled for Microsoft Teams. Valid values are: $true: Safe Links is enabled for Teams. If a protected user clicks a malicious link in a Teams conversation, group chat, or from channels, a warning page will appear in the default web browser. $false: Safe Links isn't enabled for Teams. This is the default value. EnableSafeLinksForEmail Write Boolean The EnableSafeLinksForEmail parameter specifies whether to enable Safe Links protection for email messages. Valid values are: $true: Safe Links is enabled for email. When a user clicks a link in an email, the link is checked by Safe Links. If the link is found to be malicious, a warning page appears in the default web browser. $false: Safe Links isn't enabled for email. This is the default value. DisableUrlRewrite Write Boolean The DisableUrlRewrite parameter specifies whether to rewrite (wrap) URLs in email messages. Valid values are: $true: URLs in messages are not rewritten, but messages are still scanned by Safe Links prior to delivery. Time of click checks on links are done using the Safe Links API in supported Outlook clients (currently, Outlook for Windows and Outlook for Mac). Typically, we don't recommend using this value. $false: URLs in messages are rewritten. API checks still occur on unwrapped URLs in supported clients if the user is in a valid Safe Links policy. This is the default value. IsEnabled Write Boolean DEPRECATED ScanUrls Write Boolean The ScanUrls parameter specifies whether to enable or disable the scanning of links in email messages. Valid values are: $true: Scanning links in email messages is enabled. $false: Scanning links in email messages is disabled. This is the default value. TrackClicks Write Boolean The TrackClicks parameter specifies whether to track user clicks related to Safe Links protection of links. UseTranslatedNotificationText Write Boolean The UseTranslatedNotificationText specifies whether to use Microsoft Translator to automatically localize the custom notification text that you specified with the CustomNotificationText parameter. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOSafeLinksPolicy \u00b6 Description \u00b6 This resource configures the settings of the SafeLinks policies in your cloud-based organization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOSafeLinksPolicy 'ConfigureSafeLinksPolicy' { Identity = \"Marketing Block URL\" AdminDisplayName = \"Marketing Block URL\" CustomNotificationText = \"Blocked URLs for Marketing\" DeliverMessageAfterScan = $True DoNotAllowClickThrough = $True DoNotTrackUserClicks = $True EnableOrganizationBranding = $True EnableSafeLinksForTeams = $True IsEnabled = $True ScanUrls = $True UseTranslatedNotificationText = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOSafeLinksPolicy"},{"location":"resources/exchange/EXOSafeLinksRule/","text":"EXOSafeLinksRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter specifies the name of the SafeLink rule that you want to modify. Ensure Write String Specify if this rule should exist or not. Present, Absent SafeLinksPolicy Required String The SafeLinksPolicy parameter specifies the name of the SafeLink policy that's associated with the SafeLinksing rule. Enabled Write Boolean Specify if this rule should be enabled. Default is $true. Priority Write UInt32 The Priority parameter specifies a priority value for the rule that determines the order of rule processing. A lower integer value indicates a higher priority, the value 0 is the highest priority, and rules can't have the same priority value. Comments Write String The Comments parameter specifies informative comments for the rule, such as what the rule is used for or how it has changed over time. The length of the comment can't exceed 1024 characters. ExceptIfRecipientDomainIs Write StringArray[] The ExceptIfRecipientDomainIs parameter specifies an exception that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. ExceptIfSentTo Write StringArray[] The ExceptIfSentTo parameter specifies an exception that looks for recipients in messages. You can use any value that uniquely identifies the recipient. ExceptIfSentToMemberOf Write StringArray[] The ExceptIfSentToMemberOf parameter specifies an exception that looks for messages sent to members of groups. You can use any value that uniquely identifies the group. RecipientDomainIs Write StringArray[] The RecipientDomainIs parameter specifies a condition that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. SentTo Write StringArray[] The SentTo parameter specifies a condition that looks for recipients in messages. You can use any value that uniquely identifies the recipient. SentToMemberOf Write StringArray[] The SentToMemberOf parameter looks for messages sent to members of groups. You can use any value that uniquely identifies the group. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOSafeLinksRule \u00b6 Description \u00b6 This resource configures an SafeLinks Rule in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOSafeLinksRule 'ConfigureSafeLinksRule' { Identity = \"Research Department URL Rule\" Comments = \"Applies to Research Department, except managers\" Enabled = $True ExceptIfSentToMemberOf = \"Research Department Managers\" SafeLinksPolicy = \"Research Block URL\" SentToMemberOf = \"Research Department\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOSafeLinksRule"},{"location":"resources/exchange/EXOSharedMailbox/","text":"EXOSharedMailbox \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String The display name of the Shared Mailbox PrimarySMTPAddress Write String The primary email address of the Shared Mailbox Alias Write String The alias of the Shared Mailbox Aliases Write StringArray[] DEPRECATED EmailAddresses Write StringArray[] The EmailAddresses parameter specifies all the email addresses (proxy addresses) for the Shared Mailbox Ensure Write String Present ensures the group exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOSharedMailbox \u00b6 Description \u00b6 This resource allows users to create Office 365 Shared Mailboxes. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOSharedMailbox 'SharedMailbox' { DisplayName = \"Test\" PrimarySMTPAddress = \"Test@O365DSC1.onmicrosoft.com\" EmailAddresses = @( \"Joufflu@o365dsc1.onmicrosoft.com\" , \"Gilles@O365dsc1.onmicrosoft.com\" ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOSharedMailbox"},{"location":"resources/exchange/EXOSharingPolicy/","text":"EXOSharingPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the sharing policy. The maximum length is 64 characters. Default Write Boolean The Default switch specifies that the sharing policy is the default sharing policy for all mailboxes. Enabled Write Boolean The Enabled parameter specifies whether to enable the sharing policy. Valid values for this parameter are $true or $false. Domains Write StringArray[] The Domains parameter specifies domains to which this policy applies and the sharing policy action. Ensure Write String Specify if the Sharing Policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOSharingPolicy \u00b6 Description \u00b6 This resource configures Sharing Policies in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOSharingPolicy 'ConfigureSharingPolicy' { Name = \"Default Sharing Policy\" Default = $True Domains = @( \"Anonymous:CalendarSharingFreeBusyReviewer\" , \"*:CalendarSharingFreeBusySimple\" ) Enabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOSharingPolicy"},{"location":"resources/exchange/EXOTransportConfig/","text":"EXOTransportConfig \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes'. Yes AddressBookPolicyRoutingEnabled Write Boolean The AddressBookPolicyRoutingEnabled parameter controls how recipients are resolved in an organization that uses address book policies to create separate virtual organizations within the same Exchange organization. AllowLegacyTLSClients Write Boolean Allow legacy TLS clients ClearCategories Write Boolean The ClearCategories parameter keeps or removes Microsoft Outlook message categories during content conversion. ConvertDisclaimerWrapperToEml Write Boolean The ConvertDisclaimerWrapperToEml parameter specifies whether the original message will be added as a TNEF attachment or a regular EML attachment to a disclaimer. DSNConversionMode Write String The DSNConversionMode parameter controls how Exchange handles delivery status notifications that are generated by earlier versions of Exchange or other messaging systems. ExternalDelayDsnEnabled Write Boolean The ExternalDelayDsnEnabled parameter specifies whether a delay delivery status notification (DSN) message should be created for external messages that couldn't be immediately delivered. ExternalDsnDefaultLanguage Write String The ExternalDsnDefaultLanguage parameter specifies which Exchange server language should be used by default when you create external DSN messages. ExternalDsnLanguageDetectionEnabled Write Boolean The ExternalDsnLanguageDetectionEnabled parameter specifies whether the server should try to send an external DSN message in the same language as the original message that generated the notification. ExternalDsnReportingAuthority Write String The ExternalDsnReportingAuthority parameter specifies the domain in the machine-readable part of external DSN messages. ExternalDsnSendHtml Write Boolean The ExternalDsnSendHtml parameter specifies whether external DSN messages should be HTML or plain text. ExternalPostmasterAddress Write String The ExternalPostmasterAddress parameter specifies the email address in the From header field of an external DSN message. HeaderPromotionModeSetting Write String The HeaderPromotionModeSetting parameter specifies whether named properties are created for custom X-headers on messages received. InternalDelayDsnEnabled Write Boolean The InternalDelayDsnEnabled parameter specifies whether a delay DSN message should be created for messages sent to or from recipients or senders in the same Exchange organization that couldn't be immediately delivered. InternalDsnDefaultLanguage Write String The InternalDsnDefaultLanguage parameter specifies which Exchange server language should be used by default when you create internal DSN messages. InternalDsnLanguageDetectionEnabled Write Boolean The InternalDsnLanguageDetectionEnabled parameter specifies whether the server should try to send an internal DSN message in the same language as the original message that generated the notification. InternalDsnReportingAuthority Write String The InternalDsnReportingAuthority parameter specifies the domain in the machine-readable part of internal DSN messages. InternalDsnSendHtml Write Boolean The InternalDsnSendHtml parameter specifies whether internal DSN messages should be HTML or plain text. JournalMessageExpirationDays Write SInt32 The JournalMessageExpirationDays parameter extends the number of days that undeliverable journal reports are queued before they expire. JournalingReportNdrTo Write String The JournalingReportNdrTo parameter specifies the email address to which journal reports are sent if the journaling mailbox is unavailable. MaxRecipientEnvelopeLimit Write String The MaxRecipientEnvelopeLimit parameter specifies the maximum number of recipients in a message. ReplyAllStormBlockDurationHours Write SInt32 Reply all storm block duration hours. ReplyAllStormDetectionMinimumRecipients Write SInt32 Reply all storm detection minimum recipients. ReplyAllStormDetectionMinimumReplies Write SInt32 Reply all storm detection minimum replies. ReplyAllStormProtectionEnabled Write Boolean Reply all storm protection enabled. Rfc2231EncodingEnabled Write Boolean The Rfc2231EncodingEnabled parameter specifies whether the RFC 2231 encoding of MIME parameters for outbound messages is enabled in your organization. SmtpClientAuthenticationDisabled Write Boolean The SmtpClientAuthenticationDisabled parameter specifies whether to disable authenticated SMTP (SMTP AUTH) for the whole organization. Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOTransportConfig \u00b6 Description \u00b6 This resource configures the Exchange Online transport settings. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOTransportConfig 'EXOTransportConfig ' { IsSingleInstance = \"Yes\" ; AddressBookPolicyRoutingEnabled = $True ; ClearCategories = $True ; ConvertDisclaimerWrapperToEml = $False ; DSNConversionMode = \"PreserveDSNBody\" ; ExternalDelayDsnEnabled = $True ; ExternalDsnLanguageDetectionEnabled = $True ; ExternalDsnSendHtml = $True ; ExternalPostmasterAddress = \"postmaster@contoso.com\" ; HeaderPromotionModeSetting = \"NoCreate\" ; InternalDelayDsnEnabled = $True ; InternalDsnLanguageDetectionEnabled = $True ; InternalDsnSendHtml = $True ; JournalingReportNdrTo = \"<>\" ; JournalMessageExpirationDays = 0 ; MaxRecipientEnvelopeLimit = \"Unlimited\" ; ReplyAllStormBlockDurationHours = 6 ; ReplyAllStormDetectionMinimumRecipients = 2500 ; ReplyAllStormDetectionMinimumReplies = 10 ; ReplyAllStormProtectionEnabled = $True ; Rfc2231EncodingEnabled = $False ; SmtpClientAuthenticationDisabled = $True ; Credential = $credsGlobalAdmin } } }","title":"EXOTransportConfig"},{"location":"resources/exchange/EXOTransportRule/","text":"EXOTransportRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the display name of the transport rule to be created. The maximum length is 64 characters. ADComparisonAttribute Write String This parameter specifies a condition or part of a condition for the rule. The name of the corresponding exception parameter starts with ExceptIf. ADComparisonOperator Write String This parameter specifies a condition or part of a condition for the rule. The name of the corresponding exception parameter starts with ExceptIf. Equal, NotEqual ActivationDate Write String The ActivationDate parameter specifies when the rule starts processing messages. The rule won't take any action on messages until the specified date/time. AddManagerAsRecipientType Write String The AddManagerAsRecipientType parameter specifies an action that delivers or redirects messages to the user that's defined in the sender's Manager attribute. To, Cc, Bcc, Redirect AddToRecipients Write StringArray[] The AddToRecipients parameter specifies an action that adds recipients to the To field of messages. AnyOfCcHeader Write StringArray[] The AnyOfCcHeader parameter specifies a condition that looks for recipients in the Cc field of messages. AnyOfCcHeaderMemberOf Write StringArray[] The AnyOfCcHeaderMemberOf parameter specifies a condition that looks for group members in the Cc field of messages. AnyOfRecipientAddressContainsWords Write StringArray[] The AnyOfRecipientAddressContainsWords parameter specifies a condition that looks for words in recipient email addresses. AnyOfRecipientAddressMatchesPatterns Write StringArray[] The AnyOfRecipientAddressMatchesPatterns parameter specifies a condition that looks for text patterns in recipient email addresses by using regular expressions. AnyOfToCcHeader Write StringArray[] The AnyOfToCcHeader parameter specifies a condition that looks for recipients in the To or Cc fields of messages. AnyOfToCcHeaderMemberOf Write StringArray[] The AnyOfToCcHeaderMemberOf parameter specifies a condition that looks for group members in the To and Cc fields of messages. AnyOfToHeader Write StringArray[] The AnyOfToHeader parameter specifies a condition that looks for recipients in the To field of messages. AnyOfToHeaderMemberOf Write StringArray[] The AnyOfToHeaderMemberOf parameter specifies a condition that looks for group members in the To field of messages. ApplyClassification Write String The ApplyClassification parameter specifies an action that applies a message classification to messages. ApplyHtmlDisclaimerFallbackAction Write String The ApplyHtmlDisclaimerFallbackAction parameter specifies what to do if the HTML disclaimer can't be added to a message. Wrap, Ignore, Reject ApplyHtmlDisclaimerLocation Write String The ApplyHtmlDisclaimerLocation parameter specifies where to insert the HTML disclaimer text in the body of messages. Append, Prepend ApplyHtmlDisclaimerText Write String The ApplyHtmlDisclaimerText parameter specifies an action that adds the disclaimer text to messages. ApplyOME Write Boolean The ApplyOME parameter specifies an action that encrypts messages and their attachments by using Office 365 Message Encryption. ApplyRightsProtectionCustomizationTemplate Write String The ApplyRightsProtectionCustomizationTemplate parameter specifies an action that applies a custom branding template for OME encrypted messages. ApplyRightsProtectionTemplate Write String The ApplyRightsProtectionTemplate parameter specifies an action that applies rights management service (RMS) templates to messages. AttachmentContainsWords Write StringArray[] The AttachmentContainsWords parameter specifies a condition that looks for words in message attachments. AttachmentExtensionMatchesWords Write StringArray[] The AttachmentExtensionMatchesWords parameter specifies a condition that looks for words in the file name extensions of message attachments. AttachmentHasExecutableContent Write Boolean The AttachmentHasExecutableContent parameter specifies a condition that looks for executable content in message attachments. AttachmentIsPasswordProtected Write Boolean The AttachmentIsPasswordProtected parameter specifies a condition that looks for password protected files in messages (because the contents of the file can't be inspected). AttachmentIsUnsupported Write Boolean The AttachmentIsUnsupported parameter specifies a condition that looks for unsupported file types in messages. AttachmentMatchesPatterns Write StringArray[] The AttachmentMatchesPatterns parameter specifies a condition that looks for text patterns in the content of message attachments by using regular expressions. AttachmentNameMatchesPatterns Write StringArray[] The AttachmentNameMatchesPatterns parameter specifies a condition that looks for text patterns in the file name of message attachments by using regular expressions. AttachmentProcessingLimitExceeded Write Boolean The AttachmentProcessingLimitExceeded parameter specifies a condition that looks for messages where attachment scanning didn't complete. AttachmentPropertyContainsWords Write StringArray[] The AttachmentPropertyContainsWords parameter specifies a condition that looks for words in the properties of attached Office documents. AttachmentSizeOver Write String The AttachmentSizeOver parameter specifies a condition that looks for messages where any attachment is greater than the specified size. BetweenMemberOf1 Write StringArray[] The BetweenMemberOf1 parameter specifies a condition that looks for messages that are sent between group members. BetweenMemberOf2 Write StringArray[] The BetweenMemberOf2 parameter specifies a condition that looks for messages that are sent between group members. BlindCopyTo Write StringArray[] The BlindCopyTo parameter specifies an action that adds recipients to the Bcc field of messages. Comments Write String The Comments parameter specifies optional descriptive text for the rule. The length of the comment can't exceed 1024 characters. ContentCharacterSetContainsWords Write StringArray[] The ContentCharacterSetContainsWords parameter specifies a condition that looks for character set names in messages. CopyTo Write StringArray[] The CopyTo parameter specifies an action that adds recipients to the Cc field of messages. DeleteMessage Write Boolean The DeleteMessage parameter specifies an action that silently drops messages without an NDR. DlpPolicy Write String The DlpPolicy parameter specifies the data loss prevention (DLP) policy that's associated with the rule. Enabled Write Boolean The Enabled parameter specifies whether the new rule is created as enabled or disabled. ExceptIfADComparisonAttribute Write String The ExceptIfADComparisonAttribute parameter specifies an exception that compares an Active Directory attribute between the sender and all recipients of the message. ExceptIfADComparisonOperator Write String The ExceptIfADComparisonOperator parameter specifies the comparison operator for the ExceptIfADComparisonAttribute parameter. Equal, NotEqual ExceptIfAnyOfCcHeader Write StringArray[] The ExceptIfAnyOfCcHeader parameter specifies an exception that looks for recipients in the Cc field of messages. ExceptIfAnyOfCcHeaderMemberOf Write StringArray[] The ExceptIfAnyOfCcHeaderMemberOf parameter specifies an exception that looks for group members in the Cc field of messages. You can use any value that uniquely identifies the group. ExceptIfAnyOfRecipientAddressContainsWords Write StringArray[] The ExceptIfAnyOfRecipientAddressContainsWords parameter specifies an exception that looks for words in recipient email addresses. ExceptIfAnyOfRecipientAddressMatchesPatterns Write StringArray[] The ExceptIfAnyOfRecipientAddressMatchesPatterns parameter specifies an exception that looks for text patterns in recipient email addresses by using regular expressions. ExceptIfAnyOfToCcHeader Write StringArray[] The ExceptIfAnyOfToCcHeader parameter specifies an exception that looks for recipients in the To or Cc fields of messages. ExceptIfAnyOfToCcHeaderMemberOf Write StringArray[] The ExceptIfAnyOfToCcHeaderMemberOf parameter specifies an exception that looks for group members in the To and Cc fields of messages. ExceptIfAnyOfToHeader Write StringArray[] The ExceptIfAnyOfToHeader parameter specifies an exception that looks for recipients in the To field of messages. ExceptIfAnyOfToHeaderMemberOf Write StringArray[] The ExceptIfAnyOfToHeaderMemberOf parameter specifies an exception that looks for group members in the To field of messages. ExceptIfAttachmentContainsWords Write StringArray[] The ExceptIfAttachmentContainsWords parameter specifies an exception that looks for words in message attachments. ExceptIfAttachmentExtensionMatchesWords Write StringArray[] The ExceptIfAttachmentExtensionMatchesWords parameter specifies an exception that looks for words in the file name extensions of message attachments. ExceptIfAttachmentHasExecutableContent Write Boolean The ExceptIfAttachmentHasExecutableContent parameter specifies an exception that looks for executable content in message attachments. ExceptIfAttachmentIsPasswordProtected Write Boolean The ExceptIfAttachmentIsPasswordProtected parameter specifies an exception that looks for password protected files in messages (because the contents of the file can't be inspected). ExceptIfAttachmentIsUnsupported Write Boolean The ExceptIfAttachmentIsUnsupported parameter specifies an exception that looks for unsupported file types in messages. ExceptIfAttachmentMatchesPatterns Write StringArray[] The ExceptIfAttachmentMatchesPatterns parameter specifies an exception that looks for text patterns in the content of message attachments by using regular expressions. ExceptIfAttachmentNameMatchesPatterns Write StringArray[] The ExceptIfAttachmentNameMatchesPatterns parameter specifies an exception that looks for text patterns in the file name of message attachments by using regular expressions. ExceptIfAttachmentPropertyContainsWords Write StringArray[] The ExceptIfAttachmentPropertyContainsWords parameter specifies an exception that looks for words in the properties of attached Office documents. ExceptIfAttachmentProcessingLimitExceeded Write Boolean The ExceptIfAttachmentProcessingLimitExceeded parameter specifies an exception that looks for messages where attachment scanning didn't complete. ExceptIfAttachmentSizeOver Write String The ExceptIfAttachmentSizeOver parameter specifies an exception that looks for messages where any attachment is greater than the specified size. ExceptIfBetweenMemberOf1 Write StringArray[] The ExceptIfBetweenMemberOf1 parameter specifies an exception that looks for messages that are sent between group members. ExceptIfBetweenMemberOf2 Write StringArray[] The ExceptIfBetweenMemberOf2 parameter specifies an exception that looks for messages that are sent between group members. ExceptIfContentCharacterSetContainsWords Write StringArray[] The ExceptIfContentCharacterSetContainsWords parameter specifies an exception that looks for character set names in messages. ExceptIfFrom Write StringArray[] The ExceptIfFrom parameter specifies an exception that looks for messages from specific senders. ExceptIfFromAddressContainsWords Write StringArray[] The ExceptIfFromAddressContainsWords parameter specifies an exception that looks for words in the sender's email address. ExceptIfFromAddressMatchesPatterns Write StringArray[] The ExceptIfFromAddressMatchesPatterns parameter specifies an exception that looks for text patterns in the sender's email address by using regular expressions. ExceptIfFromMemberOf Write StringArray[] The ExceptIfFromMemberOf parameter specifies an exception that looks for messages sent by group members. ExceptIfFromScope Write String The ExceptIfFromScope parameter specifies an exception that looks for the location of message senders. InOrganization, NotInOrganization ExceptIfHasClassification Write String The ExceptIfHasClassification parameter specifies an exception that looks for messages with the specified message classification. ExceptIfHasNoClassification Write Boolean The ExceptIfHasNoClassification parameter specifies an exception that looks for messages with or without any message classifications. ExceptIfHasSenderOverride Write Boolean The ExceptIfHasSenderOverride parameter specifies an exception that looks for messages where the sender chose to override a DLP policy. ExceptIfHeaderContainsMessageHeader Write String The ExceptIfHeaderContainsMessageHeader parameter specifies the name of header field in the message header when searching for the words specified by the ExceptIfHeaderContainsWords parameter. ExceptIfHeaderContainsWords Write StringArray[] The ExceptIfHeaderContainsWords parameter specifies an exception that looks for words in a header field. ExceptIfHeaderMatchesMessageHeader Write String The ExceptIfHeaderMatchesMessageHeader parameter specifies the name of header field in the message header when searching for the text patterns specified by the ExceptIfHeaderMatchesPatterns parameter. ExceptIfHeaderMatchesPatterns Write StringArray[] The ExceptIfHeaderMatchesPatterns parameter specifies an exception that looks for text patterns in a header field by using regular expressions. ExceptIfManagerAddresses Write StringArray[] The ExceptIfManagerAddresses parameter specifies the users (managers) for the ExceptIfManagerForEvaluatedUser parameter. ExceptIfManagerForEvaluatedUser Write String The ExceptIfManagerForEvaluatedUser parameter specifies an exception that looks for users in the Manager attribute of senders or recipients. ExceptIfMessageTypeMatches Write String The ExceptIfMessageTypeMatches parameter specifies an exception that looks for messages of the specified type. OOF, AutoForward, Encrypted, Calendaring, PermissionControlled, Voicemail, Signed, ApprovalRequest, ReadReceipt ExceptIfMessageContainsAllDataClassifications Write StringArray[] DEPRECATED ExceptIfMessageContainsDataClassifications Write StringArray[] The ExceptIfMessageContainsDataClassifications parameter specifies an exception that looks for sensitive information types in the body of messages, and in any attachments. ExceptIfMessageSizeOver Write String The ExceptIfMessageSizeOver parameter specifies an exception that looks for messages larger than the specified size. ExceptIfRecipientADAttributeContainsWords Write StringArray[] The ExceptIfRecipientADAttributeContainsWords parameter specifies an exception that looks for words in the Active Directory attributes of recipients. ExceptIfRecipientADAttributeMatchesPatterns Write StringArray[] The ExceptIfRecipientADAttributeMatchesPatterns parameter specifies an exception that looks for text patterns in the Active Directory attributes of recipients by using regular expressions. ExceptIfRecipientAddressContainsWords Write StringArray[] The ExceptIfRecipientAddressContainsWords parameter specifies an exception that looks for words in recipient email addresses. ExceptIfRecipientAddressMatchesPatterns Write StringArray[] The ExceptIfRecipientAddressMatchesPatterns parameter specifies an exception that looks for text patterns in recipient email addresses by using regular expressions. ExceptIfRecipientDomainIs Write StringArray[] The ExceptIfRecipientDomainIs parameter specifies an exception that looks for recipients with email address in the specified domains. ExceptIfRecipientInSenderList Write StringArray[] This parameter is reserved for internal Microsoft use. ExceptIfSCLOver Write String The ExceptIfSCLOver parameter specifies an exception that looks for the SCL value of messages ExceptIfSenderADAttributeContainsWords Write StringArray[] The ExceptIfSenderADAttributeContainsWords parameter specifies an exception that looks for words in Active Directory attributes of message senders. ExceptIfSenderADAttributeMatchesPatterns Write StringArray[] The ExceptIfSenderADAttributeMatchesPatterns parameter specifies an exception that looks for text patterns in Active Directory attributes of message senders by using regular expressions. ExceptIfSenderDomainIs Write StringArray[] The ExceptIfSenderDomainIs parameter specifies an exception that looks for senders with email address in the specified domains. ExceptIfSenderInRecipientList Write StringArray[] This parameter is reserved for internal Microsoft use. ExceptIfSenderIpRanges Write StringArray[] The ExceptIfSenderIpRanges parameter specifies an exception that looks for senders whose IP addresses matches the specified value, or fall within the specified ranges. ExceptIfSenderManagementRelationship Write String The ExceptIfSenderManagementRelationship parameter specifies an exception that looks for the relationship between the sender and recipients in messages. Manager, DirectReport ExceptIfSentTo Write StringArray[] The ExceptIfSentTo parameter specifies an exception that looks for recipients in messages. You can use any value that uniquely identifies the recipient. ExceptIfSentToMemberOf Write StringArray[] The ExceptIfSentToMemberOf parameter specifies an exception that looks for messages sent to members of groups. You can use any value that uniquely identifies the group. ExceptIfSentToScope Write String The ExceptIfSentToScope parameter specifies an exception that looks for the location of a recipient. InOrganization, NotInOrganization, ExternalPartner, ExternalNonPartner ExceptIfSubjectContainsWords Write StringArray[] The ExceptIfSubjectContainsWords parameter specifies an exception that looks for words in the Subject field of messages. ExceptIfSubjectMatchesPatterns Write StringArray[] The ExceptIfSubjectMatchesPatterns parameter specifies an exception that looks for text patterns in the Subject field of messages by using regular expressions. ExceptIfSubjectOrBodyContainsWords Write StringArray[] The ExceptIfSubjectOrBodyContainsWords parameter specifies an exception that looks for words in the Subject field or body of messages. ExceptIfSubjectOrBodyMatchesPatterns Write StringArray[] The ExceptIfSubjectOrBodyMatchesPatterns parameter specifies an exception that looks for text patterns in the Subject field or body of messages. ExceptIfWithImportance Write String The ExceptIfWithImportance parameter specifies an exception that looks for messages with the specified importance level. Low, Normal, High ExpiryDate Write String The ExpiryDate parameter specifies when this rule will stop processing messages. The rule won't take any action on messages after the specified date/time. From Write StringArray[] The From parameter specifies a condition that looks for messages from specific senders. You can use any value that uniquely identifies the sender. FromAddressContainsWords Write StringArray[] The FromAddressContainsWords parameter specifies a condition that looks for words in the sender's email address. FromAddressMatchesPatterns Write StringArray[] The FromAddressMatchesPatterns parameter specifies a condition that looks for text patterns in the sender's email address by using regular expressions. FromMemberOf Write StringArray[] The FromMemberOf parameter specifies a condition that looks for messages sent by group members. FromScope Write String The FromScope parameter specifies a condition that looks for the location of message senders. InOrganization, NotInOrganization GenerateIncidentReport Write String The GenerateIncidentReport parameter specifies where to send the incident report that's defined by the IncidentReportContent parameter. GenerateNotification Write String The GenerateNotification parameter specifies an action that sends a notification message to recipients. HasClassification Write String The HasClassification parameter specifies a condition that looks for messages with the specified message classification. HasNoClassification Write Boolean The HasNoClassification parameter specifies a condition that looks for messages with or without any message classifications. HasSenderOverride Write Boolean The HasSenderOverride parameter specifies a condition that looks for messages where the sender chose to override a DLP policy. HeaderContainsMessageHeader Write String The HeaderContainsMessageHeader parameter specifies the name of header field in the message header when searching for the words specified by the HeaderContainsWords parameter. HeaderContainsWords Write StringArray[] The HeaderContainsWords parameter specifies a condition that looks for words in a header field. HeaderMatchesMessageHeader Write String The HeaderMatchesMessageHeader parameter specifies the name of header field in the message header when searching for the text patterns specified by the HeaderMatchesPatterns parameter. HeaderMatchesPatterns Write StringArray[] The HeaderMatchesPatterns parameter specifies a condition that looks for text patterns in a header field by using regular expressions. IncidentReportContent Write StringArray[] The IncidentReportContent parameter specifies the message properties that are included in the incident report that's generated when a message violates a DLP policy. IncidentReportOriginalMail Write String DEPRECATED ManagerAddresses Write StringArray[] The ManagerAddresses parameter specifies the users (managers) for the ExceptIfManagerForEvaluatedUser parameter. ManagerForEvaluatedUser Write String The ManagerForEvaluatedUser parameter specifies a condition that looks for users in the Manager attribute of senders or recipients. Recipient, Sender MessageContainsAllDataClassifications Write StringArray[] DEPRECATED MessageContainsDataClassifications Write StringArray[] The MessageContainsDataClassifications parameter specifies a condition that looks for sensitive information types in the body of messages, and in any attachments. MessageSizeOver Write String The MessageSizeOver parameter specifies a condition that looks for messages larger than the specified size. The size includes the message and all attachments. MessageTypeMatches Write String The MessageTypeMatches parameter specifies a condition that looks for messages of the specified type. OOF, AutoForward, Encrypted, Calendaring, PermissionControlled, Voicemail, Signed, ApprovalRequest, ReadReceipt Mode Write String The Mode parameter specifies how the rule operates. Audit, AuditAndNotify, Enforce ModerateMessageByManager Write Boolean The ModerateMessageByManager parameter specifies an action that forwards messages for approval to the user that's specified in the sender's Manager attribute. ModerateMessageByUser Write StringArray[] The ModerateMessageByUser parameter specifies an action that forwards messages for approval to the specified users. NotifySender Write String The NotifySender parameter specifies an action that notifies the sender when messages violate DLP policies. NotifyOnly, RejectMessage, RejectUnlessFalsePositiveOverride, RejectUnlessSilentOverride, RejectUnlessExplicitOverride PrependSubject Write String The PrependSubject parameter specifies an action that adds text to add to the beginning of the Subject field of messages. Priority Write String The Priority parameter specifies a priority value for the rule that determines the order of rule processing. Quarantine Write Boolean The Quarantine parameter specifies an action that quarantines messages. RecipientADAttributeContainsWords Write StringArray[] The RecipientADAttributeContainsWords parameter specifies a condition that looks for words in the Active Directory attributes of recipients. RecipientADAttributeMatchesPatterns Write StringArray[] The RecipientADAttributeMatchesPatterns parameter specifies a condition that looks for text patterns in the Active Directory attributes of recipients by using regular expressions. RecipientAddressContainsWords Write StringArray[] The RecipientAddressContainsWords parameter specifies a condition that looks for words in recipient email addresses. RecipientAddressMatchesPatterns Write StringArray[] The RecipientAddressMatchesPatterns parameter specifies a condition that looks for text patterns in recipient email addresses by using regular expressions. RecipientAddressType Write String The RecipientAddressType parameter specifies how conditions and exceptions check recipient email addresses. Original, Resolved RecipientDomainIs Write StringArray[] The RecipientDomainIs parameter specifies a condition that looks for recipients with email address in the specified domains. RecipientInSenderList Write StringArray[] This parameter is reserved for internal Microsoft use. RedirectMessageTo Write StringArray[] The RedirectMessageTo parameter specifies a rule action that redirects messages to the specified recipients. RejectMessageEnhancedStatusCode Write String The RejectMessageEnhancedStatusCode parameter specifies the enhanced status code that's used when the rule rejects messages. RejectMessageReasonText Write String The RejectMessageReasonText parameter specifies the explanation text that's used when the rule rejects messages. RemoveHeader Write String The RemoveHeader parameter specifies an action that removes a header field from the message header. RemoveOME Write Boolean The RemoveOME parameter specifies an action that removes the previous version of Office 365 Message Encryption from messages and their attachments. RemoveOMEv2 Write Boolean The RemoveOMEv2 parameter specifies an action that removes Office 365 Message Encryption from messages and their attachments. RemoveRMSAttachmentEncryption Write Boolean This parameter specifies an action or part of an action for the rule. RouteMessageOutboundConnector Write String The RouteMessageOutboundConnector parameter specifies an action that routes messages through the specified Outbound connector in Office 365. RouteMessageOutboundRequireTls Write Boolean The RouteMessageOutboundRequireTls parameter specifies an action that uses Transport Layer Security (TLS) encryption to deliver messages outside your organization. RuleErrorAction Write String The RuleErrorAction parameter specifies what to do if rule processing can't be completed on messages. Ignore, Defer RuleSubType Write String The RuleSubType parameter specifies the rule type. Dlp, None SCLOver Write String The SCLOver parameter specifies a condition that looks for the SCL value of messages SenderADAttributeContainsWords Write StringArray[] The SenderADAttributeContainsWords parameter specifies a condition that looks for words in Active Directory attributes of message senders. SenderADAttributeMatchesPatterns Write StringArray[] The SenderADAttributeMatchesPatterns parameter specifies a condition that looks for text patterns in Active Directory attributes of message senders by using regular expressions. SenderAddressLocation Write String The SenderAddressLocation parameter specifies where to look for sender addresses in conditions and exceptions that examine sender email addresses. Header, Envelope, HeaderOrEnvelope SenderDomainIs Write StringArray[] The SenderDomainIs parameter specifies a condition that looks for senders with email address in the specified domains. SenderInRecipientList Write String This parameter is reserved for internal Microsoft use. SenderIpRanges Write StringArray[] The SenderIpRanges parameter specifies a condition that looks for senders whose IP addresses matches the specified value, or fall within the specified ranges. SenderManagementRelationship Write String The SenderManagementRelationship parameter specifies a condition that looks for the relationship between the sender and recipients in messages. Manager, DirectReport SentTo Write StringArray[] The SentTo parameter specifies a condition that looks for recipients in messages. SentToMemberOf Write StringArray[] The SentToMemberOf parameter specifies a condition that looks for messages sent to members of distribution groups, dynamic distribution groups, or mail-enabled security groups. SentToScope Write String The SentToScope parameter specifies a condition that looks for the location of recipients. InOrganization, NotInOrganization, ExternalPartner, ExternalNonPartner SetAuditSeverity Write String The SetAuditSeverity parameter specifies an action that sets the severity level of the incident report and the corresponding entry that's written to the message tracking log when messages violate DLP policies. DoNotAudit, Low, Medium, High SetHeaderName Write String The SetHeaderName parameter specifies an action that adds or modifies a header field in the message header. SetHeaderValue Write String The SetHeaderValue parameter specifies an action that adds or modifies a header field in the message header. SetSCL Write String The SetSCL parameter specifies an action that adds or modifies the SCL value of messages. StopRuleProcessing Write Boolean The StopRuleProcessing parameter specifies an action that stops processing more rules. SubjectContainsWords Write StringArray[] The SubjectContainsWords parameter specifies a condition that looks for words in the Subject field of messages. SubjectMatchesPatterns Write StringArray[] The SubjectMatchesPatterns parameter specifies a condition that looks for text patterns in the Subject field of messages by using regular expressions. SubjectOrBodyContainsWords Write StringArray[] The SubjectOrBodyContainsWords parameter specifies a condition that looks for words in the Subject field or body of messages. SubjectOrBodyMatchesPatterns Write StringArray[] The SubjectOrBodyMatchesPatterns parameter specifies a condition that looks for text patterns in the Subject field or body of messages. WithImportance Write String The WithImportance parameter specifies a condition that looks for messages with the specified importance level. Low, Normal, High Ensure Write String Specify if the Transport Rule should exist or not. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. ManagedIdentity Write Boolean Managed ID being used for authentication. EXOTransportRule \u00b6 Description \u00b6 This resource configures Transport Rules in Exchange Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { EXOTransportRule 'ConfigureTransportRule' { Name = \"Ethical Wall - Sales and Brokerage Departments\" BetweenMemberOf1 = \"Sales Department\" BetweenMemberOf2 = \"Brokerage Department\" ExceptIfFrom = \"Tony Smith\" , \"Pilar Ackerman\" ExceptIfSubjectContainsWords = \"Press Release\" , \"Corporate Communication\" RejectMessageReasonText = \"Messages sent between the Sales and Brokerage departments are strictly prohibited.\" Enabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"EXOTransportRule"},{"location":"resources/intune/IntuneASRRulesPolicyWindows10/","text":"IntuneASRRulesPolicyWindows10 \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Identity Key String Identity of the endpoint protection attack surface protection rules policy for Windows 10. DisplayName Write String Display name of the endpoint protection attack surface protection rules policy for Windows 10. Description Write String Description of the endpoint protection attack surface protection rules policy for Windows 10. Assignments Write InstanceArray[] Assignments of the Intune Policy. ProcessCreationType Write String This rule blocks processes created through PsExec and WMI from running. userDefined, block, auditMode, warn, disable AdvancedRansomewareProtectionType Write String This rule provides an extra layer of protection against ransomware. notConfigured, userDefined, enable, auditMode BlockPersistenceThroughWmiType Write String This rule prevents malware from abusing WMI to attain persistence on a device. userDefined, block, auditMode, disable ScriptObfuscatedMacroCodeType Write String This rule detects suspicious properties within an obfuscated script. userDefined, block, auditMode, warn, disable OfficeMacroCodeAllowWin32ImportsType Write String This rule prevents VBA macros from calling Win32 APIs. userDefined, block, auditMode, warn, disable OfficeAppsLaunchChildProcessType Write String This rule blocks Office apps from creating child processes. Office apps include Word, Excel, PowerPoint, OneNote, and Access. userDefined, block, auditMode, warn, disable GuardMyFoldersType Write String This rule enable Controlled folder access which protects your data by checking apps against a list of known, trusted apps. userDefined, enable, auditMode, blockDiskModification, auditDiskModification UntrustedUSBProcessType Write String With this rule, admins can prevent unsigned or untrusted executable files from running from USB removable drives, including SD cards. notConfigured, userDefined, block, auditMode, warn, disable AttackSurfaceReductionExcludedPaths Write StringArray[] Exclude files and paths from attack surface reduction rules UntrustedExecutableType Write String This rule blocks executable files that don't meet a prevalence, age, or trusted list criteria, such as .exe, .dll, or .scr, from launching. userDefined, block, auditMode, warn, disable OfficeCommunicationAppsLaunchChildProcess Write String This rule prevents Outlook from creating child processes, while still allowing legitimate Outlook functions. notConfigured, userDefined, block, auditMode, warn, disable EmailContentExecutionType Write String This rule blocks the following file types from launching from email opened within the Microsoft Outlook application, or Outlook.com and other popular webmail providers. notConfigured, block, auditMode, userDefined, disable ScriptDownloadedPayloadExecutionType Write String This rule prevents scripts from launching potentially malicious downloaded content. userDefined, block, auditMode, warn, disable AdditionalGuardedFolders Write StringArray[] List of additional folders that need to be protected AdobeReaderLaunchChildProcess Write String This rule prevents attacks by blocking Adobe Reader from creating processes. notConfigured, userDefined, enable, auditMode, warn OfficeAppsExecutableContentCreationOrLaunchType Write String This rule prevents Office apps, including Word, Excel, and PowerPoint, from creating potentially malicious executable content, by blocking malicious code from being written to disk. userDefined, block, auditMode, warn, disable PreventCredentialStealingType Write String This rule helps prevent credential stealing by locking down Local Security Authority Subsystem Service (LSASS). notConfigured, userDefined, enable, auditMode, warn OfficeAppsOtherProcessInjectionType Write String This rule blocks code injection attempts from Office apps into other processes. userDefined, block, auditMode, warn, disable GuardedFoldersAllowedAppPaths Write StringArray[] List of apps that have access to protected folders. Ensure Write String Present ensures the site collection exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneASRRulesPolicyWindows10 \u00b6 Description \u00b6 This resource configures a Intune Endpoint Protection Attack Surface Reduction rules policy for a Windows 10 Device. This resource returns ASR rules created using deviceConfiguration Graph settings.","title":"IntuneASRRulesPolicyWindows10"},{"location":"resources/intune/IntuneAntivirusPolicyWindows10SettingCatalog/","text":"IntuneAntivirusPolicyWindows10SettingCatalog \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Identity Key String Identity of the endpoint protection policy for Windows 10. DisplayName Write String Display name of the endpoint protection policy for Windows 10. Description Write String Description of the endpoint protection policy for Windows 10. tamperprotection Write String Allows or disallows scanning of archives. (0: enable feature. 1: disable feature) 0, 1 disableaccountprotectionui Write String Use this policy setting to specify if to display the Account protection area in Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 disableappbrowserui Write String Use this policy setting if you want to disable the display of the app and browser protection area in Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 disablecleartpmbutton Write String Disable the Clear TPM button in Windows Security. (0: disable feature. 1: enable feature) 0, 1 disabledevicesecurityui Write String Use this policy setting if you want to disable the display of the Device security area in the Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 disablefamilyui Write String Use this policy setting if you want to disable the display of the family options area in Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 disablehealthui Write String Use this policy setting if you want to disable the display of the device performance and health area in Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 disablenetworkui Write String Use this policy setting if you want to disable the display of the firewall and network protection area in Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 disableenhancednotifications Write String Use this policy setting if you want to disable the display of Windows Defender Security Center notifications. (0: disable feature. 1: enable feature) 0, 1 disabletpmfirmwareupdatewarning Write String Hide the recommendation to update TPM Firmware when a vulnerable firmware is detected. (0: disable feature. 1: enable feature) 0, 1 disablevirusui Write String Use this policy setting if you want to disable the display of the virus and threat protection area in Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 hideransomwaredatarecovery Write String Use this policy setting to hide the Ransomware data recovery area in Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 hidewindowssecuritynotificationareacontrol Write String This policy setting hides the Windows Security notification area control. (0: disable feature. 1: enable feature) 0, 1 enablecustomizedtoasts Write String Enable this policy to display your company name and contact options in the notifications. (0: disable feature. 1: enable feature) 0, 1 enableinappcustomization Write String Enable this policy to have your company name and contact options displayed in a contact card fly out in Windows Defender Security Center. (0: disable feature. 1: enable feature) 0, 1 companyname Write String The company name that is displayed to the users. CompanyName is required for both EnableCustomizedToasts and EnableInAppCustomization. email Write String The email address that is displayed to users. The default mail application is used to initiate email actions. phone Write String The phone number or Skype ID that is displayed to users. Skype is used to initiate the call. url Write String The help portal URL that is displayed to users. The default browser is used to initiate this action. allowarchivescanning Write String Allows or disallows scanning of archives. (0: disable feature. 1: enable feature) 0, 1 allowbehaviormonitoring Write String Allows or disallows Windows Defender Behavior Monitoring functionality. (0: disable feature. 1: enable feature) 0, 1 allowcloudprotection Write String To best protect your PC, Windows Defender will send information to Microsoft about any problems it finds. Microsoft will analyze that information, learn more about problems affecting you and other customers, and offer improved solutions. (0: disable feature. 1: enable feature) 0, 1 allowemailscanning Write String Allows or disallows scanning of email. (0: disable feature. 1: enable feature) 0, 1 allowfullscanonmappednetworkdrives Write String Allows or disallows a full scan of mapped network drives. (0: disable feature. 1: enable feature) 0, 1 allowfullscanremovabledrivescanning Write String Allows or disallows a full scan of removable drives. During a quick scan, removable drives may still be scanned. (0: disable feature. 1: enable feature) 0, 1 allowintrusionpreventionsystem Write String https://github.com/MicrosoftDocs/memdocs/issues/2250 (0: disable feature. 1: enable feature) 0, 1 allowioavprotection Write String Allows or disallows Windows Defender IOAVP Protection functionality. (0: disable feature. 1: enable feature) 0, 1 allowrealtimemonitoring Write String Allows or disallows Windows Defender real-time Monitoring functionality. (0: disable feature. 1: enable feature) 0, 1 allowscanningnetworkfiles Write String Allows or disallows a scanning of network files. (0: disable feature. 1: enable feature) 0, 1 allowscriptscanning Write String Allows or disallows Windows Defender Script Scanning functionality. (0: disable feature. 1: enable feature) 0, 1 allowuseruiaccess Write String Allows or disallows user access to the Windows Defender UI. I disallowed, all Windows Defender notifications will also be suppressed. (0: Prevents users from accessing UI. 1: Lets users access UI) 0, 1 avgcpuloadfactor Write SInt32 Represents the average CPU load factor for the Windows Defender scan (in percent). checkforsignaturesbeforerunningscan Write String This policy setting allows you to manage whether a check for new virus and spyware definitions will occur before running a scan. (0: disable feature. 1: enable feature) 0, 1 cloudblocklevel Write String This policy setting determines how aggressive Microsoft Defender Antivirus will be in blocking and scanning suspicious files. Value type is integer.(0: Default windows defender blocking level, 2: High blocking level, 4:High+ blocking level, 6:Zero tolerance blocking level) 0, 2, 4, 6 cloudextendedtimeout Write SInt32 This feature allows Microsoft Defender Antivirus to block a suspicious file for up to 60 seconds, and scan it in the cloud to make sure it's safe. Value type is integer, range is 0 - 50. daystoretaincleanedmalware Write SInt32 Time period (in days) that quarantine items will be stored on the system. disablecatchupfullscan Write String This policy setting allows you to configure catch-up scans for scheduled full scans. (1: disabled, 0: enabled) 0, 1 disablecatchupquickscan Write String This policy setting allows you to configure catch-up scans for scheduled quick scans. (1: disabled, 0: enabled) 0, 1 enablelowcpupriority Write String This policy setting allows you to enable or disable low CPU priority for scheduled scans. (0: disable feature. 1: enable feature) 0, 1 enablenetworkprotection Write String This policy allows you to turn on network protection (block/audit) or off. (0: disabled, 1: block mode, 2: audit mode) 0, 1, 2 excludedextensions Write StringArray[] Allows an administrator to specify a list of file type extensions to ignore during a scan. excludedpaths Write StringArray[] Allows an administrator to specify a list of directory paths to ignore during a scan. excludedprocesses Write StringArray[] Allows an administrator to specify a list of files opened by processes to ignore during a scan. puaprotection Write String Specifies the level of detection for potentially unwanted applications (PUAs). (0: disabled, 1: block mode, 2: audit mode) 0, 1, 2 realtimescandirection Write String Controls which sets of files should be monitored. (0: Monitor all files (bi-directional), 1: Monitor incoming files, 2: Monitor outgoing files) 0, 1, 2 scanparameter Write String Selects whether to perform a quick scan or full scan. (1: Quick scan, 2: Full scan) 1, 2 schedulequickscantime Write SInt32 Selects the time of day that the Windows Defender quick scan should run. schedulescanday Write String Selects the day that the Windows Defender scan should run. (0: Every day, 1: Sunday, 2: Monday, 3: Tuesday, 4: Wednesday, 5: Thursday, 6: Friday, 7: Saturday, 8: No scheduled scan) 0, 1, 2, 3, 4, 5, 6, 7, 8 schedulescantime Write SInt32 Selects the time of day that the Windows Defender scan should run. signatureupdatefallbackorder Write StringArray[] This policy setting allows you to define the order in which different definition update sources should be contacted. signatureupdatefilesharessources Write StringArray[] This policy setting allows you to configure UNC file share sources for downloading definition updates. signatureupdateinterval Write SInt32 Specifies the interval (in hours) that will be used to check for signatures, so instead of using the ScheduleDay and ScheduleTime the check for new signatures will be set according to the interval. submitsamplesconsent Write String Checks for the user consent level in Windows Defender to send data. (0: Always prompt, 1: Send safe samples automatically, 2: Never send, 3: Send all samples automatically) 0, 1, 2, 3 disablelocaladminmerge Write String This policy setting controls whether or not complex list settings configured by a local administrator are merged with managed settings. (0: enable local admin merge, 1: disable local admin merge 0, 1 allowonaccessprotection Write String Allows or disallows Windows Defender On Access Protection functionality. (0: disable feature. 1: enable feature) 0, 1 lowseveritythreats Write String Allows an administrator to specify low severity threats corresponding action ID to take. clean, quarantine, remove, allow, userdefined, block moderateseveritythreats Write String Allows an administrator to specify moderate severity threats corresponding action ID to take. clean, quarantine, remove, allow, userdefined, block severethreats Write String Allows an administrator to specify high severity threats corresponding action ID to take. clean, quarantine, remove, allow, userdefined, block highseveritythreats Write String Allows an administrator to specify severe threats corresponding action ID to take. clean, quarantine, remove, allow, userdefined, block templateId Write String Template Id of the policy. d948ff9b-99cb-4ee0-8012-1fbc09685377_1, 45fea5e9-280d-4da1-9792-fb5736da0ca9_1, 804339ad-1553-4478-a742-138fb5807418_1 Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneAntivirusPolicyWindows10SettingCatalog \u00b6 Description \u00b6 This resource configures an Intune Endpoint Protection Antivirus policy for a Windows 10 Device. This policy setting enables the management of Microsoft Defender Antivirus for Windows 10 using the settings catalog.","title":"IntuneAntivirusPolicyWindows10SettingCatalog"},{"location":"resources/intune/IntuneAppConfigurationPolicy/","text":"IntuneAppConfigurationPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) name Write String Name of the custom setting. value Write String Value of the custom setting. DisplayName Key String Display name of the app configuration policy. Description Write String Description of the app configuration policy. Assignments Write InstanceArray[] Assignments of the Intune Policy. CustomSettings Write InstanceArray[] Custom settings for the app cnfiguration policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneAppConfigurationPolicy \u00b6 Description \u00b6 This resource configures the Intune App configuration policies. Examples \u00b6 Example 1 \u00b6 This example creates a new App Configuration Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneAppConfigurationPolicy 'AddAppConfigPolicy' { DisplayName = 'ContosoNew' Description = 'New Contoso Policy' Ensure = 'Present' Credential = $credsGlobalAdmin } } } Example 2 \u00b6 This example removes an existing App Configuration Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneAppConfigurationPolicy 'RemoveAppConfigPolicy' { DisplayName = 'ContosoOld' Description = 'Old Contoso Policy' Ensure = 'Absent' Credential = $credsGlobalAdmin } } }","title":"IntuneAppConfigurationPolicy"},{"location":"resources/intune/IntuneAppProtectionPolicyAndroid/","text":"IntuneAppProtectionPolicyAndroid \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Display name of the Android App Protection Policy. Description Write String Description of the Android App Protection Policy. PeriodOfflineBeforeAccessCheck Write String The period after which access is checked when the device is not connected to the internet. PeriodOnlineBeforeAccessCheck Write String The period after which access is checked when the device is connected to the internet. AllowedInboundDataTransferSources Write String Sources from which data is allowed to be transferred. Possible values are: allApps, managedApps, none. allApps, managedApps, none AllowedOutboundDataTransferDestinations Write String Destinations to which data is allowed to be transferred. Possible values are: allApps, managedApps, none. allApps, managedApps, none OrganizationalCredentialsRequired Write Boolean Indicates whether organizational credentials are required for app use. AllowedOutboundClipboardSharingLevel Write String The level to which the clipboard may be shared between apps on the managed device. Possible values are: allApps, managedAppsWithPasteIn, managedApps, blocked. allApps, managedAppsWithPasteIn, managedApps, blocked DataBackupBlocked Write Boolean Indicates whether the backup of a managed app's data is blocked. DeviceComplianceRequired Write Boolean Indicates whether device compliance is required. ManagedBrowserToOpenLinksRequired Write Boolean Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for Android) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android). SaveAsBlocked Write Boolean Indicates whether users may use the Save As menu item to save a copy of protected files. PeriodOfflineBeforeWipeIsEnforced Write String The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped. PinRequired Write Boolean Indicates whether an app-level pin is required. DisableAppPinIfDevicePinIsSet Write Boolean Indicates whether use of the app pin is required if the device pin is set. MaximumPinRetries Write UInt32 Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped. SimplePinBlocked Write Boolean Block simple PIN and require complex PIN to be set. MinimumPinLength Write UInt32 Minimum pin length required for an app-level pin if PinRequired is set to True. PinCharacterSet Write String Character set which may be used for an app-level pin if PinRequired is set to True. Possible values are: numeric, alphanumericAndSymbol. numeric, alphanumericAndSymbol AllowedDataStorageLocations Write StringArray[] Data storage locations where a user may store managed data. ContactSyncBlocked Write Boolean Indicates whether contacts can be synced to the user's device. PeriodBeforePinReset Write String TimePeriod before the all-level pin must be reset if PinRequired is set to True. PrintBlocked Write Boolean Indicates whether printing is allowed from managed apps. FingerprintBlocked Write Boolean Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True. Apps Write StringArray[] List of IDs representing the Android apps controlled by this protection policy. Assignments Write StringArray[] List of IDs of the groups assigned to this Android Protection Policy. ExcludedGroups Write StringArray[] List of IDs of the groups that are excluded from this Android Protection Policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String ID of the Azure Active Directory application to authenticate with. TenantId Write String ID of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. ManagedBrowser Write String Indicates in which managed browser(s) that internet links should be opened. Used in conjunction with CustomBrowserPackageId, CustomBrowserDisplayName and ManagedBrowserToOpenLinksRequired. Possible values are: notConfigured, microsoftEdge. notConfigured, microsoftEdge MinimumRequiredAppVersion Write String Versions less than the specified version will block the managed app from accessing company data. MinimumRequiredOSVersion Write String Versions less than the specified version will block the managed app from accessing company data. MinimumRequiredPatchVersion Write String Versions less than the specified version will block the managed app from accessing company data. MinimumWarningAppVersion Write String Versions less than the specified version will result in warning message on the managed app MinimumWarningOSVersion Write String Versions less than the specified version will result in warning message on the managed app MinimumWarningPatchVersion Write String Versions less than the specified version will result in warning message on the managed app AppGroupType Write String The apps controlled by this protection policy, overrides any values in Apps unless this value is 'selectedPublicApps'. allApps, allMicrosoftApps, allCoreMicrosoftApps, selectedPublicApps IsAssigned Write Boolean Indicates if the policy is deployed to any inclusion groups or not. Inherited from targetedManagedAppProtection. ScreenCaptureBlocked Write Boolean Indicates whether or not to Block the user from taking Screenshots. EncryptAppData Write Boolean Indicates whether or not the 'Encrypt org data' value is enabled. True = require DisableAppEncryptionIfDeviceEncryptionIsEnabled Write Boolean Indicates whether or not the 'Encrypt org data on enrolled devices' value is enabled. False = require. Only functions if EncryptAppData is set to True CustomBrowserDisplayName Write String The application name for browser associated with the 'Unmanaged Browser ID'. This name will be displayed to users if the specified browser is not installed. CustomBrowserPackageId Write String The application ID for a single browser. Web content (http/s) from policy managed applications will open in the specified browser. Id Write String Id of the Intune policy. To avoid creation of duplicate policies DisplayName will be searched for if the ID is not found IntuneAppProtectionPolicyAndroid \u00b6 Description \u00b6 This resource configures an Intune app protection policy for an Android Device. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneAppProtectionPolicyAndroid 'ConfigureAppProtectionPolicyAndroid' { DisplayName = \"My DSC Android App Protection Policy\" AllowedDataStorageLocations = @( \"sharePoint\" ) AllowedInboundDataTransferSources = \"managedApps\" AllowedOutboundClipboardSharingLevel = \"managedAppsWithPasteIn\" AllowedOutboundDataTransferDestinations = \"managedApps\" Apps = @( \"com.cisco.jabberimintune.ios\" , \"com.pervasent.boardpapers.ios\" , \"com.sharefile.mobile.intune.ios\" ) Assignments = @( \"6ee86c9f-2b3c-471d-ad38-ff4673ed723e\" ) ContactSyncBlocked = $false DataBackupBlocked = $false Description = \"\" DeviceComplianceRequired = $True DisableAppPinIfDevicePinIsSet = $True ExcludedGroups = @( \"3eacc231-d77b-4efb-bb5f-310f68bd6198\" ) FingerprintBlocked = $False ManagedBrowserToOpenLinksRequired = $True MaximumPinRetries = 5 MinimumPinLength = 4 OrganizationalCredentialsRequired = $false PinRequired = $True PrintBlocked = $True SaveAsBlocked = $True SimplePinBlocked = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"IntuneAppProtectionPolicyAndroid"},{"location":"resources/intune/IntuneAppProtectionPolicyiOS/","text":"IntuneAppProtectionPolicyiOS \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Write String Identity of the iOS App Protection Policy. DisplayName Write String Display name of the iOS App Protection Policy. Description Write String Description of the iOS App Protection Policy. PeriodOfflineBeforeAccessCheck Write String The period after which access is checked when the device is not connected to the internet. PeriodOnlineBeforeAccessCheck Write String The period after which access is checked when the device is connected to the internet. AllowedInboundDataTransferSources Write String Sources from which data is allowed to be transferred. Possible values are: allApps, managedApps, none. allApps, managedApps, none AllowedOutboundDataTransferDestinations Write String Destinations to which data is allowed to be transferred. Possible values are: allApps, managedApps, none. allApps, managedApps, none OrganizationalCredentialsRequired Write Boolean Indicates whether organizational credentials are required for app use. AllowedOutboundClipboardSharingLevel Write String The level to which the clipboard may be shared between apps on the managed device. Possible values are: allApps, managedAppsWithPasteIn, managedApps, blocked. allApps, managedAppsWithPasteIn, managedApps, blocked DataBackupBlocked Write Boolean Indicates whether the backup of a managed app's data is blocked. DeviceComplianceRequired Write Boolean Indicates whether device compliance is required. ManagedBrowserToOpenLinksRequired Write Boolean Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android). SaveAsBlocked Write Boolean Indicates whether users may use the Save As menu item to save a copy of protected files. PeriodOfflineBeforeWipeIsEnforced Write String The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped. PinRequired Write Boolean Indicates whether an app-level pin is required. DisableAppPinIfDevicePinIsSet Write Boolean Indicates whether use of the app pin is required if the device pin is set. MaximumPinRetries Write UInt32 Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped. SimplePinBlocked Write Boolean Block simple PIN and require complex PIN to be set. MinimumPinLength Write UInt32 Minimum pin length required for an app-level pin if PinRequired is set to True. PinCharacterSet Write String Character set which may be used for an app-level pin if PinRequired is set to True. Possible values are: numeric, alphanumericAndSymbol. numeric, alphanumericAndSymbol AllowedDataStorageLocations Write StringArray[] Data storage locations where a user may store managed data. ContactSyncBlocked Write Boolean Indicates whether contacts can be synced to the user's device. PeriodBeforePinReset Write String TimePeriod before the all-level pin must be reset if PinRequired is set to True. PrintBlocked Write Boolean Indicates whether printing is allowed from managed apps. FingerprintBlocked Write Boolean Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True. FaceIdBlocked Write Boolean Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. ManagedBrowser Write String Indicates in which managed browser(s) that internet links should be opened. When this property is configured, ManagedBrowserToOpenLinksRequired should be true. Possible values are: notConfigured, microsoftEdge. notConfigured, microsoftEdge MinimumRequiredAppVersion Write String Versions less than the specified version will block the managed app from accessing company data. MinimumWarningAppVersion Write String Versions less than the specified version will result in warning message on the managed app from accessing company data. MinimumRequiredOSVersion Write String Versions less than the specified version will block the managed app from accessing company data. MinimumWarningOSVersion Write String Versions less than the specified version will result in warning message on the managed app from accessing company data. MinimumRequiredSdkVersion Write String Versions less than the specified version will block the managed app from accessing company data. MinimumWipeOsVersion Write String Versions less than or equal to the specified version will wipe the managed app and the associated company data. MinimumWipeAppVersion Write String Versions less than or equal to the specified version will wipe the managed app and the associated company data. AppActionIfDeviceComplianceRequired Write String Defines a managed app behavior, either block or wipe, when the device is either rooted or jailbroken, if DeviceComplianceRequired is set to true. block, wipe, warn AppActionIfMaximumPinRetriesExceeded Write String Defines a managed app behavior, either block or wipe, based on maximum number of incorrect pin retry attempts. block, wipe, warn PinRequiredInsteadOfBiometricTimeout Write String Timeout in minutes for an app pin instead of non biometrics passcode . AllowedOutboundClipboardSharingExceptionLength Write UInt32 Specify the number of characters that may be cut or copied from Org data and accounts to any application. This setting overrides the AllowedOutboundClipboardSharingLevel restriction. Default value of '0' means no exception is allowed. NotificationRestriction Write String Specify app notification restriction. allow, blockOrganizationalData, block TargetedAppManagementLevels Write String The intended app management levels for this policy. unspecified, unmanaged, mdm, androidEnterprise AppDataEncryptionType Write String Require app data to be encrypted. useDeviceSettings, afterDeviceRestart, whenDeviceLockedExceptOpenFiles, whenDeviceLocked ExemptedAppProtocols Write StringArray[] Apps in this list will be exempt from the policy and will be able to receive data from managed apps. MinimumWipeSdkVersion Write String Versions less than the specified version will block the managed app from accessing company data. AllowedIosDeviceModels Write StringArray[] Semicolon seperated list of device models allowed, as a string, for the managed app to work. AppActionIfIosDeviceModelNotAllowed Write String Defines a managed app behavior, either block or wipe, if the specified device model is not allowed. block, wipe, warn FilterOpenInToOnlyManagedApps Write Boolean Defines if open-in operation is supported from the managed app to the filesharing locations selected. This setting only applies when AllowedOutboundDataTransferDestinations is set to ManagedApps and DisableProtectionOfManagedOutboundOpenInData is set to False. DisableProtectionOfManagedOutboundOpenInData Write Boolean Disable protection of data transferred to other apps through IOS OpenIn option. This setting is only allowed to be True when AllowedOutboundDataTransferDestinations is set to ManagedApps. ProtectInboundDataFromUnknownSources Write Boolean Protect incoming data from unknown source. This setting is only allowed to be True when AllowedInboundDataTransferSources is set to AllApps. CustomBrowserProtocol Write String A custom browser protocol to open weblink on iOS. Apps Write StringArray[] List of IDs representing the iOS apps controlled by this protection policy. Assignments Write StringArray[] List of IDs of the groups assigned to this iOS Protection Policy. ExcludedGroups Write StringArray[] List of IDs of the groups that are excluded from this iOS Protection Policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin. ApplicationId Write String ID of the Azure Active Directory application to authenticate with. TenantId Write String ID of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneAppProtectionPolicyiOS \u00b6 Description \u00b6 This resource configures an Intune app protection policy for an iOS Device. Examples \u00b6 Example 1 \u00b6 This example creates a new App ProtectionPolicy for iOS. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneAppProtectionPolicyiOS 'MyCustomiOSPolicy' { DisplayName = \"My DSC iOS App Protection Policy\" AllowedDataStorageLocations = @( \"sharePoint\" ) AllowedInboundDataTransferSources = \"managedApps\" AllowedOutboundClipboardSharingLevel = \"managedAppsWithPasteIn\" AllowedOutboundDataTransferDestinations = \"managedApps\" AppDataEncryptionType = \"whenDeviceLocked\" Apps = @( \"com.cisco.jabberimintune.ios\" , \"com.pervasent.boardpapers.ios\" , \"com.sharefile.mobile.intune.ios\" ) Assignments = @( \"6ee86c9f-2b3c-471d-ad38-ff4673ed723e\" ) ContactSyncBlocked = $False DataBackupBlocked = $False Description = \"\" DeviceComplianceRequired = $True ExcludedGroups = @( \"3eacc231-d77b-4efb-bb5f-310f68bd6198\" ) FingerprintBlocked = $False ManagedBrowserToOpenLinksRequired = $True MaximumPinRetries = 5 MinimumPinLength = 4 OrganizationalCredentialsRequired = $False PeriodOfflineBeforeAccessCheck = \"PT12H\" PeriodOfflineBeforeWipeIsEnforced = \"P90D\" PeriodOnlineBeforeAccessCheck = \"PT30M\" PinCharacterSet = \"alphanumericAndSymbol\" PinRequired = $True PrintBlocked = $False SaveAsBlocked = $True SimplePinBlocked = $False Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"IntuneAppProtectionPolicyiOS"},{"location":"resources/intune/IntuneApplicationControlPolicyWindows10/","text":"IntuneApplicationControlPolicyWindows10 \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) DisplayName Key String Display name of the endpoint protection application control policy for Windows 10. Description Write String Description of the endpoint protection application control policy for Windows 10. Assignments Write InstanceArray[] Assignments of the Intune Policy. AppLockerApplicationControl Write String App locker application control mode notConfigured, enforceComponentsAndStoreApps, auditComponentsAndStoreApps, enforceComponentsStoreAppsAndSmartlocker, auditComponentsStoreAppsAndSmartlocker SmartScreenBlockOverrideForFiles Write Boolean Indicates whether or not SmartScreen will not present an option for the user to disregard the warning and run the app. SmartScreenEnableInshell Write Boolean Enforce the use of SmartScreen for all users. Ensure Write String Present ensures the site collection exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneApplicationControlPolicyWindows10 \u00b6 Description \u00b6 This resource configures a Intune Endpoint Protection Application Control policy for an Windows 10 Device. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneApplicationControlPolicyWindows10 'ConfigureApplicationControlPolicyWindows10' { DisplayName = \"Windows 10 Desktops\" Description = \"All windows 10 Desktops\" AppLockerApplicationControl = \"enforceComponentsAndStoreApps\" SmartScreenBlockOverrideForFiles = $True SmartScreenEnableInShell = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"IntuneApplicationControlPolicyWindows10"},{"location":"resources/intune/IntuneAttackSurfaceReductionRulesPolicyWindows10ConfigManager/","text":"IntuneAttackSurfaceReductionRulesPolicyWindows10ConfigManager \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Identity Key String Identity of the endpoint protection attack surface protection rules policy for Windows 10. DisplayName Write String Display name of the endpoint protection attack surface protection rules policy for Windows 10. Description Write String Description of the endpoint protection attack surface protection rules policy for Windows 10. Assignments Write InstanceArray[] Assignments of the endpoint protection attack surface protection rules policy for Windows 10. AttackSurfaceReductionOnlyExclusions Write StringArray[] Exclude files and paths from attack surface reduction rules BlockAbuseOfExploitedVulnerableSignedDrivers Write String This rule prevents an application from writing a vulnerable signed driver to disk. off, block, audit, warn BlockAdobeReaderFromCreatingChildProcesses Write String This rule prevents attacks by blocking Adobe Reader from creating processes. off, block, audit, warn BlockAllOfficeApplicationsFromCreatingChildProcesses Write String This rule blocks Office apps from creating child processes. Office apps include Word, Excel, PowerPoint, OneNote, and Access. off, block, audit, warn BlockCredentialStealingFromWindowsLocalSecurityAuthoritySubsystem Write String This rule helps prevent credential stealing by locking down Local Security Authority Subsystem Service (LSASS). off, block, audit, warn BlockExecutableContentFromEmailClientAndWebmail Write String This rule blocks the following file types from launching from email opened within the Microsoft Outlook application, or Outlook.com and other popular webmail providers. off, block, audit, warn BlockExecutableFilesRunningUnlessTheyMeetPrevalenceAgeTrustedListCriterion Write String This rule blocks executable files that don't meet a prevalence, age, or trusted list criteria, such as .exe, .dll, or .scr, from launching. off, block, audit, warn BlockExecutionOfPotentiallyObfuscatedScripts Write String This rule detects suspicious properties within an obfuscated script. off, block, audit, warn BlockJavaScriptOrVBScriptFromLaunchingDownloadedExecutableContent Write String This rule prevents scripts from launching potentially malicious downloaded content. off, block, audit, warn BlockOfficeApplicationsFromCreatingExecutableContent Write String This rule prevents Office apps, including Word, Excel, and PowerPoint, from creating potentially malicious executable content, by blocking malicious code from being written to disk. off, block, audit, warn BlockOfficeApplicationsFromInjectingCodeIntoOtherProcesses Write String This rule blocks code injection attempts from Office apps into other processes. off, block, audit, warn BlockOfficeCommunicationAppFromCreatingChildProcesses Write String This rule prevents Outlook from creating child processes, while still allowing legitimate Outlook functions. off, block, audit, warn BlockPersistenceThroughWMIEventSubscription Write String This rule prevents malware from abusing WMI to attain persistence on a device. off, block, audit, warn BlockProcessCreationsFromPSExecAndWMICommands Write String This rule blocks processes created through PsExec and WMI from running. off, block, audit, warn BlockUntrustedUnsignedProcessesThatRunFromUSB Write String With this rule, admins can prevent unsigned or untrusted executable files from running from USB removable drives, including SD cards. off, block, audit, warn BlockWin32APICallsFromOfficeMacros Write String This rule prevents VBA macros from calling Win32 APIs. off, block, audit, warn UseAdvancedProtectionAgainstRansomware Write String This rule provides an extra layer of protection against ransomware. off, block, audit, warn ControlledFolderAccessProtectedFolders Write StringArray[] List of additional folders that need to be protected ControlledFolderAccessAllowedApplications Write StringArray[] List of apps that have access to protected folders. EnableControlledFolderAccess Write String This rule enable Controlled folder access which protects your data by checking apps against a list of known, trusted apps.values 0:disable, 1:enable, 2:audit 0, 1, 2 Ensure Write String Present ensures the policy exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneAttackSurfaceReductionRulesPolicyWindows10ConfigManager \u00b6 Description \u00b6 This resource configures an Intune Endpoint Protection Attack Surface Reduction Rules policy for a Windows 10 Device for Configuration Manager. This policy setting enables setting the state (Block/Audit/Off/Warn) for each attack surface reduction (ASR) rule. Each ASR rule listed can be set to one of the following states (Block/Audit/Off/Warn). The ASR rule ID and state should be added under the Options for this setting. Each entry must be listed as a name value pair. The name defines a valid ASR rule ID, while the value contains the status ID indicating the status of the rule. For more information about ASR rule ID and status ID, see Enable Attack Surface Reduction: https://docs.microsoft.com/en-us/windows/threat-protection/windows-defender-exploit-guard/enable-attack-surface-reduction.","title":"IntuneAttackSurfaceReductionRulesPolicyWindows10ConfigManager"},{"location":"resources/intune/IntuneDeviceAndAppManagementAssignmentFilter/","text":"IntuneDeviceAndAppManagementAssignmentFilter \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String DisplayName of the Assignment Filter. Identity Write String Key of the Assignment Filter. Description Write String Description of the Assignment Filter. Platform Write String Platform type of the devices on which the Assignment Filter will be applicable. android, androidForWork, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, unknown Rule Write String Rule definition of the Assignment Filter. Ensure Write String Present ensures the policy exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceAndAppManagementAssignmentFilter \u00b6 Description \u00b6 This resource represents the properties of the Intune Assignment Filter. For more information: https://docs.microsoft.com/en-us/graph/api/resources/intune-policyset-deviceandappmanagementassignmentfilter?view=graph-rest-beta Examples \u00b6 Example 1 \u00b6 This example creates a new Device and App Management Assignment Filter. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $intuneAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceAndAppManagementAssignmentFilter 'AssignmentFilter' { Credential = $intuneAdmin ; Description = \"This is a new Filter\" ; DisplayName = \"Test Device Filter\" ; Ensure = \"Present\" ; Platform = \"windows10AndLater\" ; Rule = \"(device.manufacturer -ne `\" Microsoft Corporation `\" )\" ; } } }","title":"IntuneDeviceAndAppManagementAssignmentFilter"},{"location":"resources/intune/IntuneDeviceCategory/","text":"IntuneDeviceCategory \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Display name of the device category. Description Write String Description of the device category. Ensure Write String Present ensures the category exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceCategory \u00b6 Description \u00b6 This resource configures the Intune device categories. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Category. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCategory 'ConfigureDeviceCategory' { DisplayName = \"Contoso\" Description = \"Contoso Category\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceCategory"},{"location":"resources/intune/IntuneDeviceCompliancePolicyAndroid/","text":"IntuneDeviceCompliancePolicyAndroid \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) DisplayName Key String Display name of the Android device compliance policy. Description Write String Description of the Android device compliance policy. Assignments Write InstanceArray[] Assignments of the Intune Policy. PasswordRequired Write Boolean PasswordRequired of the Android device compliance policy. PasswordMinimumLength Write UInt32 PasswordMinimumLength of the Android device compliance policy. PasswordRequiredType Write String PasswordRequiredType of the Android device compliance policy. deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any RequiredPasswordComplexity Write String RequiredPasswordComplexity of the Android device compliance policy. none, low, medium, high PasswordMinutesOfInactivityBeforeLock Write UInt32 PasswordMinutesOfInactivityBeforeLock of the Android device compliance policy. PasswordExpirationDays Write UInt32 PasswordExpirationDays of the Android device compliance policy. PasswordPreviousPasswordBlockCount Write UInt32 PasswordPreviousPasswordBlockCount of the Android device compliance policy. PasswordSignInFailureCountBeforeFactoryReset Write UInt32 PasswordSignInFailureCountBeforeFactoryReset of the Android device compliance policy. SecurityPreventInstallAppsFromUnknownSources Write Boolean SecurityPreventInstallAppsFromUnknownSources of the Android device compliance policy. SecurityDisableUsbDebugging Write Boolean SecurityDisableUsbDebugging of the Android device compliance policy. SecurityRequireVerifyApps Write Boolean SecurityRequireVerifyApps of the Android device compliance policy. DeviceThreatProtectionEnabled Write Boolean DeviceThreatProtectionEnabled of the Android device compliance policy. DeviceThreatProtectionRequiredSecurityLevel Write String DeviceThreatProtectionRequiredSecurityLevel of the Android device compliance policy. unavailable, secured, low, medium, high, notSet AdvancedThreatProtectionRequiredSecurityLevel Write String AdvancedThreatProtectionRequiredSecurityLevel of the Android device compliance policy. unavailable, secured, low, medium, high, notSet SecurityBlockJailbrokenDevices Write Boolean SecurityBlockJailbrokenDevices of the Android device compliance policy. SecurityBlockDeviceAdministratorManagedDevices Write Boolean SecurityBlockDeviceAdministratorManagedDevices of the Android device compliance policy. OsMinimumVersion Write String OsMinimumVersion of the Android device compliance policy. OsMaximumVersion Write String OsMaximumVersion of the Android device compliance policy. MinAndroidSecurityPatchLevel Write String MinAndroidSecurityPatchLevel of the Android device compliance policy. StorageRequireEncryption Write Boolean StorageRequireEncryption of the Android device compliance policy. SecurityRequireSafetyNetAttestationBasicIntegrity Write Boolean SecurityRequireSafetyNetAttestationBasicIntegrity of the Android device compliance policy. SecurityRequireSafetyNetAttestationCertifiedDevice Write Boolean SecurityRequireSafetyNetAttestationCertifiedDevice of the Android device compliance policy. SecurityRequireGooglePlayServices Write Boolean SecurityRequireGooglePlayServices of the Android device compliance policy. SecurityRequireUpToDateSecurityProviders Write Boolean SecurityRequireUpToDateSecurityProviders of the Android device compliance policy. SecurityRequireCompanyPortalAppIntegrity Write Boolean SecurityRequireCompanyPortalAppIntegrity of the Android device compliance policy. ConditionStatementId Write String ConditionStatementId of the Android device compliance policy. RestrictedApps Write String RestrictedApps of the Android device compliance policy. RoleScopeTagIds Write String RoleScopeTagIds of the Android device compliance policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneAndroidDeviceCompliancePolicy \u00b6 Description \u00b6 This resource configures the settings of Android device compliance policies in your cloud-based organization. Parameters \u00b6 Microsoft Defender for Endpoint \u00b6 Require the device to be at or under the machine risk score Select the maximum allowed machine risk score for devices evaluated by Microsoft Defender for Endpoint. Devices that exceed this score get marked as noncompliant. Not configured ( default ) Clear Low Medium High Device Health \u00b6 Devices managed with device administrator Device administrator capabilities are superseded by Android Enterprise. Not configured ( default ) Block - Blocking device administrator will guide users to move to Android Enterprise Personally-Owned and Corporate-Owned Work Profile management to regain access. Rooted devices \u00b6 Prevent rooted devices from having corporate access. (This compliance check is supported for Android 4.0 and above.) Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Block - Mark rooted (jailbroken) devices as not compliant. Require the device to be at or under the Device Threat Level Use this setting to take the risk assessment from a connected Mobile Threat Defense service as a condition for compliance. Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Secured - This option is the most secure, as the device can't have any threats. If the device is detected with any level of threats, it's evaluated as noncompliant. Low - The device is evaluated as compliant if only low-level threats are present. Anything higher puts the device in a noncompliant status. Medium - The device is evaluated as compliant if existing threats on the device are low or medium level. If the device is detected to have high-level threats, it's determined to be noncompliant. High - This option is the least secure, and allows all threat levels. It may be useful if you're using this solution only for reporting purposes. Google Play Protect \u00b6 Google Play Services is configured Google Play services allows security updates, and is a base-level dependency for many security features on certified-Google devices. Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Require that the Google Play services app is installed and enabled. Up-to-date security provider Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Require that an up-to-date security provider can protect a device from known vulnerabilities. Threat scan on apps Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Require that the Android Verify Apps feature is enabled. SafetyNet device attestation Enter the level of SafetyNet attestation that must be met. Your options: Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Check basic integrity Check basic integrity & certified devices Device Properties \u00b6 Operating System Version Minimum OS version When a device doesn't meet the minimum OS version requirement, it's reported as noncompliant. A link with information about how to upgrade is shown. The end user can choose to upgrade their device, and then get access to company resources. By default, no version is configured. * Maximum OS version When a device is using an OS version later than the version specified in the rule, access to company resources is blocked. The user is asked to contact their IT admin. Until a rule is changed to allow the OS version, this device can't access company resources. By default, no version is configured. System Security \u00b6 Encryption Encryption of data storage on a device Supported on Android 4.0 and later, or KNOX 4.0 and later. Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Encrypt data storage on your devices. Devices are encrypted when you choose the Require a password to unlock mobile devices setting. Device Security Block apps from unknown sources Supported on Android 4.0 to Android 7.x. Not supported by Android 8.0 and later Not configured ( default ) - this setting isn't evaluated for compliance or non-compliance. Block - Block devices with Security > Unknown Sources enabled sources ( supported on Android 4.0 through Android 7.x. Not supported on Android 8.0 and later. ). To side-load apps, unknown sources must be allowed. If you're not side-loading Android apps, then set this feature to Block to enable this compliance policy. Company portal app runtime integrity Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Choose Require to confirm the Company Portal app meets all the following requirements: Has the default runtime environment installed Is properly signed Isn't in debug-mode Block USB debugging on device (Supported on Android 4.2 or later) Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Block - Prevent devices from using the USB debugging feature. Minimum security patch level (Supported on Android 6.0 or later) Select the oldest security patch level a device can have. Devices that aren't at least at this patch level are noncompliant. The date must be entered in the YYYY-MM-DD format. By default, no date is configured. Restricted apps Enter the App name and App bundle ID for apps that should be restricted, and then select Add. A device with at least one restricted app installed is marked as non-compliant. Password \u00b6 The available settings for passwords vary by the version of Android on the device. All Android devices \u00b6 The following settings are supported on Android 4.0 or later, and Knox 4.0 and later. Maximum minutes of inactivity before password is required This setting specifies the length of time without user input after which the mobile device screen is locked. Options range from 1 Minute to 8 Hours. The recommended value is 15 Minutes. Not configured ( default ) Android 10 and later \u00b6 The following settings are supported on Android 10 or later, but not on Knox. Password complexity This setting is supported on Android 10 or later, but not on Samsung Knox. On devices that run Android 9 and earlier or Samsung Knox, settings for the password length and type override this setting for complexity. Specify the required password complexity. * None ( default ) - No password required. * Low - The password satisfies one of the following conditions: * Pattern * Numeric PIN has a repeating (4444) or ordered (1234, 4321, 2468) sequence. * Medium - The password satisfies one of the following conditions: * Numeric PIN doesn\u00e2\u20ac\u2122t have a repeating (4444) or ordered (1234, 4321, 2468) sequence, and has minimum length of 4. * Alphabetic, with a minimum length of 4. * Alphanumeric, with a minimum length of 4. * High - The password satisfies one of the following conditions: * Numeric PIN doesn\u00e2\u20ac\u2122t have a repeating (4444) or ordered (1234, 4321, 2468) sequence, and has minimum length of 8. * Alphabetic, with a minimum length of 6. * Alphanumeric, with a minimum length of 6. Android 9 and earlier or Samsung Knox \u00b6 The following settings are supported on Android 9.0 and earlier, and any version of Samsung Knox. Require a password to unlock mobile devices This setting specifies whether to require users to enter a password before access is granted to information on their mobile devices. Recommended value: Require Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Users must enter a password before they can access their device. When set to Require, the following setting can be configured: Required password type Choose if a password should include only numeric characters, or a mix of numerals and other characters. Device Default - To evaluate password compliance, be sure to select a password strength other than Device default. Low security biometric At least numeric Numeric complex - Repeated or consecutive numerals, such as 1111 or 1234, aren't allowed. At least alphabetic At least alphanumeric At least alphanumeric with symbols Based on the configuration of this setting, one or more of the following options are available: * Minimum password length Enter the minimum number of digits or characters that the user's password must have. * Maximum minutes of inactivity before password is required Enter the idle time before the user must reenter their password. When you choose Not configured ( default ), this setting isn't evaluated for compliance or non-compliance. * Number of days until password expires Select the number of days before the password expires and the user must create a new password. * Number of previous passwords to prevent reuse Enter the number of recent passwords that can't be reused. Use this setting to restrict the user from creating previously used passwords. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Compliance Policy for Android devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyAndroid 'AddDeviceCompliancePolicy' { Description = \"\" DeviceThreatProtectionEnabled = $False DeviceThreatProtectionRequiredSecurityLevel = \"unavailable\" DisplayName = \"Test Policy\" osMinimumVersion = \"7\" PasswordExpirationDays = 90 PasswordMinimumLength = 6 PasswordMinutesOfInactivityBeforeLock = 5 PasswordPreviousPasswordBlockCount = 10 PasswordRequired = $True PasswordRequiredType = \"deviceDefault\" SecurityBlockJailbrokenDevices = $False SecurityDisableUsbDebugging = $False SecurityPreventInstallAppsFromUnknownSources = $False SecurityRequireCompanyPortalAppIntegrity = $False SecurityRequireGooglePlayServices = $False SecurityRequireSafetyNetAttestationBasicIntegrity = $False SecurityRequireSafetyNetAttestationCertifiedDevice = $False SecurityRequireUpToDateSecurityProviders = $False SecurityRequireVerifyApps = $False StorageRequireEncryption = $True Ensure = \"Present\" Credential = $credsglobaladmin } } } Example 2 \u00b6 This example removes an existing Device Compliance Policy for iOs devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyAndroid 'RemoveDeviceCompliancePolicyAndroid' { DisplayName = \"Test Android Device Compliance Policy\" Ensure = \"Absent\" Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceCompliancePolicyAndroid"},{"location":"resources/intune/IntuneDeviceCompliancePolicyAndroidDeviceOwner/","text":"IntuneDeviceCompliancePolicyAndroidDeviceOwner \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) DisplayName Key String Display name of the Android Device Owner device compliance policy. Description Write String Description of the Android Device Owner device compliance policy. Assignments Write InstanceArray[] Assignments of the Intune Policy. DeviceThreatProtectionEnabled Write Boolean DeviceThreatProtectionEnabled of the Android Device Owner device compliance policy. DeviceThreatProtectionRequiredSecurityLevel Write String DeviceThreatProtectionRequiredSecurityLevel of the Android Device Owner device compliance policy. AdvancedThreatProtectionRequiredSecurityLevel Write String AdvancedThreatProtectionRequiredSecurityLevel of the Android Device Owner device compliance policy. SecurityRequireSafetyNetAttestationBasicIntegrity Write Boolean SecurityRequireSafetyNetAttestationBasicIntegrity of the Android Device Owner device compliance policy. SecurityRequireSafetyNetAttestationCertifiedDevice Write Boolean SecurityRequireSafetyNetAttestationCertifiedDevice of the Android Device Owner device compliance policy. osMinimumVersion Write String osMinimumVersion of the Android Device Owner device compliance policy. osMaximumVersion Write String osMaximumVersion of the Android Device Owner device compliance policy. passwordRequired Write Boolean PasswordRequired of the Android Device Owner device compliance policy. passwordMinimumLength Write UInt32 PasswordMinimumLength of the Android Device Owner device compliance policy. PasswordRequiredType Write String PasswordRequiredType of the Android Device Owner device compliance policy. deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any PasswordMinutesOfInactivityBeforeLock Write UInt32 PasswordMinutesOfInactivityBeforeLock of the Android Device Owner device compliance policy. PasswordExpirationDays Write UInt32 PasswordExpirationDays of the Android Device Owner device compliance policy. PasswordPreviousPasswordCountToBlock Write UInt32 PasswordPreviousPasswordCountToBlock of the Android Device Owner device compliance policy. StorageRequireEncryption Write Boolean StorageRequireEncryption of the Android Device Owner device compliance policy. SecurityRequireIntuneAppIntegrity Write Boolean SecurityRequireIntuneAppIntegrity of the Android Device Owner device compliance policy. RoleScopeTagIds Write StringArray[] List of Scope Tags for this Entity instance. Inherited from deviceConfiguration Ensure Write String Present ensures the policy exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceCompliancePolicyAndroidDeviceOwner \u00b6 Description \u00b6 This resource configures the settings of Android Work Profile device compliance policies in your cloud-based organization. Parameters \u00b6 Microsoft Defender for Endpoint - for Personally-Owned Work Profile \u00b6 Require the device to be at or under the machine risk score Select the maximum allowed machine risk score for devices evaluated by Microsoft Defender for Endpoint. Devices which exceed this score get marked as noncompliant. Not configured ( default ) Clear Low Medium High Device Health - for Personally-Owned Work Profile \u00b6 Rooted devices Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Block - Mark rooted (jailbroken) devices as not compliant. Require the device to be at or under the Device Threat Level Select the maximum allowed device threat level evaluated by your mobile threat defense service. Devices that exceed this threat level are marked noncompliant. To use this setting, choose the allowed threat level: Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Secured - This option is the most secure, and means that the device can't have any threats. If the device is detected with any level of threats, it's evaluated as noncompliant. Low - The device is evaluated as compliant if only low-level threats are present. Anything higher puts the device in a noncompliant status. Medium - The device is evaluated as compliant if the threats that are present on the device are low or medium level. If the device is detected to have high-level threats, it's determined to be noncompliant. High - This option is the least secure, as it allows all threat levels. It may be useful if you're using this solution only for reporting purposes. Google Play Protect - for Personally-Owned Work Profile \u00b6 Google Play Services is configured Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Require that the Google Play services app is installed and enabled. Google Play services allows security updates, and is a base-level dependency for many security features on certified-Google devices. Up-to-date security provider Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Require that an up-to-date security provider can protect a device from known vulnerabilities. SafetyNet device attestation Enter the level of SafetyNet attestation that must be met. Your options: Not configured ( default ) - Setting isn't evaluated for compliance or non-compliance. Check basic integrity Check basic integrity & certified devices Note: * On Android Enterprise devices, Threat scan on apps is a device configuration policy. Using a configuration policy, administrators can enable the setting on a device. See Android Enterprise device restriction settings. Device Properties - for Personally-Owned Work Profile \u00b6 Operating System Version - for Personally-Owned Work Profile Minimum OS version When a device doesn't meet the minimum OS version requirement, it's reported as non-compliant. A link with information on how to upgrade is shown. The end user can upgrade their device, and then access organization resources. By default, no version is configured. Maximum OS version When a device is using an OS version later than the version in the rule, access to organization resources is blocked. The user is asked to contact their IT administrator. Until a rule is changed to allow the OS version, this device can't access organization resources. By default, no version is configured. System security - for Personally-Owned Work Profile \u00b6 Require a password to unlock mobile devices Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Users must enter a password before they can access their device. This setting applies at the device level. If you only need to require a password at the Personally-Owned Work Profile level, then use a configuration policy. See Android Enterprise device configuration settings. Required password type Choose if a password should include only numeric characters, or a mix of numerals and other characters. Your options: Device Default Low security biometric At least numeric ( default ): Enter the minimum password length a user must enter, between 4 and 16 characters. Numeric complex: Enter the minimum password length a user must enter, between 4 and 16 characters. At least alphabetic: Enter the minimum password length a user must enter, between 4 and 16 characters. At least alphanumeric: Enter the minimum password length a user must enter, between 4 and 16 characters. At least alphanumeric with symbols: Enter the minimum password length a user must enter, between 4 and 16 characters. Depending on the password type you select, the following settings are available: * Maximum minutes of inactivity before password is required Enter the idle time before the user must reenter their password. Options include the default of Not configured, and from 1 Minute to 8 hours. * Number of days until password expires Enter the number of days, between 1-365, until the device password must be changed. For example, to change the password after 60 days, enter 60. When the password expires, users are prompted to create a new password. * Minimum password length Enter the minimum length the password must have, between 4 and 16 characters. * Number of previous passwords to prevent reuse Enter the number of recent passwords that can't be reused. Use this setting to restrict the user from creating previously used passwords. Encryption - for Personally-Owned Work Profile \u00b6 Encryption of data storage on device Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Encrypt data storage on your devices. You don't have to configure this setting because Android Enterprise devices enforce encryption. Device Security - for Personally-Owned Work Profile \u00b6 Block apps from unknown sources Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Block - Block devices with Security > Unknown Sources enabled sources (supported on Android 4.0 through Android 7.x. Not supported by Android 8.0 and later). To side-load apps, unknown sources must be allowed. If you're not side-loading Android apps, then set this feature to Block to enable this compliance policy. Company portal app runtime integrity Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Choose Require to confirm the Company Portal app meets all the following requirements: Has the default runtime environment installed Is properly signed Isn't in debug-mode Is installed from a known source Block USB debugging on device Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Block - Prevent devices from using the USB debugging feature. You don't have to configure this setting because USB debugging is already disabled on Android Enterprise devices. Minimum security patch level Select the oldest security patch level a device can have. Devices that aren't at least at this patch level are noncompliant. The date must be entered in the YYYY-MM-DD format. By default, no date is configured. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Compliance Policy for Android Device Owner devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyAndroidDeviceOwner 'ConfigureAndroidDeviceCompliancePolicyOwner' { Description = \"\" DisplayName = \"DeviceOwner\" DeviceThreatProtectionEnabled = $False DeviceThreatProtectionRequiredSecurityLevel = \"unavailable\" AdvancedThreatProtectionRequiredSecurityLevel = \"unavailable\" SecurityRequireSafetyNetAttestationBasicIntegrity = $False SecurityRequireSafetyNetAttestationCertifiedDevice = $False OsMinimumVersion = \"10\" OsMaximumVersion = \"11\" MinAndroidSecurityPatchLevel = \"2020-03-01\" PasswordRequired = $True PasswordMinimumLength = 6 PasswordMinimumLetterCharacters = 1 PasswordMinimumLowerCaseCharacters = 1 PasswordMinimumNonLetterCharacters = 2 PasswordMinimumNumericCharacters = 1 PasswordMinimumSymbolCharacters = 1 PasswordMinimumUpperCaseCharacters = 1 PasswordRequiredType = \"numericComplex\" PasswordMinutesOfInactivityBeforeLock = 5 PasswordExpirationDays = 90 PasswordPreviousPasswordCountToBlock = 13 StorageRequireEncryption = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } } Example 2 \u00b6 This example removes an existing Device Compliance Policy for Android Device Owner devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyAndroidDeviceOwner 'RemoveAndroidDeviceCompliancePolicyOwner' { DisplayName = \"DeviceOwner\" Ensure = \"Absent\" Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceCompliancePolicyAndroidDeviceOwner"},{"location":"resources/intune/IntuneDeviceCompliancePolicyAndroidWorkProfile/","text":"IntuneDeviceCompliancePolicyAndroidWorkProfile \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) DisplayName Key String Display name of the AndroidWorkProfile device compliance policy. Description Write String Description of the AndroidWorkProfile device compliance policy. Assignments Write InstanceArray[] Assignments of the Intune Policy. PasswordRequired Write Boolean PasswordRequired of the AndroidWorkProfile device compliance policy. PasswordMinimumLength Write UInt32 PasswordMinimumLength of the AndroidWorkProfile device compliance policy. PasswordRequiredType Write String PasswordRequiredType of the AndroidWorkProfile device compliance policy. deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any PasswordMinutesOfInactivityBeforeLock Write UInt32 PasswordMinutesOfInactivityBeforeLock of the AndroidWorkProfile device compliance policy. PasswordExpirationDays Write UInt32 PasswordExpirationDays of the AndroidWorkProfile device compliance policy. PasswordPreviousPasswordBlockCount Write UInt32 PasswordPreviousPasswordBlockCount of the AndroidWorkProfile device compliance policy. PasswordSignInFailureCountBeforeFactoryReset Write UInt32 PasswordSignInFailureCountBeforeFactoryReset of the AndroidWorkProfile device compliance policy. SecurityPreventInstallAppsFromUnknownSources Write Boolean SecurityPreventInstallAppsFromUnknownSources of the AndroidWorkProfile device compliance policy. SecurityDisableUsbDebugging Write Boolean SecurityDisableUsbDebugging of the AndroidWorkProfile device compliance policy. SecurityRequireVerifyApps Write Boolean SecurityRequireVerifyApps of the AndroidWorkProfile device compliance policy. DeviceThreatProtectionEnabled Write Boolean DeviceThreatProtectionEnabled of the AndroidWorkProfile device compliance policy. DeviceThreatProtectionRequiredSecurityLevel Write String DeviceThreatProtectionRequiredSecurityLevel of the AndroidWorkProfile device compliance policy. unavailable, secured, low, medium, high, notSet AdvancedThreatProtectionRequiredSecurityLevel Write String AdvancedThreatProtectionRequiredSecurityLevel of the AndroidWorkProfile device compliance policy. unavailable, secured, low, medium, high, notSet SecurityBlockJailbrokenDevices Write Boolean SecurityBlockJailbrokenDevices of the AndroidWorkProfile device compliance policy. OsMinimumVersion Write String OsMinimumVersion of the AndroidWorkProfile device compliance policy. OsMaximumVersion Write String OsMaximumVersion of the AndroidWorkProfile device compliance policy. MinAndroidSecurityPatchLevel Write String MinAndroidSecurityPatchLevel of the AndroidWorkProfile device compliance policy. StorageRequireEncryption Write Boolean StorageRequireEncryption of the AndroidWorkProfile device compliance policy. SecurityRequireSafetyNetAttestationBasicIntegrity Write Boolean SecurityRequireSafetyNetAttestationBasicIntegrity of the AndroidWorkProfile device compliance policy. SecurityRequireSafetyNetAttestationCertifiedDevice Write Boolean SecurityRequireSafetyNetAttestationCertifiedDevice of the AndroidWorkProfile device compliance policy. SecurityRequireGooglePlayServices Write Boolean SecurityRequireGooglePlayServices of the AndroidWorkProfile device compliance policy. SecurityRequireUpToDateSecurityProviders Write Boolean SecurityRequireUpToDateSecurityProviders of the AndroidWorkProfile device compliance policy. SecurityRequireCompanyPortalAppIntegrity Write Boolean SecurityRequireCompanyPortalAppIntegrity of the AndroidWorkProfile device compliance policy. SecurityRequiredAndroidSafetyNetEvaluationType Write String Require a specific SafetyNet evaluation type for compliance. basic, hardwareBacked RoleScopeTagIds Write String RoleScopeTagIds of the AndroidWorkProfile device compliance policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceCompliancePolicyAndroidWorkProfile \u00b6 Description \u00b6 This resource configures the settings of Android Work Profile device compliance policies in your cloud-based organization. Parameters \u00b6 Microsoft Defender for Endpoint - for Personally-Owned Work Profile \u00b6 Require the device to be at or under the machine risk score Select the maximum allowed machine risk score for devices evaluated by Microsoft Defender for Endpoint. Devices which exceed this score get marked as noncompliant. Not configured ( default ) Clear Low Medium High Device Health - for Personally-Owned Work Profile \u00b6 Rooted devices Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Block - Mark rooted (jailbroken) devices as not compliant. Require the device to be at or under the Device Threat Level Select the maximum allowed device threat level evaluated by your mobile threat defense service. Devices that exceed this threat level are marked noncompliant. To use this setting, choose the allowed threat level: Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Secured - This option is the most secure, and means that the device can't have any threats. If the device is detected with any level of threats, it's evaluated as noncompliant. Low - The device is evaluated as compliant if only low-level threats are present. Anything higher puts the device in a noncompliant status. Medium - The device is evaluated as compliant if the threats that are present on the device are low or medium level. If the device is detected to have high-level threats, it's determined to be noncompliant. High - This option is the least secure, as it allows all threat levels. It may be useful if you're using this solution only for reporting purposes. Google Play Protect - for Personally-Owned Work Profile \u00b6 Google Play Services is configured Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Require that the Google Play services app is installed and enabled. Google Play services allows security updates, and is a base-level dependency for many security features on certified-Google devices. Up-to-date security provider Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Require that an up-to-date security provider can protect a device from known vulnerabilities. SafetyNet device attestation Enter the level of SafetyNet attestation that must be met. Your options: Not configured ( default ) - Setting isn't evaluated for compliance or non-compliance. Check basic integrity Check basic integrity & certified devices Note: * On Android Enterprise devices, Threat scan on apps is a device configuration policy. Using a configuration policy, administrators can enable the setting on a device. See Android Enterprise device restriction settings. Device Properties - for Personally-Owned Work Profile \u00b6 Operating System Version - for Personally-Owned Work Profile Minimum OS version When a device doesn't meet the minimum OS version requirement, it's reported as non-compliant. A link with information on how to upgrade is shown. The end user can upgrade their device, and then access organization resources. By default, no version is configured. Maximum OS version When a device is using an OS version later than the version in the rule, access to organization resources is blocked. The user is asked to contact their IT administrator. Until a rule is changed to allow the OS version, this device can't access organization resources. By default, no version is configured. System security - for Personally-Owned Work Profile \u00b6 Require a password to unlock mobile devices Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Users must enter a password before they can access their device. This setting applies at the device level. If you only need to require a password at the Personally-Owned Work Profile level, then use a configuration policy. See Android Enterprise device configuration settings. Required password type Choose if a password should include only numeric characters, or a mix of numerals and other characters. Your options: Device Default Low security biometric At least numeric ( default ): Enter the minimum password length a user must enter, between 4 and 16 characters. Numeric complex: Enter the minimum password length a user must enter, between 4 and 16 characters. At least alphabetic: Enter the minimum password length a user must enter, between 4 and 16 characters. At least alphanumeric: Enter the minimum password length a user must enter, between 4 and 16 characters. At least alphanumeric with symbols: Enter the minimum password length a user must enter, between 4 and 16 characters. Depending on the password type you select, the following settings are available: * Maximum minutes of inactivity before password is required Enter the idle time before the user must reenter their password. Options include the default of Not configured, and from 1 Minute to 8 hours. * Number of days until password expires Enter the number of days, between 1-365, until the device password must be changed. For example, to change the password after 60 days, enter 60. When the password expires, users are prompted to create a new password. * Minimum password length Enter the minimum length the password must have, between 4 and 16 characters. * Number of previous passwords to prevent reuse Enter the number of recent passwords that can't be reused. Use this setting to restrict the user from creating previously used passwords. Encryption - for Personally-Owned Work Profile \u00b6 Encryption of data storage on device Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Encrypt data storage on your devices. You don't have to configure this setting because Android Enterprise devices enforce encryption. Device Security - for Personally-Owned Work Profile \u00b6 Block apps from unknown sources Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Block - Block devices with Security > Unknown Sources enabled sources (supported on Android 4.0 through Android 7.x. Not supported by Android 8.0 and later). To side-load apps, unknown sources must be allowed. If you're not side-loading Android apps, then set this feature to Block to enable this compliance policy. Company portal app runtime integrity Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Require - Choose Require to confirm the Company Portal app meets all the following requirements: Has the default runtime environment installed Is properly signed Isn't in debug-mode Is installed from a known source Block USB debugging on device Not configured ( default ) - This setting isn't evaluated for compliance or non-compliance. Block - Prevent devices from using the USB debugging feature. You don't have to configure this setting because USB debugging is already disabled on Android Enterprise devices. Minimum security patch level Select the oldest security patch level a device can have. Devices that aren't at least at this patch level are noncompliant. The date must be entered in the YYYY-MM-DD format. By default, no date is configured. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Compliance Policy for iOs devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyAndroidWorkProfile 'ConfigureAndroidDeviceCompliancePolicyWorkProfile' { DisplayName = \"Test Policy\" Description = \"\" DeviceThreatProtectionEnabled = $False DeviceThreatProtectionRequiredSecurityLevel = \"unavailable\" PasswordExpirationDays = 90 PasswordMinimumLength = 6 PasswordMinutesOfInactivityBeforeLock = 5 PasswordRequired = $True PasswordRequiredType = \"numericComplex\" SecurityBlockJailbrokenDevices = $True SecurityDisableUsbDebugging = $False SecurityPreventInstallAppsFromUnknownSources = $False SecurityRequireCompanyPortalAppIntegrity = $False SecurityRequireGooglePlayServices = $False SecurityRequireSafetyNetAttestationBasicIntegrity = $False SecurityRequireSafetyNetAttestationCertifiedDevice = $False SecurityRequireUpToDateSecurityProviders = $False SecurityRequireVerifyApps = $False StorageRequireEncryption = $True Ensure = \"Present\" Credential = $credsglobaladmin } } } Example 2 \u00b6 This example removes an existing Device Compliance Policy for iOs devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobbaAdminlAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyAndroidWorkProfile 'RemoveDeviceCompliancePolicyAndroidWorkProfile' { DisplayName = \"Test Android Work Profile Device Compliance Policy\" Ensure = \"Absent\" Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceCompliancePolicyAndroidWorkProfile"},{"location":"resources/intune/IntuneDeviceCompliancePolicyMacOS/","text":"IntuneDeviceCompliancePolicyMacOS \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) DisplayName Key String Display name of the MacOS device compliance policy. Description Write String Description of the MacOS device compliance policy. Assignments Write InstanceArray[] Assignments of the Intune Policy. PasswordRequired Write Boolean PasswordRequired of the MacOS device compliance policy. PasswordBlockSimple Write Boolean PasswordBlockSimple of the MacOS device compliance policy. PasswordExpirationDays Write UInt32 PasswordExpirationDays of the MacOS device compliance policy. PasswordMinimumLength Write UInt32 PasswordMinimumLength of the MacOS device compliance policy. PasswordMinutesOfInactivityBeforeLock Write UInt32 PasswordMinutesOfInactivityBeforeLock of the MacOS device compliance policy. PasswordPreviousPasswordBlockCount Write UInt32 PasswordPreviousPasswordBlockCount of the MacOS device compliance policy. PasswordMinimumCharacterSetCount Write UInt32 PasswordMinimumCharacterSetCount of the MacOS device compliance policy. PasswordRequiredType Write String PasswordRequiredType of the MacOS device compliance policy. DeviceDefault, Alphanumeric, Numeric OsMinimumVersion Write String OsMinimumVersion of the MacOS device compliance policy. OsMaximumVersion Write String OsMaximumVersion of the MacOS device compliance policy. OsMinimumBuildVersion Write String Minimum MacOS build version. OsMaximumBuildVersion Write String Maximum MacOS build version. SystemIntegrityProtectionEnabled Write Boolean SystemIntegrityProtectionEnabled of the MacOS device compliance policy. DeviceThreatProtectionEnabled Write Boolean DeviceThreatProtectionEnabled of the MacOS device compliance policy. DeviceThreatProtectionRequiredSecurityLevel Write String DeviceThreatProtectionRequiredSecurityLevel of the MacOS device compliance policy. Unavailable, Secured, Low, Medium, High, NotSet AdvancedThreatProtectionRequiredSecurityLevel Write String AdvancedThreatProtectionRequiredSecurityLevel of the MacOS device compliance policy. Unavailable, Secured, Low, Medium, High, NotSet StorageRequireEncryption Write Boolean StorageRequireEncryption of the MacOS device compliance policy. GatekeeperAllowedAppSource Write String System and Privacy setting that determines which download locations apps can be run from on a macOS device. notConfigured, macAppStore, macAppStoreAndIdentifiedDevelopers, anywhere FirewallEnabled Write Boolean FirewallEnabled of the MacOS device compliance policy. FirewallBlockAllIncoming Write Boolean FirewallBlockAllIncoming of the MacOS device compliance policy. FirewallEnableStealthMode Write Boolean FirewallEnableStealthMode of the MacOS device compliance policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceCompliancePolicyMacOS \u00b6 Description \u00b6 This resource configures the settings of MacOS compliance policies in your cloud-based organization. Parameters \u00b6 Device Health \u00b6 Require a system integrity protection Not configured (default) - This setting isn't evaluated for compliance or non-compliance. Require - Require macOS devices to have System Integrity Protection enabled. Device Properties \u00b6 Minimum OS required When a device doesn't meet the minimum OS version requirement, it's reported as non-compliant. A link with information on how to upgrade is shown. The device user can choose to upgrade their device. After that, they can access organization resources. Maximum OS version allowed When a device uses an OS version later than the version in the rule, access to organization resources is blocked. The device user is asked to contact their IT administrator. The device can't access organization resources until a rule changes to allow the OS version. Minimum OS build version When Apple publishes security updates, the build number is typically updated, not the OS version. Use this feature to enter a minimum allowed build number on the device. Maximum OS build version When Apple publishes security updates, the build number is typically updated, not the OS version. Use this feature to enter a maximum allowed build number on the device. System security settings \u00b6 Password \u00b6 Require a password to unlock mobile devices Not configured (default) Require Users must enter a password before they can access their device. Simple passwords Not configured (default) - Users can create passwords simple like 1234 or 1111. Block - Users can't create simple passwords, such as 1234 or 1111. Minimum password length Enter the minimum number of digits or characters that the password must have. Password type Choose if a password should have only Numeric characters, or if there should be a mix of numbers and other characters (Alphanumeric). Number of non-alphanumeric characters in password Enter the minimum number of special characters, such as &, #, %, !, and so on, that must be in the password. Setting a higher number requires the user to create a password that is more complex. Maximum minutes of inactivity before password is required Enter the idle time before the user must reenter their password. Password expiration (days) Select the number of days before the password expires, and they must create a new one. Number of previous passwords to prevent reuse Enter the number of previously used passwords that can't be used. Encryption \u00b6 Encryption of data storage on device Not configured ( default ) Require - Use Require to encrypt data storage on your devices. Device Security \u00b6 Firewall protects devices from unauthorized network access. You can use Firewall to control connections on a per-application basis. Firewall Not configured (default) - This setting leaves the firewall turned off, and network traffic is allowed (not blocked). Enable - Use Enable to help protect devices from unauthorized access. Enabling this feature allows you to handle incoming internet connections, and use stealth mode. Incoming connections Not configured (default) - Allows incoming connections and sharing services. Block - Block all incoming network connections except the connections required for basic internet services, such as DHCP, Bonjour, and IPSec. This setting also blocks all sharing services, including screen sharing, remote access, iTunes music sharing, and more. Stealth Mode Not configured (default) - This setting leaves stealth mode turned off. Enable - Turn on stealth mode to prevent devices from responding to probing requests, which can be made my malicious users. When enabled, the device continues to answer incoming requests for authorized apps. Gatekeeper \u00b6 For more information, see Gatekeeper on macOS. Allow apps downloaded from these locations Allows supported applications to be installed on your devices from different locations. Your location options: Not configured (default) - The gatekeeper option has no impact on compliance or non-compliance. Mac App Store - Only install apps for the Mac app store. Apps can't be installed from third parties nor identified developers. If a user selects Gatekeeper to install apps outside the Mac App Store, then the device is considered not compliant. Mac App Store and identified developers - Install apps for the Mac app store and from identified developers. macOS checks the identity of developers, and does some other checks to verify app integrity. If a user selects Gatekeeper to install apps outside these options, then the device is considered not compliant. Anywhere - Apps can be installed from anywhere, and by any developer. This option is the least secure. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Comliance Policy for MacOS. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyMacOS 'ConfigureDeviceCompliancePolicyMacOS' { DisplayName = \"MacOS DSC Policy\" Description = \"Test policy\" PasswordRequired = $False PasswordBlockSimple = $False PasswordExpirationDays = 365 PasswordMinimumLength = 6 PasswordMinutesOfInactivityBeforeLock = 5 PasswordPreviousPasswordBlockCount = 13 PasswordMinimumCharacterSetCount = 1 PasswordRequiredType = \"DeviceDefault\" OsMinimumVersion = 10 OsMaximumVersion = 13 SystemIntegrityProtectionEnabled = $False DeviceThreatProtectionEnabled = $False DeviceThreatProtectionRequiredSecurityLevel = \"Unavailable\" StorageRequireEncryption = $False FirewallEnabled = $False FirewallBlockAllIncoming = $False FirewallEnableStealthMode = $False Ensure = 'Present' Credential = $credsGlobalAdmin } } } Example 2 \u00b6 This example removes an existing Device Compliance Policy for MacOS devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyMacOS 'RemoveDeviceCompliancePolicyMacOS' { DisplayName = 'Demo MacOS Device Compliance Policy' Ensure = 'Absent' Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceCompliancePolicyMacOS"},{"location":"resources/intune/IntuneDeviceCompliancePolicyWindows10/","text":"IntuneDeviceCompliancePolicyWindows10 \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) DisplayName Key String Display name of the Windows 10 device compliance policy. Description Write String Description of the Windows 10 device compliance policy. Assignments Write InstanceArray[] Represents the assignment to the Intune policy. PasswordRequired Write Boolean PasswordRequired of the Windows 10 device compliance policy. PasswordBlockSimple Write Boolean PasswordBlockSimple of the Windows 10 device compliance policy. PasswordRequiredToUnlockFromIdle Write Boolean PasswordRequiredToUnlockFromIdle of the Windows 10 device compliance policy. PasswordMinutesOfInactivityBeforeLock Write UInt32 PasswordMinutesOfInactivityBeforeLock of the Windows 10 device compliance policy. PasswordExpirationDays Write UInt32 PasswordExpirationDays of the Windows 10 device compliance policy. PasswordMinimumLength Write UInt32 PasswordMinimumLength of the Windows 10 device compliance policy. PasswordMinimumCharacterSetCount Write UInt32 PasswordMinimumCharacterSetCount of the Windows 10 device compliance policy. PasswordRequiredType Write String PasswordRequiredType of the Windows 10 device compliance policy. DeviceDefault, Alphanumeric, Numeric PasswordPreviousPasswordBlockCount Write UInt32 PasswordPreviousPasswordBlockCount of the Windows 10 device compliance policy. RequireHealthyDeviceReport Write Boolean RequireHealthyDeviceReport of the Windows 10 device compliance policy. OsMinimumVersion Write String OsMinimumVersion of the Windows 10 device compliance policy. OsMaximumVersion Write String OsMaximumVersion of the Windows 10 device compliance policy. MobileOsMinimumVersion Write String MobileOsMinimumVersion of the Windows 10 device compliance policy. MobileOsMaximumVersion Write String MobileOsMaximumVersion of the Windows 10 device compliance policy. EarlyLaunchAntiMalwareDriverEnabled Write Boolean EarlyLaunchAntiMalwareDriverEnabled of the Windows 10 device compliance policy. BitLockerEnabled Write Boolean BitLockerEnabled of the Windows 10 device compliance policy. SecureBootEnabled Write Boolean SecureBootEnabled of the Windows 10 device compliance policy. CodeIntegrityEnabled Write Boolean CodeIntegrityEnabled of the Windows 10 device compliance policy. StorageRequireEncryption Write Boolean StorageRequireEncryption of the Windows 10 device compliance policy. ActiveFirewallRequired Write Boolean ActiveFirewallRequired of the Windows 10 device compliance policy. DefenderEnabled Write Boolean DefenderEnabled of the Windows 10 device compliance policy. DefenderVersion Write String DefenderVersion of the Windows 10 device compliance policy. SignatureOutOfDate Write Boolean SignatureOutOfDate of the Windows 10 device compliance policy. RTPEnabled Write Boolean RTPEnabled of the Windows 10 device compliance policy. AntivirusRequired Write Boolean AntivirusRequired of the Windows 10 device compliance policy. AntiSpywareRequired Write Boolean AntiSpywareRequired of the Windows 10 device compliance policy. DeviceThreatProtectionEnabled Write Boolean DeviceThreatProtectionEnabled of the Windows 10 device compliance policy. DeviceThreatProtectionRequiredSecurityLevel Write String DeviceThreatProtectionRequiredSecurityLevel of the Windows 10 device compliance policy. Unavailable, Secured, Low, Medium, High, NotSet ConfigurationManagerComplianceRequired Write Boolean ConfigurationManagerComplianceRequired of the Windows 10 device compliance policy. TPMRequired Write Boolean TPMRequired of the Windows 10 device compliance policy. DeviceCompliancePolicyScript Write String DeviceCompliancePolicyScript of the Windows 10 device compliance policy. ValidOperatingSystemBuildRanges Write StringArray[] ValidOperatingSystemBuildRanges of the Windows 10 device compliance policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceCompliancePolicyWindows10 \u00b6 Description \u00b6 This resource configures the settings of Windows 10 compliance policies in your cloud-based organization. Parameters \u00b6 Device Health \u00b6 Windows Health Attestation Service evaluation rules \u00b6 Require BitLocker: Windows BitLocker Drive Encryption encrypts all data stored on the Windows operating system volume. BitLocker uses the Trusted Platform Module (TPM) to help protect the Windows operating system and user data. It also helps confirm that a computer isn't tampered with, even if its left unattended, lost, or stolen. If the computer is equipped with a compatible TPM, BitLocker uses the TPM to lock the encryption keys that protect the data. As a result, the keys can't be accessed until the TPM verifies the state of the computer. Not configured (default) - This setting isn't evaluated for compliance or non-compliance. Require - The device can protect data that's stored on the drive from unauthorized access when the system is off, or hibernates. Device HealthAttestation CSP - BitLockerStatus Require Secure Boot to be enabled on the device: Not configured (default) - This setting isn't evaluated for compliance or non-compliance. Require - The system is forced to boot to a factory trusted state. The core components that are used to boot the machine must have correct cryptographic signatures that are trusted by the organization that manufactured the device. The UEFI firmware verifies the signature before it lets the machine start. If any files are tampered with, which breaks their signature, the system doesn't boot. Device Properties \u00b6 Operating System Version \u00b6 To discover build versions for all Windows 10 Feature Updates and Cumulative Updates (to be used in some of the fields below), see Windows 10 release information. Be sure to include the 10.0. prefix before the build numbers, as the following examples illustrate. Minimum OS version: Enter the minimum allowed version in the major.minor.build.revision number format. To get the correct value, open a command prompt, and type ver. The ver command returns the version in the following format: Microsoft Windows [Version 10.0.17134.1] When a device has an earlier version than the OS version you enter, it's reported as noncompliant. A link with information on how to upgrade is shown. The end user can choose to upgrade their device. After they upgrade, they can access company resources. Maximum OS version: Enter the maximum allowed version, in the major.minor.build.revision number format. To get the correct value, open a command prompt, and type ver. The ver command returns the version in the following format: Microsoft Windows [Version 10.0.17134.1] When a device is using an OS version later than the version entered, access to organization resources is blocked. The end user is asked to contact their IT administrator. The device can't access organization resources until the rule is changed to allow the OS version. Minimum OS required for mobile devices: Enter the minimum allowed version, in the major.minor.build number format. When a device has an earlier version that the OS version you enter, it's reported as noncompliant. A link with information on how to upgrade is shown. The end user can choose to upgrade their device. After they upgrade, they can access company resources. Maximum OS required for mobile devices: Enter the maximum allowed version, in the major.minor.build number. When a device is using an OS version later than the version entered, access to organization resources is blocked. The end user is asked to contact their IT administrator. The device can't access organization resources until the rule is changed to allow the OS version. Valid operating system builds: Specify a list of minimum and maximum operating system builds. Valid operating system builds provides additional flexibility when compared against minimum and maximum OS versions. Consider a scenario where minimum OS version is set to 10.0.18362.xxx (Windows 10 1903) and maximum OS version is set to 10.0.18363.xxx (Windows 10 1909). This configuration can allow a Windows 10 1903 device that doesn't have recent cumulative updates installed to be identified as compliant. Minimum and maximum OS versions might be suitable if you have standardized on a single Windows 10 release, but might not address your requirements if you need to use multiple builds, each with specific patch levels. In such a case, consider leveraging valid operating system builds instead, which allows multiple builds to be specified as per the following example. Example: The following table is an example of a range for the acceptable operating systems versions for different Windows 10 releases. In this example, three different Feature Updates have been allowed (1809, 1909 and 2004). Specifically, only those versions of Windows and which have applied cumulative updates from June to September 2020 will be considered to be compliant. This is sample data only. The table includes a first column that includes any text you want to describe the entry, followed by the minimum and maximum OS version for that entry. The second and third columns must adhere to valid OS build versions in the major.minor.build.revision number format. After you define one or more entries, you can Export the list as a comma-separated values (CSV) file. Description Minimum OS version Maximum OS version Win 10 2004 (Jun-Sept 2020) 10.0.19041.329 10.0.19041.508 Win 10 1909 (Jun-Sept 2020) 10.0.18363.900 10.0.18363.1110 Win 10 1809 (Jun-Sept 2020) 10.0.17763.1282 10.0.17763.1490 Configuration Manager Compliance \u00b6 Applies only to co-managed devices running Windows 10 and later. Intune-only devices return a not available status. Require device compliance from Configuration Manager: Not configured (default) - Intune doesn't check for any of the Configuration Manager settings for compliance. Require - Require all settings (configuration items) in Configuration Manager to be compliant. System Security \u00b6 Password \u00b6 Require a password to unlock mobile devices: Not configured (default) - This setting isn't evaluated for compliance or non-compliance. Require - Users must enter a password before they can access their device. Simple passwords: Not configured (default) - Users can create simple passwords, such as 1234 or 1111. Block - Users can't create simple passwords, such as 1234 or 1111. Password type: Choose the type of password or PIN required. Your options: Device (default) - Require a password, numeric PIN, or alphanumeric PIN Numeric - Require a password or numeric PIN Alphanumeric - Require a password, or alphanumeric PIN. When set to Alphanumeric, the following settings are available: Password complexity: Your options: Require digits and lowercase letters (default) Require digits, lowercase letters, and uppercase letters Require digits, lowercase letters, uppercase letters, and special characters Minimum password length: Enter the minimum number of digits or characters that the password must have. Maximum minutes of inactivity before password is required: Enter the idle time before the user must reenter their password. Password expiration (days): Enter the number of days before the password expires, and they must create a new one, from 1-730. Number of previous passwords to prevent reuse: Enter the number of previously used passwords that can't be used. Require password when device returns from idle state (Mobile and Holographic): Not configured (default) Require - Require device users to enter the password every time the device returns from an idle state. Important When the password requirement is changed on a Windows desktop, users are impacted the next time they sign in, as that's when the device goes from idle to active. Users with passwords that meet the requirement are still prompted to change their passwords. Encryption \u00b6 Encryption of data storage on a device: This setting applies to all drives on a device. Not configured (default) Require - Use Require to encrypt data storage on your devices. Note The Encryption of data storage on a device setting generically checks for the presence of encryption on the device, more specifically at the OS drive level. Currently, Intune supports only the encryption check with BitLocker. For a more robust encryption setting, consider using Require BitLocker, which leverages Windows Device Health Attestation to validate Bitlocker status at the TPM level. Device Security \u00b6 Firewall: Not configured (default) - Intune doesn't control the Microsoft Defender Firewall, nor change existing settings. Require - Turn on the Microsoft Defender Firewall, and prevent users from turning it off. Note If the device immediately syncs after a reboot, or immediately syncs waking from sleep, then this setting may report as an Error. This scenario might not affect the overall device compliance status. To re-evaluate the compliance status, manually sync the device. Trusted Platform Module (TPM): Not configured (default) - Intune doesn't check the device for a TPM chip version. Require - Intune checks the TPM chip version for compliance. The device is compliant if the TPM chip version is greater than 0 (zero). The device isn't compliant if there isn't a TPM version on the device. Antivirus: Not configured (default) - Intune doesn't check for any antivirus solutions installed on the device. Require - Check compliance using antivirus solutions that are registered with Windows Security Center, such as Symantec and Microsoft Defender. Antispyware: Not configured (default) - Intune doesn't check for any antispyware solutions installed on the device. Require - Check compliance using antispyware solutions that are registered with Windows Security Center, such as Symantec and Microsoft Defender. Defender \u00b6 The following compliance settings are supported with Windows 10 Desktop. Microsoft Defender Antimalware: Not configured (default) - Intune doesn't control the service, nor change existing settings. Require - Turn on the Microsoft Defender anti-malware service, and prevent users from turning it off. Microsoft Defender Antimalware minimum version: Enter the minimum allowed version of Microsoft Defender anti-malware service. For example, enter 4.11.0.0. When left blank, any version of the Microsoft Defender anti-malware service can be used. By (default) , no version is configured. Microsoft Defender Antimalware security intelligence up-to-date: Controls the Windows Security virus and threat protection updates on the devices. Not configured (default) - Intune doesn't enforce any requirements. Require - Force the Microsoft Defender security intelligence be up-to-date. Real-time protection: Not configured ( (default) ) - Intune doesn't control this feature, nor change existing settings. Require - Turn on real-time protection, which scans for malware, spyware, and other unwanted software. Microsoft Defender for Endpoint \u00b6 Microsoft Defender for Endpoint rules \u00b6 For additional information on Microsoft Defender for Endpoint integration in conditional access scenarios, see Configure Conditional Access in Microsoft Defender for Endpoint. Require the device to be at or under the machine risk score: Use this setting to take the risk assessment from your defense threat services as a condition for compliance. Choose the maximum allowed threat level: Not configured ( (default) ) Clear -This option is the most secure, as the device can't have any threats. If the device is detected as having any level of threats, it's evaluated as non-compliant. Low - The device is evaluated as compliant if only low-level threats are present. Anything higher puts the device in a non-compliant status. Medium - The device is evaluated as compliant if existing threats on the device are low or medium level. If the device is detected to have high-level threats, it's determined to be non-compliant. High - This option is the least secure, and allows all threat levels. It may be useful if you're using this solution only for reporting purposes. Windows Holographic for Business \u00b6 Windows Holographic for Business uses the Windows 10 and later platform. Windows Holographic for Business supports the following setting: System Security > Encryption > Encryption of data storage on device. To verify device encryption on the Microsoft HoloLens, see Verify device encryption. Surface Hub \u00b6 Surface Hub uses the Windows 10 and later platform. Surface Hubs are supported for both compliance and Conditional Access. To enable these features on Surface Hubs, we recommend you enable Windows 10 automatic enrollment in Intune (requires Azure Active Directory (Azure AD)), and target the Surface Hub devices as device groups. Surface Hubs are required to be Azure AD joined for compliance and Conditional Access to work. For guidance, see set up enrollment for Windows devices. Special consideration for Surface Hubs running Windows 10 Team OS: Surface Hubs that run Windows 10 Team OS do not support the Microsoft Defender for Endpoint and Password compliance policies at this time. Therefore, for Surface Hubs that run Windows 10 Team OS set the following two settings to their (default) of Not configured : * In the category Password, set Require a password to unlock mobile devices to the (default) of Not configured. * In the category Microsoft Defender for Endpoint, set Require the device to be at or under the machine risk score to the (default) of Not configured. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Comliance Policy for MacOS. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyWindows10 'ConfigureDeviceCompliancePolicyWindows10' { DisplayName = \"Windows 10 DSC Policy\" Description = \"Test policy\" PasswordRequired = $False PasswordBlockSimple = $False PasswordRequiredToUnlockFromIdle = $True PasswordMinutesOfInactivityBeforeLock = 15 PasswordExpirationDays = 365 PasswordMinimumLength = 6 PasswordMinutesOfInactivityBeforeLock = 5 PasswordPreviousPasswordBlockCount = 13 PasswordMinimumCharacterSetCount = 1 PasswordRequiredType = \"Devicedefault\" RequireHealthyDeviceReport = $True OsMinimumVersion = 10 OsMaximumVersion = 10 . 19 MobileOsMinimumVersion = 10 MobileOsMaximumVersion = 10 . 19 EarlyLaunchAntiMalwareDriverEnabled = $False BitLockerEnabled = $False SecureBootEnabled = $True CodeIntegrityEnabled = $True StorageRequireEncryption = $True ActiveFirewallRequired = $True DefenderEnabled = $True DefenderVersion = \"\" SignatureOutOfDate = $True RtpEnabled = $True AntivirusRequired = $True AntiSpywareRequired = $True DeviceThreatProtectionEnabled = $True DeviceThreatProtectionRequiredSecurityLevel = \"Medium\" ConfigurationManagerComplianceRequired = $False TPMRequired = $False deviceCompliancePolicyScript = $null ValidOperatingSystemBuildRanges = @() Ensure = 'Present' Credential = $credsGlobalAdmin } } } Example 2 \u00b6 This example removes an existing Device Compliance Policy for MacOS devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyWindows10 'RemoveDeviceCompliancePolicyWindows10' { DisplayName = 'Demo Windows 10 Device Compliance Policy' Ensure = 'Absent' Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceCompliancePolicyWindows10"},{"location":"resources/intune/IntuneDeviceCompliancePolicyiOs/","text":"IntuneDeviceCompliancePolicyiOs \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) name Write String The application name. publisher Write String The publisher of the application. appStoreUrl Write String The Store URL of the application. appId Write String The application or bundle identifier of the application. DisplayName Key String Display name of the iOS device compliance policy. Description Write String Description of the iOS device compliance policy. Assignments Write InstanceArray[] Assignments of the Intune Policy. PasscodeBlockSimple Write Boolean PasscodeBlockSimple of the iOS device compliance policy. PasscodeExpirationDays Write UInt32 PasscodeExpirationDays of the iOS device compliance policy. PasscodeMinimumLength Write UInt32 PasscodeMinimumLength of the iOS device compliance policy. PasscodeMinutesOfInactivityBeforeLock Write UInt32 PasscodeMinutesOfInactivityBeforeLock of the iOS device compliance policy. PasscodeMinutesOfInactivityBeforeScreenTimeout Write UInt32 Minutes of inactivity before the screen times out. PasscodePreviousPasscodeBlockCount Write UInt32 PasscodePreviousPasscodeBlockCount of the iOS device compliance policy. PasscodeMinimumCharacterSetCount Write UInt32 PasscodeMinimumCharacterSetCount of the iOS device compliance policy. PasscodeRequiredType Write String PasscodeRequiredType of the iOS device compliance policy. deviceDefault, alphanumeric, numeric PasscodeRequired Write Boolean PasscodeRequired of the iOS device compliance policy. OsMinimumVersion Write String OsMinimumVersion of the iOS device compliance policy. OsMaximumVersion Write String OsMaximumVersion of the iOS device compliance policy. OsMinimumBuildVersion Write String Minimum IOS build version. OsMaximumBuildVersion Write String Maximum IOS build version. SecurityBlockJailbrokenDevices Write Boolean SecurityBlockJailbrokenDevices of the iOS device compliance policy. DeviceThreatProtectionEnabled Write Boolean DeviceThreatProtectionEnabled of the iOS device compliance policy. DeviceThreatProtectionRequiredSecurityLevel Write String Require Mobile Threat Protection minimum risk level to report noncompliance. unavailable, secured, low, medium, high, notSet AdvancedThreatProtectionRequiredSecurityLevel Write String MDATP Require Mobile Threat Protection minimum risk level to report noncompliance. unavailable, secured, low, medium, high, notSet ManagedEmailProfileRequired Write Boolean ManagedEmailProfileRequired of the iOS device compliance policy. RestrictedApps Write InstanceArray[] Credentials of the Intune Admin Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceCompliancePolicyiOs \u00b6 Description \u00b6 This resource configures the Intune compliance policies for iOs devices. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Compliance Policy for iOs devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyiOs 'ConfigureDeviceCompliancePolicyiOS' { DisplayName = 'Test iOS Device Compliance Policy' Description = 'Test iOS Device Compliance Policy Description' PasscodeBlockSimple = $True PasscodeExpirationDays = 365 PasscodeMinimumLength = 6 PasscodeMinutesOfInactivityBeforeLock = 5 PasscodePreviousPasscodeBlockCount = 3 PasscodeMinimumCharacterSetCount = 2 PasscodeRequiredType = 'numeric' PasscodeRequired = $True OsMinimumVersion = 10 OsMaximumVersion = 12 SecurityBlockJailbrokenDevices = $True DeviceThreatProtectionEnabled = $True DeviceThreatProtectionRequiredSecurityLevel = 'medium' ManagedEmailProfileRequired = $True Ensure = 'Present' Credential = $credsGlobalAdmin } } } Example 2 \u00b6 This example removes an existing Device Compliance Policy for iOs devices Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceCompliancePolicyiOs 'RemoveDeviceCompliancePolicyiOS' { DisplayName = 'Demo iOS Device Compliance Policy' Ensure = 'Absent' Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceCompliancePolicyiOs"},{"location":"resources/intune/IntuneDeviceConfigurationPolicyAndroidDeviceAdministrator/","text":"IntuneDeviceConfigurationPolicyAndroidDeviceAdministrator \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) odataType Write String odatatype of the item. #microsoft.graph.appleAppListItem appId Write String Kiosk mode managed app id appStoreUrl Write String Define the app store URL. name Write String Define the name of the app. publisher Write String Define the publisher of the app. Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. AppsBlockClipboardSharing Write Boolean Block clipboard sharing between apps (Samsung KNOX Standard 4.0+). AppsBlockCopyPaste Write Boolean Block copy and paste functionality. AppsBlockYouTube Write Boolean Block YouTube (Samsung KNOX Standard 4.0+). AppsHideList Write InstanceArray[] Specify the apps that will be hidden on the device. Users cannot discover or run these apps. AppsInstallAllowList Write InstanceArray[] Specify the apps that users can install. Users will not be able to install apps that are not on the list. AppsLaunchBlockList Write InstanceArray[] Specify the apps that users cannot run on their device. BluetoothBlocked Write Boolean Block Bluetooth (Samsung KNOX Standard 4.0+). CameraBlocked Write Boolean Block use of camera CellularBlockDataRoaming Write Boolean Block data roaming over the cellular network (Samsung KNOX Standard 4.0+). CellularBlockMessaging Write Boolean Block SMS/MMS messaging functionality (Samsung KNOX Standard 4.0+). CellularBlockVoiceRoaming Write Boolean Block voice roaming over the cellular network (Samsung KNOX Standard 4.0+). CellularBlockWiFiTethering Write Boolean Block Wi-Fi tethering (Samsung KNOX Standard 4.0+). CompliantAppListType Write String Device compliance can be viewed in the Restricted Apps Compliance report. none, appsInListCompliant, appsNotInListCompliant CompliantAppsList Write InstanceArray[] Enter the Google Play Store URL of the app you want. For example, to specify the Microsoft Remote Desktop app for Android, enter https://play.google.com/store/apps/details?id=com.microsoft.rdc.android. To find the URL of an app, use a search engine to locate the store page. For example, to find the Remote Desktop app, you could search Microsoft Remote Desktop Play Store. DateAndTimeBlockChanges Write Boolean Block user from changing date and time on device (Samsung KNOX). DeviceSharingAllowed Write Boolean Allow multiple users to log into the Company Portal using their AAD credentials (Samsung KNOX Standard 4.0+). DiagnosticDataBlockSubmission Write Boolean Block submitting diagnostic data from device. FactoryResetBlocked Write Boolean Block factory reset on device. GoogleAccountBlockAutoSync Write Boolean Block Google account auto sync functionality on device. GooglePlayStoreBlocked Write Boolean Block Google Play store (Samsung KNOX Standard 4.0+). KioskModeApps Write InstanceArray[] Kiosk mode apps KioskModeBlockSleepButton Write Boolean Kiosk mode block sleep button KioskModeBlockVolumeButtons Write Boolean Kiosk mode block volume buttons LocationServicesBlocked Write Boolean Location services blocked NfcBlocked Write Boolean Block Near Field Communication (NFC) technology (Samsung KNOX Standard 4.0+). PasswordBlockFingerprintUnlock Write Boolean Block using fingerprint to unlock device. PasswordBlockTrustAgents Write Boolean Block Smart Lock or other trust agents from adjusting lock screen settings (Samsung KNOX Standard 5.0+). PasswordExpirationDays Write UInt32 Number of days until device password must be changed. (1-365) PasswordMinimumLength Write UInt32 Minimum number of digits or characters in password. (4-16) PasswordMinutesOfInactivityBeforeScreenTimeout Write UInt32 Maximum minutes of inactivity until screen locks. Ignored by device if new time is longer than what's currently set on device. If set to Immediately, devices will use the minimum possible value per device. PasswordPreviousPasswordBlockCount Write UInt32 Number of new passwords that must be used until an old one can be reused. PasswordRequired Write Boolean Require password to access device. PasswordRequiredType Write String Specify the type of password required. deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any PasswordSignInFailureCountBeforeFactoryReset Write UInt32 Number of consecutive times an incorrect password can be entered before device is wiped of all data. PowerOffBlocked Write Boolean Block user from powering off device. If this setting is disabled the setting 'Number of sign-in failures before wiping device' does not function. RequiredPasswordComplexity Write String Define the password complexity. none, low, medium, high ScreenCaptureBlocked Write Boolean Block capturing contents of screen as an image. SecurityRequireVerifyApps Write Boolean Security require verify apps StorageBlockGoogleBackup Write Boolean Block sync with Google backup. StorageBlockRemovableStorage Write Boolean Block removable storage usage (Samsung KNOX Standard 4.0+). StorageRequireDeviceEncryption Write Boolean Require encryption on device. Not all devices support encryption. StorageRequireRemovableStorageEncryption Write Boolean Storage cards must be encrypted. Not all devices support storage card encryption. For more information, see the device and mobile operating system documentation. VoiceAssistantBlocked Write Boolean Block voice assistant (Samsung KNOX Standard 4.0+). VoiceDialingBlocked Write Boolean Block voice dialing (Samsung KNOX Standard 4.0+). WebBrowserBlockAutofill Write Boolean Block autofill. WebBrowserBlocked Write Boolean Block web browser on device. WebBrowserBlockJavaScript Write Boolean Block JavaScript in the browser. WebBrowserBlockPopups Write Boolean Block pop-ups in web browser. WebBrowserCookieSettings Write String Allow or block browser cookies browserDefault, blockAlways, allowCurrentWebSite, allowFromWebsitesVisited, allowAlways WiFiBlocked Write Boolean Block Wi-Fi (Samsung KNOX Standard 4.0+). Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceConfigurationPolicyAndroidDeviceAdministrator \u00b6 Description \u00b6 This resource configures the settings of Android Device Administrator device restriction policy in your cloud-based organization.","title":"IntuneDeviceConfigurationPolicyAndroidDeviceAdministrator"},{"location":"resources/intune/IntuneDeviceConfigurationPolicyAndroidDeviceOwner/","text":"IntuneDeviceConfigurationPolicyAndroidDeviceOwner \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DeviceMode Write String Name Write String RuleType Write String Name Write String OSEditionTypes Write StringArray[] RuleType Write String MaxOSVersion Write String MinOSVersion Write String Name Write String RuleType Write String Intent Write String Source Write String SourceId Write String Target Write Instance DeviceAndAppManagementAssignmentFilterId Write String DeviceAndAppManagementAssignmentFilterType Write String CompliantDeviceCount Write UInt32 ConflictDeviceCount Write UInt32 ErrorDeviceCount Write UInt32 InstancePath Write String NonCompliantDeviceCount Write UInt32 NotApplicableDeviceCount Write UInt32 RemediatedDeviceCount Write UInt32 SettingName Write String UnknownDeviceCount Write UInt32 ComplianceGracePeriodExpirationDateTime Write String DeviceDisplayName Write String DeviceModel Write String LastReportedDateTime Write String Platform Write UInt32 Status Write String UserName Write String UserPrincipalName Write String ConfigurationVersion Write UInt32 ConflictCount Write UInt32 ErrorCount Write UInt32 FailedCount Write UInt32 LastUpdateDateTime Write String NotApplicableCount Write UInt32 NotApplicablePlatformCount Write UInt32 PendingCount Write UInt32 SuccessCount Write UInt32 DeviceConfiguration Write Instance ExcludeGroup Write Boolean TargetGroupId Write String Assignments Write InstanceArray[] CreatedDateTime Write String Description Write String DeviceManagementApplicabilityRuleDeviceMode Write Instance DeviceManagementApplicabilityRuleOSEdition Write Instance DeviceManagementApplicabilityRuleOSVersion Write Instance DeviceSettingStateSummaries Write InstanceArray[] DeviceStatusOverview Write Instance DeviceStatuses Write InstanceArray[] DisplayName Write String GroupAssignments Write InstanceArray[] LastModifiedDateTime Write String RoleScopeTagIds Write StringArray[] SupportsScopeTags Write Boolean UserStatusOverview Write Instance UserStatuses Write InstanceArray[] Version Write UInt32 DevicesCount Write UInt32 LastReportedDateTime Write String Status Write String UserDisplayName Write String UserPrincipalName Write String ConfigurationVersion Write UInt32 ConflictCount Write UInt32 ErrorCount Write UInt32 FailedCount Write UInt32 LastUpdateDateTime Write String NotApplicableCount Write UInt32 PendingCount Write UInt32 SuccessCount Write UInt32 Id Write String Description Write String DeviceManagementApplicabilityRuleDeviceMode Write Instance DeviceManagementApplicabilityRuleOsEdition Write Instance DeviceManagementApplicabilityRuleOsVersion Write Instance DisplayName Write String RoleScopeTagIds Write StringArray[] SupportsScopeTags Write Boolean Version Write UInt32 AccountsBlockModification Write Boolean AppsAllowInstallFromUnknownSources Write Boolean AppsAutoUpdatePolicy Write String AppsDefaultPermissionPolicy Write String AppsRecommendSkippingFirstUseHints Write Boolean AzureAdSharedDeviceDataClearApps Write String BluetoothBlockConfiguration Write Boolean BluetoothBlockContactSharing Write Boolean CameraBlocked Write Boolean CellularBlockWiFiTethering Write Boolean CertificateCredentialConfigurationDisabled Write Boolean CrossProfilePoliciesAllowCopyPaste Write Boolean CrossProfilePoliciesAllowDataSharing Write String CrossProfilePoliciesShowWorkContactsInPersonalProfile Write Boolean DataRoamingBlocked Write Boolean DateTimeConfigurationBlocked Write Boolean EnrollmentProfile Write String FactoryResetBlocked Write Boolean FactoryResetDeviceAdministratorEmails Write String GlobalProxy Write String GoogleAccountsBlocked Write Boolean KioskCustomizationDeviceSettingsBlocked Write Boolean KioskCustomizationPowerButtonActionsBlocked Write Boolean KioskCustomizationStatusBar Write String KioskCustomizationSystemErrorWarnings Write Boolean KioskCustomizationSystemNavigation Write String KioskModeAppOrderEnabled Write Boolean KioskModeAppPositions Write String KioskModeApps Write String KioskModeAppsInFolderOrderedByName Write Boolean KioskModeBluetoothConfigurationEnabled Write Boolean KioskModeDebugMenuEasyAccessEnabled Write Boolean KioskModeExitCode Write String KioskModeFlashlightConfigurationEnabled Write Boolean KioskModeFolderIcon Write String KioskModeGridHeight Write UInt32 KioskModeGridWidth Write UInt32 KioskModeIconSize Write String KioskModeLockHomeScreen Write Boolean KioskModeManagedFolders Write String KioskModeManagedHomeScreenAutoSignout Write Boolean KioskModeManagedHomeScreenInactiveSignOutDelayInSeconds Write UInt32 KioskModeManagedHomeScreenInactiveSignOutNoticeInSeconds Write UInt32 KioskModeManagedHomeScreenPinComplexity Write String KioskModeManagedHomeScreenPinRequired Write Boolean KioskModeManagedHomeScreenPinRequiredToResume Write Boolean KioskModeManagedHomeScreenSignInBackground Write String KioskModeManagedHomeScreenSignInBrandingLogo Write String KioskModeManagedHomeScreenSignInEnabled Write Boolean KioskModeManagedSettingsEntryDisabled Write Boolean KioskModeMediaVolumeConfigurationEnabled Write Boolean KioskModeScreenOrientation Write String KioskModeScreenSaverConfigurationEnabled Write Boolean KioskModeScreenSaverDetectMediaDisabled Write Boolean KioskModeScreenSaverDisplayTimeInSeconds Write UInt32 KioskModeScreenSaverImageUrl Write String KioskModeScreenSaverStartDelayInSeconds Write UInt32 KioskModeShowAppNotificationBadge Write Boolean KioskModeShowDeviceInfo Write Boolean KioskModeVirtualHomeButtonEnabled Write Boolean KioskModeVirtualHomeButtonType Write String KioskModeWallpaperUrl Write String KioskModeWifiAllowedSsids Write String KioskModeWiFiConfigurationEnabled Write Boolean MicrophoneForceMute Write Boolean MicrosoftLauncherConfigurationEnabled Write Boolean MicrosoftLauncherCustomWallpaperAllowUserModification Write Boolean MicrosoftLauncherCustomWallpaperEnabled Write Boolean MicrosoftLauncherCustomWallpaperImageUrl Write String MicrosoftLauncherDockPresenceAllowUserModification Write Boolean MicrosoftLauncherDockPresenceConfiguration Write String MicrosoftLauncherFeedAllowUserModification Write Boolean MicrosoftLauncherFeedEnabled Write Boolean MicrosoftLauncherSearchBarPlacementConfiguration Write String NetworkEscapeHatchAllowed Write Boolean NfcBlockOutgoingBeam Write Boolean PasswordBlockKeyguard Write Boolean PasswordBlockKeyguardFeatures Write String PasswordExpirationDays Write UInt32 PasswordMinimumLength Write UInt32 PasswordMinimumLetterCharacters Write UInt32 PasswordMinimumLowerCaseCharacters Write UInt32 PasswordMinimumNonLetterCharacters Write UInt32 PasswordMinimumNumericCharacters Write UInt32 PasswordMinimumSymbolCharacters Write UInt32 PasswordMinimumUpperCaseCharacters Write UInt32 PasswordMinutesOfInactivityBeforeScreenTimeout Write UInt32 PasswordPreviousPasswordCountToBlock Write UInt32 PasswordRequiredType Write String PasswordSignInFailureCountBeforeFactoryReset Write UInt32 PersonalProfileAppsAllowInstallFromUnknownSources Write Boolean PersonalProfileCameraBlocked Write Boolean PersonalProfilePersonalApplications Write String PersonalProfilePlayStoreMode Write String PersonalProfileScreenCaptureBlocked Write Boolean PlayStoreMode Write String ScreenCaptureBlocked Write Boolean SecurityDeveloperSettingsEnabled Write Boolean SecurityRequireVerifyApps Write Boolean StatusBarBlocked Write Boolean StayOnModes Write String StorageAllowUsb Write Boolean StorageBlockExternalMedia Write Boolean StorageBlockUsbFileTransfer Write Boolean SystemUpdateFreezePeriods Write String SystemUpdateInstallType Write String SystemUpdateWindowEndMinutesAfterMidnight Write UInt32 SystemUpdateWindowStartMinutesAfterMidnight Write UInt32 SystemWindowsBlocked Write Boolean UsersBlockAdd Write Boolean UsersBlockRemove Write Boolean VolumeBlockAdjustment Write Boolean VpnAlwaysOnLockdownMode Write Boolean VpnAlwaysOnPackageIdentifier Write String WifiBlockEditConfigurations Write Boolean WifiBlockEditPolicyDefinedConfigurations Write Boolean WorkProfilePasswordExpirationDays Write UInt32 WorkProfilePasswordMinimumLength Write UInt32 WorkProfilePasswordMinimumLetterCharacters Write UInt32 WorkProfilePasswordMinimumLowerCaseCharacters Write UInt32 WorkProfilePasswordMinimumNonLetterCharacters Write UInt32 WorkProfilePasswordMinimumNumericCharacters Write UInt32 WorkProfilePasswordMinimumSymbolCharacters Write UInt32 WorkProfilePasswordMinimumUpperCaseCharacters Write UInt32 WorkProfilePasswordPreviousPasswordCountToBlock Write UInt32 WorkProfilePasswordRequiredType Write String WorkProfilePasswordSignInFailureCountBeforeFactoryReset Write UInt32 Assignments Write InstanceArray[] DeviceSettingStateSummaries Write InstanceArray[] DeviceStatuses Write InstanceArray[] DeviceStatusOverview Write Instance GroupAssignments Write InstanceArray[] UserStatuses Write InstanceArray[] UserStatusOverview Write Instance Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceConfigurationPolicyAndroidDeviceOwner \u00b6 Description \u00b6 This resource configures the settings of Android WorkProfile Device policies in your cloud-based organization.","title":"IntuneDeviceConfigurationPolicyAndroidDeviceOwner"},{"location":"resources/intune/IntuneDeviceConfigurationPolicyAndroidOpenSourceProject/","text":"IntuneDeviceConfigurationPolicyAndroidOpenSourceProject \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. AppsBlockInstallFromUnknownSources Write Boolean Prevent applications from unknown sources. BluetoothBlockConfiguration Write Boolean Prevent bluetooth configuration. BluetoothBlocked Write Boolean Prevents using Bluetooth on devices. CameraBlocked Write Boolean Prevents access to the device camera. FactoryResetBlocked Write Boolean Prevent factory reset. PasswordMinimumLength Write UInt32 Minimum number of characters required for the password. PasswordMinutesOfInactivityBeforeScreenTimeout Write UInt32 Maximum minutes of inactivity until screen locks. PasswordRequiredType Write String Set password complexity. deviceDefault, required, numeric, numericComplex, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, customPassword PasswordSignInFailureCountBeforeFactoryReset Write UInt32 Number of sign-in failures before wiping device. ScreenCaptureBlocked Write Boolean Prevent screen capture. SecurityAllowDebuggingFeatures Write Boolean Enable debugging features. StorageBlockExternalMedia Write Boolean Prevent external media. StorageBlockUsbFileTransfer Write Boolean Prevent USB file transfer. WifiBlockEditConfigurations Write Boolean Prevent Wifi configuration edit. Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceConfigurationPolicyAndroidOpenSourceProject \u00b6 Description \u00b6 This resource configures an Intune device configuration profile for an Android Open Source Project Device.","title":"IntuneDeviceConfigurationPolicyAndroidOpenSourceProject"},{"location":"resources/intune/IntuneDeviceConfigurationPolicyAndroidWorkProfile/","text":"IntuneDeviceConfigurationPolicyAndroidWorkProfile \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) DisplayName Key String Display name of the device general configuration policy for Android WorkProfile. Description Write String Description of the device general configuration policy for Android WorkProfile Assignments Write InstanceArray[] Assignments of the Intune Policy. PasswordBlockFaceUnlock Write Boolean Indicates whether or not to block face unlock. PasswordBlockFingerprintUnlock Write Boolean Indicates whether or not to block fingerprint unlock PasswordBlockIrisUnlock Write Boolean Indicates whether or not to block iris unlock. passwordBlockTrustAgents Write Boolean Indicates whether or not to block Smart Lock and other trust agents. PasswordExpirationDays Write UInt32 Number of days before the password expires PasswordMinimumLength Write UInt32 Minimum length of passwords PasswordMinutesOfInactivityBeforeScreenTimeout Write UInt32 Minutes of inactivity before the screen times out PasswordPreviousPasswordBlockCount Write UInt32 Number of previous passwords to block PasswordSignInFailureCountBeforeFactoryReset Write UInt32 Number of sign in failures allowed before factory reset PasswordRequiredType Write String Type of password that is required deviceDefault, lowSecurityBiometric, required, atLeastNumeric, numericComplex, atLeastAlphabetic, atLeastAlphanumeric, alphanumericWithSymbols RequiredPasswordComplexity Write String Indicates the required device password complexity on Android. One of: NONE, LOW, MEDIUM, HIGH. none, low, medium, high WorkProfileAllowAppInstallsFromUnknownSources Write Boolean Indicates whether to allow installation of apps from unknown sources. WorkProfileDataSharingType Write String Type of data sharing that is allowed deviceDefault, preventAny, allowPersonalToWork, noRestrictions WorkProfileBlockNotificationsWhileDeviceLocked Write Boolean Indicates whether or not to block notifications while device locked WorkProfileBlockAddingAccounts Write Boolean Block users from adding/removing accounts in work profile WorkProfileBluetoothEnableContactSharing Write Boolean Allow bluetooth devices to access enterprise contacts WorkProfileBlockScreenCapture Write Boolean Block screen capture in work profile WorkProfileBlockCrossProfileCallerId Write Boolean Block display work profile caller ID in personal profile WorkProfileBlockCamera Write Boolean Block work profile camera WorkProfileBlockCrossProfileContactsSearch Write Boolean Block work profile contacts availability in personal profile WorkProfileBlockCrossProfileCopyPaste Write Boolean Boolean that indicates if the setting disallow cross profile copy paste is enabled WorkProfileDefaultAppPermissionPolicy Write String Type of password that is required deviceDefault, prompt, autoGrant, autoDeny WorkProfilePasswordBlockFaceUnlock Write Boolean Indicates whether or not to block face unlock in work profile. WorkProfilePasswordBlockFingerprintUnlock Write Boolean Indicates whether or not to block fingerprint unlock in work profile WorkProfilePasswordBlockIrisUnlock Write Boolean Indicates whether or not to block iris unlock in work profile. WorkProfilePasswordBlockTrustAgents Write Boolean Indicates whether or not to block Smart Lock and other trust agents for work profile WorkProfilePasswordExpirationDays Write UInt32 Number of days before the work profile password expires WorkProfilePasswordMinimumLength Write UInt32 Minimum length of work profile password WorkProfilePasswordMinNumericCharacters Write UInt32 Minimum count of numeric characters required in work profile password WorkProfilePasswordMinNonLetterCharacters Write UInt32 Minimum count of non-letter characters required in work profile password WorkProfilePasswordMinLetterCharacters Write UInt32 Minimum count of letter characters required in work profile password WorkProfilePasswordMinLowerCaseCharacters Write UInt32 Minimum count of lower-case characters required in work profile password WorkProfilePasswordMinUpperCaseCharacters Write UInt32 Minimum count of upper-case characters required in work profile password WorkProfilePasswordMinSymbolCharacters Write UInt32 Minimum count of symbols required in work profile password WorkProfilePasswordMinutesOfInactivityBeforeScreenTimeout Write UInt32 Minutes of inactivity before the screen times out WorkProfilePasswordPreviousPasswordBlockCount Write UInt32 Number of previous work profile passwords to block WorkProfilePasswordSignInFailureCountBeforeFactoryReset Write UInt32 Number of sign in failures allowed before work profile is removed and all corporate data deleted WorkProfilePasswordRequiredType Write String Type of work profile password that is required deviceDefault, lowSecurityBiometric, required, atLeastNumeric, numericComplex, atLeastAlphabetic, atLeastAlphanumeric, alphanumericWithSymbols WorkProfileRequiredPasswordComplexity Write String Indicates the required device password complexity on Android. One of: NONE, LOW, MEDIUM, HIGH in work profile. none, low, medium, high WorkProfileRequirePassword Write Boolean Password is required or not for work profile SecurityRequireVerifyApps Write Boolean Require the Android Verify apps feature is turned on VpnAlwaysOnPackageIdentifier Write String Package identifier for always-on VPN. VpnEnableAlwaysOnLockdownMode Write Boolean Enable lockdown mode for always-on VPN. WorkProfileAllowWidgets Write Boolean Allow widgets from work profile apps. WorkProfileBlockPersonalAppInstallsFromUnknownSources Write Boolean Prevent app installations from unknown sources in the personal profile. Ensure Write String Present ensures the site collection exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceConfigurationPolicyAndroidWorkProfile \u00b6 Description \u00b6 This resource configures an Intune device configuration profile for an Android WorkProfile Device. Examples \u00b6 Example 1 \u00b6 This example creates a new General Device Configuration Policy for Android WorkProfile . Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceConfigurationPolicyAndroidWorkProfile 97ed22e9 - 1429 - 40dc-ab3c - 0055e538383b { DisplayName = \"Android Work Profile - Device Restrictions - Standard\" ; Ensure = \"Present\" ; Credential = $Credsglobaladmin ; PasswordBlockFingerprintUnlock = $False ; PasswordBlockTrustAgents = $False ; PasswordMinimumLength = 6 ; PasswordMinutesOfInactivityBeforeScreenTimeout = 15 ; PasswordRequiredType = \"atLeastNumeric\" ; SecurityRequireVerifyApps = $True ; WorkProfileBlockAddingAccounts = $True ; WorkProfileBlockCamera = $False ; WorkProfileBlockCrossProfileCallerId = $False ; WorkProfileBlockCrossProfileContactsSearch = $False ; WorkProfileBlockCrossProfileCopyPaste = $True ; WorkProfileBlockNotificationsWhileDeviceLocked = $True ; WorkProfileBlockScreenCapture = $True ; WorkProfileBluetoothEnableContactSharing = $False ; WorkProfileDataSharingType = \"allowPersonalToWork\" ; WorkProfileDefaultAppPermissionPolicy = \"deviceDefault\" ; WorkProfilePasswordBlockFingerprintUnlock = $False ; WorkProfilePasswordBlockTrustAgents = $False ; WorkProfilePasswordRequiredType = \"deviceDefault\" ; WorkProfileRequirePassword = $False ; } } }","title":"IntuneDeviceConfigurationPolicyAndroidWorkProfile"},{"location":"resources/intune/IntuneDeviceConfigurationPolicyMacOS/","text":"IntuneDeviceConfigurationPolicyMacOS \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) odataType Write String #microsoft.graph.appleAppListItem appId Write String appStoreUrl Write String name Write String publisher Write String accessibility Write String notConfigured, enabled, disabled addressBook Write String Blocks iCloud from syncing contacts. notConfigured, enabled, disabled appleEventsAllowedReceivers Write InstanceArray[] blockCamera Write Boolean blockListenEvent Write Boolean blockMicrophone Write Boolean blockScreenCapture Write Boolean calendar Write String Blocks iCloud from syncing calendars. notConfigured, enabled, disabled codeRequirement Write String displayName Write String fileProviderPresence Write String notConfigured, enabled, disabled identifier Write String identifierType Write String bundleID, path mediaLibrary Write String notConfigured, enabled, disabled photos Write String notConfigured, enabled, disabled postEvent Write String notConfigured, enabled, disabled reminders Write String Blocks iCloud from syncing reminders. notConfigured, enabled, disabled speechRecognition Write String notConfigured, enabled, disabled staticCodeValidation Write Boolean systemPolicyAllFiles Write String notConfigured, enabled, disabled systemPolicyDesktopFolder Write String notConfigured, enabled, disabled systemPolicyDocumentsFolder Write String notConfigured, enabled, disabled systemPolicyDownloadsFolder Write String notConfigured, enabled, disabled systemPolicyNetworkVolumes Write String notConfigured, enabled, disabled systemPolicyRemovableVolumes Write String notConfigured, enabled, disabled systemPolicySystemAdminFiles Write String notConfigured, enabled, disabled allowed Write Boolean codeRequirement Write String identifier Write String identifierType Write String bundleID, path Id Write String Description Write String DisplayName Write String AddingGameCenterFriendsBlocked Write Boolean AirDropBlocked Write Boolean AppleWatchBlockAutoUnlock Write Boolean Blocks users from unlocking their Mac with Apple Watch. CameraBlocked Write Boolean Blocks users from taking photographs and videos. ClassroomAppBlockRemoteScreenObservation Write Boolean Blocks AirPlay, screen sharing to other devices, and a Classroom app feature used by teachers to view their students' screens. This setting isn't available if you've blocked screenshots. ClassroomAppForceUnpromptedScreenObservation Write Boolean Unprompted observation means that teachers can view screens without warning students first. This setting isn't available if you've blocked screenshots. ClassroomForceAutomaticallyJoinClasses Write Boolean Students can join a class without prompting the teacher. ClassroomForceRequestPermissionToLeaveClasses Write Boolean Students enrolled in an unmanaged Classroom course must get teacher consent to leave the course. ClassroomForceUnpromptedAppAndDeviceLock Write Boolean Teachers can lock a student's device or app without the student's approval. CompliantAppListType Write String Device compliance can be viewed in the Restricted Apps Compliance report. none, appsInListCompliant, appsNotInListCompliant CompliantAppsList Write InstanceArray[] ContentCachingBlocked Write Boolean DefinitionLookupBlocked Write Boolean Block look up, a feature that looks up the definition of a highlighted word. EmailInDomainSuffixes Write StringArray[] Emails that the user sends or receives which don't match the domains you specify here will be marked as untrusted. EraseContentAndSettingsBlocked Write Boolean GameCenterBlocked Write Boolean ICloudBlockActivityContinuation Write Boolean Handoff lets users start work on one MacOS device, and continue it on another MacOS or iOS device. Available for macOS 10.15 and later. ICloudBlockAddressBook Write Boolean Blocks iCloud from syncing contacts. ICloudBlockBookmarks Write Boolean Blocks iCloud from syncing bookmarks. ICloudBlockCalendar Write Boolean Blocks iCloud from syncing calendars. ICloudBlockDocumentSync Write Boolean Blocks iCloud from syncing documents and data. ICloudBlockMail Write Boolean Blocks iCloud from syncing mail. ICloudBlockNotes Write Boolean Blocks iCloud from syncing notes. ICloudBlockPhotoLibrary Write Boolean Any photos not fully downloaded from iCloud Photo Library to device will be removed from local storage. ICloudBlockReminders Write Boolean Blocks iCloud from syncing reminders. ICloudDesktopAndDocumentsBlocked Write Boolean ICloudPrivateRelayBlocked Write Boolean ITunesBlockFileSharing Write Boolean Blocks files from being transferred using iTunes. ITunesBlockMusicService Write Boolean KeyboardBlockDictation Write Boolean Block dictation, which is a feature that converts the user's voice to text. KeychainBlockCloudSync Write Boolean Disables syncing credentials stored in the Keychain to iCloud MultiplayerGamingBlocked Write Boolean PasswordBlockAirDropSharing Write Boolean PasswordBlockAutoFill Write Boolean PasswordBlockFingerprintUnlock Write Boolean Requires user to set a non-biometric passcode or password to unlock the device. PasswordBlockModification Write Boolean Blocks user from changing the set passcode. PasswordBlockProximityRequests Write Boolean PasswordBlockSimple Write Boolean Block simple password sequences, such as 1234 or 1111. PasswordExpirationDays Write UInt32 Number of days until device password must be changed. (1-65535) PasswordMaximumAttemptCount Write UInt32 PasswordMinimumCharacterSetCount Write UInt32 Minimum number (0-4) of non-alphanumeric characters, such as #, %, !, etc., required in the password. The default value is 0. PasswordMinimumLength Write UInt32 Minimum number of digits or characters in password (4-16). PasswordMinutesOfInactivityBeforeLock Write UInt32 Set to 0 to require a password immediately. There is no maximum number of minutes, and this number overrides the number currently set on the device. PasswordMinutesOfInactivityBeforeScreenTimeout Write UInt32 Set to 0 to use the device's minimum possible value. This number (0-60 minutes) overrides the number currently set on the device. PasswordMinutesUntilFailedLoginReset Write UInt32 PasswordPreviousPasswordBlockCount Write UInt32 Number of new passwords that must be used until an old one can be reused. (1-24) PasswordRequired Write Boolean Specify the type of password required. PasswordRequiredType Write String Specify the type of password required. deviceDefault, alphanumeric, numeric PrivacyAccessControls Write InstanceArray[] Configure an app's access to specific data, folders, and apps on a device. These settings apply to devices running macOS Mojave 10.14 and later. SafariBlockAutofill Write Boolean Blocks Safari from remembering what users enter in web forms. ScreenCaptureBlocked Write Boolean SoftwareUpdateMajorOSDeferredInstallDelayInDays Write UInt32 SoftwareUpdateMinorOSDeferredInstallDelayInDays Write UInt32 SoftwareUpdateNonOSDeferredInstallDelayInDays Write UInt32 SoftwareUpdatesEnforcedDelayInDays Write UInt32 Delay the user's software update for this many days. The maximum is 90 days. (1-90) SpotlightBlockInternetResults Write Boolean Blocks Spotlight from returning any results from an Internet search TouchIdTimeoutInHours Write UInt32 UpdateDelayPolicy Write String none, delayOSUpdateVisibility, delayAppUpdateVisibility, unknownFutureValue, delayMajorOsUpdateVisibility WallpaperModificationBlocked Write Boolean Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceConfigurationPolicyMacOS \u00b6 Description \u00b6 This resource configures an Intune device configuration profile for an MacOS Device.","title":"IntuneDeviceConfigurationPolicyMacOS"},{"location":"resources/intune/IntuneDeviceConfigurationPolicyWindows10/","text":"IntuneDeviceConfigurationPolicyWindows10 \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) LowSeverity Write String Specifies the action to take when a low severity malware is detected. deviceDefault, clean, quarantine, remove, allow, userDefined, block ModerateSeverity Write String Specifies the action to take when a moderate severity malware is detected. deviceDefault, clean, quarantine, remove, allow, userDefined, block HighSeverity Write String Specifies the action to take when a high severity malware is detected. deviceDefault, clean, quarantine, remove, allow, userDefined, block SevereSeverity Write String Specifies the action to take when a severe malware is detected. deviceDefault, clean, quarantine, remove, allow, userDefined, block DisplayName Key String Description of the device configuration policy for Windows 10. Description Write String Display name of the device configuration policy for Windows 10. Assignments Write InstanceArray[] Represents the assignment to the Intune policy. EnterpriseCloudPrintDiscoveryEndPoint Write String Endpoint for discovering cloud printers. EnterpriseCloudPrintOAuthAuthority Write String Authentication endpoint for acquiring OAuth tokens. EnterpriseCloudPrintOAuthClientIdentifier Write String GUID of a client application authorized to retrieve OAuth tokens from the OAuth Authority. EnterpriseCloudPrintResourceIdentifier Write String OAuth resource URI for print service as configured in the Azure portal. EnterpriseCloudPrintDiscoveryMaxLimit Write UInt64 Maximum number of printers that should be queried from a discovery endpoint. This is a mobile only setting. Valid values 1 to 65535 EnterpriseCloudPrintMopriaDiscoveryResourceIdentifier Write String OAuth resource URI for printer discovery service as configured in Azure portal. SearchBlockDiacritics Write Boolean Specifies if search can use diacritics. SearchDisableAutoLanguageDetection Write Boolean Specifies whether to use automatic language detection when indexing content and properties. SearchDisableIndexingEncryptedItems Write Boolean Indicates whether or not to block indexing of WIP-protected items to prevent them from appearing in search results for Cortana or Explorer. SearchEnableRemoteQueries Write Boolean Indicates whether or not to block remote queries of this computer's index. SearchDisableIndexerBackoff Write Boolean Indicates whether or not to disable the search indexer backoff feature. SearchDisableIndexingRemovableDrive Write Boolean Indicates whether or not to allow users to add locations on removable drives to libraries and to be indexed. SearchEnableAutomaticIndexSizeManangement Write Boolean Specifies minimum amount of hard drive space on the same drive as the index location before indexing stops. DiagnosticsDataSubmissionMode Write String Gets or sets a value allowing the device to send diagnostic and usage telemetry data, such as Watson. Possible values are: userDefined, none, basic, enhanced, full. OneDriveDisableFileSync Write Boolean Gets or sets a value allowing IT admins to prevent apps and features from working with files on OneDrive. SmartScreenEnableAppInstallControl Write Boolean This property will be deprecated in July 2019 and will be replaced by property SmartScreenAppInstallControl. Allows IT Admins to control whether users are allowed to install apps from places other than the Store. PersonalizationDesktopImageUrl Write String A http or https Url to a jpg, jpeg or png image that needs to be downloaded and used as the Desktop Image or a file Url to a local image on the file system that needs to used as the Desktop Image. PersonalizationLockScreenImageUrl Write String A http or https Url to a jpg, jpeg or png image that neeeds to be downloaded and used as the Lock Screen Image or a file Url to a local image on the file system that needs to be used as the Lock Screen Image. BluetoothAllowedServices Write StringArray[] Specify a list of allowed Bluetooth services and profiles in hex formatted strings. BluetoothBlockAdvertising Write Boolean Whether or not to Block the user from using bluetooth advertising. BluetoothBlockDiscoverableMode Write Boolean Whether or not to Block the user from using bluetooth discoverable mode. BluetoothBlockPrePairing Write Boolean Whether or not to block specific bundled Bluetooth peripherals to automatically pair with the host device. EdgeBlockAutofill Write Boolean Indicates whether or not to block auto fill. EdgeBlocked Write Boolean Indicates whether or not to Block the user from using the Edge browser. EdgeCookiePolicy Write String Indicates which cookies to block in the Edge browser. Possible values are: userDefined, allow, blockThirdParty, blockAll. EdgeBlockDeveloperTools Write Boolean Indicates whether or not to block developer tools in the Edge browser. EdgeBlockSendingDoNotTrackHeader Write Boolean Indicates whether or not to Block the user from sending the do not track header. EdgeBlockExtensions Write Boolean Indicates whether or not to block extensions in the Edge browser. EdgeBlockInPrivateBrowsing Write Boolean Indicates whether or not to block InPrivate browsing on corporate networks, in the Edge browser. EdgeBlockJavaScript Write Boolean Indicates whether or not to Block the user from using JavaScript. EdgeBlockPasswordManager Write Boolean Indicates whether or not to Block password manager. EdgeBlockAddressBarDropdown Write Boolean Block the address bar dropdown functionality in Microsoft Edge. Disable this settings to minimize network connections from Microsoft Edge to Microsoft services. EdgeBlockCompatibilityList Write Boolean Block Microsoft compatibility list in Microsoft Edge. This list from Microsoft helps Edge properly display sites with known compatibility issues. EdgeClearBrowsingDataOnExit Write Boolean Clear browsing data on exiting Microsoft Edge. EdgeAllowStartPagesModification Write Boolean Allow users to change Start pages on Edge. Use the EdgeHomepageUrls to specify the Start pages that the user would see by default when they open Edge. EdgeDisableFirstRunPage Write Boolean Block the Microsoft web page that opens on the first use of Microsoft Edge. This policy allows enterprises, like those enrolled in zero emissions configurations, to block this page. EdgeBlockLiveTileDataCollection Write Boolean Block the collection of information by Microsoft for live tile creation when users pin a site to Start from Microsoft Edge. EdgeSyncFavoritesWithInternetExplorer Write Boolean Enable favorites sync between Internet Explorer and Microsoft Edge. Additions, deletions, modifications and order changes to favorites are shared between browsers. CellularBlockDataWhenRoaming Write Boolean Whether or not to Block the user from using data over cellular while roaming. CellularBlockVpn Write Boolean Whether or not to Block the user from using VPN over cellular. CellularBlockVpnWhenRoaming Write Boolean Whether or not to Block the user from using VPN when roaming over cellular. DefenderRequireRealTimeMonitoring Write Boolean Indicates whether or not to require real time monitoring. DefenderRequireBehaviorMonitoring Write Boolean Indicates whether or not to require behavior monitoring. DefenderRequireNetworkInspectionSystem Write Boolean Indicates whether or not to require network inspection system. DefenderScanDownloads Write Boolean Indicates whether or not to scan downloads. DefenderScanScriptsLoadedInInternetExplorer Write Boolean Indicates whether or not to scan scripts loaded in Internet Explorer browser. DefenderBlockEndUserAccess Write Boolean Whether or not to block end user access to Defender. DefenderSignatureUpdateIntervalInHours Write UInt64 The signature update interval in hours. Specify 0 not to check. Valid values 0 to 24 DefenderMonitorFileActivity Write String Value for monitoring file activity. Possible values are: userDefined, disable, monitorAllFiles, monitorIncomingFilesOnly, monitorOutgoingFilesOnly. DefenderDaysBeforeDeletingQuarantinedMalware Write UInt64 Number of days before deleting quarantined malware. Valid values 0 to 90 DefenderScanMaxCpu Write UInt64 Max CPU usage percentage during scan. Valid values 0 to 100 DefenderScanArchiveFiles Write Boolean Indicates whether or not to scan archive files. DefenderScanIncomingMail Write Boolean Indicates whether or not to scan incoming mail messages. DefenderScanRemovableDrivesDuringFullScan Write Boolean Indicates whether or not to scan removable drives during full scan. DefenderScanMappedNetworkDrivesDuringFullScan Write Boolean Indicates whether or not to scan mapped network drives during full scan. DefenderScanNetworkFiles Write Boolean Indicates whether or not to scan files opened from a network folder. DefenderRequireCloudProtection Write Boolean Indicates whether or not to require cloud protection. DefenderCloudBlockLevel Write String Specifies the level of cloud-delivered protection. Possible values are: notConfigured, high, highPlus, zeroTolerance. DefenderPromptForSampleSubmission Write String The configuration for how to prompt user for sample submission. Possible values are: userDefined, alwaysPrompt, promptBeforeSendingPersonalData, neverSendData, sendAllDataWithoutPrompting. DefenderScheduledQuickScanTime Write String The time to perform a daily quick scan. DefenderScanType Write String The defender system scan type. Possible values are: userDefined, disabled, quick, full. DefenderSystemScanSchedule Write String Defender day of the week for the system scan. Possible values are: userDefined, everyday, sunday, monday, tuesday, wednesday, thursday, friday, saturday. DefenderScheduledScanTime Write String The defender time for the system scan. DefenderDetectedMalwareActions Write Instance Gets or sets Defender\u0092s actions to take on detected Malware per threat level. DefenderFileExtensionsToExclude Write StringArray[] File extensions to exclude from scans and real time protection. DefenderFilesAndFoldersToExclude Write StringArray[] Files and folder to exclude from scans and real time protection. DefenderProcessesToExclude Write StringArray[] Processes to exclude from scans and real time protection. LockScreenAllowTimeoutConfiguration Write Boolean Specify whether to show a user-configurable setting to control the screen timeout while on the lock screen of Windows 10 Mobile devices. If this policy is set to Allow, the value set by lockScreenTimeoutInSeconds is ignored. LockScreenBlockActionCenterNotifications Write Boolean Indicates whether or not to block action center notifications over lock screen. LockScreenBlockCortana Write Boolean Indicates whether or not the user can interact with Cortana using speech while the system is locked. LockScreenBlockToastNotifications Write Boolean Indicates whether to allow toast notifications above the device lock screen. LockScreenTimeoutInSeconds Write UInt64 Set the duration (in seconds) from the screen locking to the screen turning off for Windows 10 Mobile devices. Supported values are 11-1800. Valid values 11 to 1800 PasswordBlockSimple Write Boolean Specify whether PINs or passwords such as '1111' or '1234' are allowed. For Windows 10 desktops, it also controls the use of picture passwords. PasswordExpirationDays Write UInt64 The password expiration in days. Valid values 0 to 730 PasswordMinimumLength Write UInt64 The minimum password length. Valid values 4 to 16 PasswordMinutesOfInactivityBeforeScreenTimeout Write UInt64 The minutes of inactivity before the screen times out. PasswordMinimumCharacterSetCount Write UInt64 The number of character sets required in the password. PasswordPreviousPasswordBlockCount Write UInt64 The number of previous passwords to prevent reuse of. Valid values 0 to 50 PasswordRequired Write Boolean Indicates whether or not to require the user to have a password. PasswordRequireWhenResumeFromIdleState Write Boolean Indicates whether or not to require a password upon resuming from an idle state. PasswordRequiredType Write String The required password type. Possible values are: deviceDefault, alphanumeric, numeric. PasswordSignInFailureCountBeforeFactoryReset Write UInt64 The number of sign in failures before factory reset. Valid values 0 to 999 PrivacyAdvertisingId Write String Enables or disables the use of advertising ID. Added in Windows 10, version 1607. Possible values are: notConfigured, blocked, allowed. PrivacyAutoAcceptPairingAndConsentPrompts Write Boolean Indicates whether or not to allow the automatic acceptance of the pairing and privacy user consent dialog when launching apps. PrivacyBlockInputPersonalization Write Boolean Indicates whether or not to block the usage of cloud based speech services for Cortana, Dictation, or Store applications. StartBlockUnpinningAppsFromTaskbar Write Boolean Indicates whether or not to block the user from unpinning apps from taskbar. StartMenuAppListVisibility Write String Setting the value of this collapses the app list, removes the app list entirely, or disables the corresponding toggle in the Settings app. Possible values are: userDefined, collapse, remove, disableSettingsApp. StartMenuHideChangeAccountSettings Write Boolean Enabling this policy hides the change account setting from appearing in the user tile in the start menu. StartMenuHideFrequentlyUsedApps Write Boolean Enabling this policy hides the most used apps from appearing on the start menu and disables the corresponding toggle in the Settings app. StartMenuHideHibernate Write Boolean Enabling this policy hides hibernate from appearing in the power button in the start menu. StartMenuHideLock Write Boolean Enabling this policy hides lock from appearing in the user tile in the start menu. StartMenuHidePowerButton Write Boolean Enabling this policy hides the power button from appearing in the start menu. StartMenuHideRecentJumpLists Write Boolean Enabling this policy hides recent jump lists from appearing on the start menu/taskbar and disables the corresponding toggle in the Settings app. StartMenuHideRecentlyAddedApps Write Boolean Enabling this policy hides recently added apps from appearing on the start menu and disables the corresponding toggle in the Settings app. StartMenuHideRestartOptions Write Boolean Enabling this policy hides 'Restart/Update and Restart' from appearing in the power button in the start menu. StartMenuHideShutDown Write Boolean Enabling this policy hides shut down/update and shut down from appearing in the power button in the start menu. StartMenuHideSignOut Write Boolean Enabling this policy hides sign out from appearing in the user tile in the start menu. StartMenuHideSleep Write Boolean Enabling this policy hides sleep from appearing in the power button in the start menu. StartMenuHideSwitchAccount Write Boolean Enabling this policy hides switch account from appearing in the user tile in the start menu. StartMenuHideUserTile Write Boolean Enabling this policy hides the user tile from appearing in the start menu. StartMenuLayoutEdgeAssetsXml Write String This policy setting allows you to import Edge assets to be used with startMenuLayoutXml policy. Start layout can contain secondary tile from Edge app which looks for Edge local asset file. Edge local asset would not exist and cause Edge secondary tile to appear empty in this case. This policy only gets applied when startMenuLayoutXml policy is modified. The value should be a UTF-8 Base64 encoded byte array. StartMenuLayoutXml Write String Allows admins to override the default Start menu layout and prevents the user from changing it. The layout is modified by specifying an XML file based on a layout modification schema. XML needs to be in a UTF8 encoded byte array format. StartMenuMode Write String Allows admins to decide how the Start menu is displayed. Possible values are: userDefined, fullScreen, nonFullScreen. StartMenuPinnedFolderDocuments Write String Enforces the visibility (Show/Hide) of the Documents folder shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderDownloads Write String Enforces the visibility (Show/Hide) of the Downloads folder shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderFileExplorer Write String Enforces the visibility (Show/Hide) of the FileExplorer shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderHomeGroup Write String Enforces the visibility (Show/Hide) of the HomeGroup folder shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderMusic Write String Enforces the visibility (Show/Hide) of the Music folder shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderNetwork Write String Enforces the visibility (Show/Hide) of the Network folder shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderPersonalFolder Write String Enforces the visibility (Show/Hide) of the PersonalFolder shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderPictures Write String Enforces the visibility (Show/Hide) of the Pictures folder shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderSettings Write String Enforces the visibility (Show/Hide) of the Settings folder shortcut on the Start menu. Possible values are: notConfigured, hide, show. StartMenuPinnedFolderVideos Write String Enforces the visibility (Show/Hide) of the Videos folder shortcut on the Start menu. Possible values are: notConfigured, hide, show. SettingsBlockSettingsApp Write Boolean Indicates whether or not to block access to Settings app. SettingsBlockSystemPage Write Boolean Indicates whether or not to block access to System in Settings app. SettingsBlockDevicesPage Write Boolean Indicates whether or not to block access to Devices in Settings app. SettingsBlockNetworkInternetPage Write Boolean Indicates whether or not to block access to Network & Internet in Settings app. SettingsBlockPersonalizationPage Write Boolean Indicates whether or not to block access to Personalization in Settings app. SettingsBlockAccountsPage Write Boolean Indicates whether or not to block access to Accounts in Settings app. SettingsBlockTimeLanguagePage Write Boolean Indicates whether or not to block access to Time & Language in Settings app. SettingsBlockEaseOfAccessPage Write Boolean Indicates whether or not to block access to Ease of Access in Settings app. SettingsBlockPrivacyPage Write Boolean Indicates whether or not to block access to Privacy in Settings app. SettingsBlockUpdateSecurityPage Write Boolean Indicates whether or not to block access to Update & Security in Settings app. SettingsBlockAppsPage Write Boolean Indicates whether or not to block access to Apps in Settings app. SettingsBlockGamingPage Write Boolean Indicates whether or not to block access to Gaming in Settings app. WindowsSpotlightBlockConsumerSpecificFeatures Write Boolean Allows IT admins to block experiences that are typically for consumers only, such as Start suggestions, Membership notifications, Post-OOBE app install and redirect tiles. WindowsSpotlightBlocked Write Boolean Allows IT admins to turn off all Windows Spotlight features WindowsSpotlightBlockOnActionCenter Write Boolean Block suggestions from Microsoft that show after each OS clean install, upgrade or in an on-going basis to introduce users to what is new or changed WindowsSpotlightBlockTailoredExperiences Write Boolean Block personalized content in Windows spotlight based on user\u0092s device usage. WindowsSpotlightBlockThirdPartyNotifications Write Boolean Block third party content delivered via Windows Spotlight WindowsSpotlightBlockWelcomeExperience Write Boolean Block Windows Spotlight Windows welcome experience WindowsSpotlightBlockWindowsTips Write Boolean Allows IT admins to turn off the popup of Windows Tips. WindowsSpotlightConfigureOnLockScreen Write String Specifies the type of Spotlight. Possible values are: notConfigured, disabled, enabled. NetworkProxyApplySettingsDeviceWide Write Boolean If set, proxy settings will be applied to all processes and accounts in the device. Otherwise, it will be applied to the user account that\u0092s enrolled into MDM. NetworkProxyDisableAutoDetect Write Boolean Disable automatic detection of settings. If enabled, the system will try to find the path to a proxy auto-config (PAC) script. NetworkProxyAutomaticConfigurationUrl Write String Address to the proxy auto-config (PAC) script you want to use. NetworkProxyServer Write StringArray[] Specifies manual proxy server settings. AccountsBlockAddingNonMicrosoftAccountEmail Write Boolean Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account. AntiTheftModeBlocked Write Boolean Indicates whether or not to block the user from selecting an AntiTheft mode preference (Windows 10 Mobile only). BluetoothBlocked Write Boolean Whether or not to Block the user from using bluetooth. CameraBlocked Write Boolean Whether or not to Block the user from accessing the camera of the device. ConnectedDevicesServiceBlocked Write Boolean Whether or not to block Connected Devices Service which enables discovery and connection to other devices, remote messaging, remote app sessions and other cross-device experiences. CertificatesBlockManualRootCertificateInstallation Write Boolean Whether or not to Block the user from doing manual root certificate installation. CopyPasteBlocked Write Boolean Whether or not to Block the user from using copy paste. CortanaBlocked Write Boolean Whether or not to Block the user from using Cortana. DeviceManagementBlockFactoryResetOnMobile Write Boolean Indicates whether or not to Block the user from resetting their phone. DeviceManagementBlockManualUnenroll Write Boolean Indicates whether or not to Block the user from doing manual un-enrollment from device management. SafeSearchFilter Write String Specifies what filter level of safe search is required. Possible values are: userDefined, strict, moderate. EdgeBlockPopups Write Boolean Indicates whether or not to block popups. EdgeBlockSearchSuggestions Write Boolean Indicates whether or not to block the user from using the search suggestions in the address bar. EdgeBlockSendingIntranetTrafficToInternetExplorer Write Boolean Indicates whether or not to switch the intranet traffic from Edge to Internet Explorer. Note: the name of this property is misleading; the property is obsolete, use EdgeSendIntranetTrafficToInternetExplorer instead. EdgeSendIntranetTrafficToInternetExplorer Write Boolean Indicates whether or not to switch the intranet traffic from Edge to Internet Explorer. EdgeRequireSmartScreen Write Boolean Indicates whether or not to Require the user to use the smart screen filter. EdgeEnterpriseModeSiteListLocation Write Boolean Indicates the enterprise mode site list location. Could be a local file, local network or http location. EdgeFirstRunUrl Write String The first run URL for when Edge browser is opened for the first time. EdgeSearchEngine Write String Allows IT admins to set a default search engine for MDM-Controlled devices. Users can override this and change their default search engine provided the AllowSearchEngineCustomization policy is not set. EdgeHomepageUrls Write StringArray[] The list of URLs for homepages shodwn on MDM-enrolled devices on Edge browser. EdgeBlockAccessToAboutFlags Write Boolean Indicates whether or not to prevent access to about flags on Edge browser. SmartScreenBlockPromptOverride Write Boolean Indicates whether or not users can override SmartScreen Filter warnings about potentially malicious websites. SmartScreenBlockPromptOverrideForFiles Write Boolean Indicates whether or not users can override the SmartScreen Filter warnings about downloading unverified files WebRtcBlockLocalhostIpAddress Write Boolean Indicates whether or not user's localhost IP address is displayed while making phone calls using the WebRTC InternetSharingBlocked Write Boolean Indicates whether or not to Block the user from using internet sharing. SettingsBlockAddProvisioningPackage Write Boolean Indicates whether or not to block the user from installing provisioning packages. SettingsBlockRemoveProvisioningPackage Write Boolean Indicates whether or not to block the runtime configuration agent from removing provisioning packages. SettingsBlockChangeSystemTime Write Boolean Indicates whether or not to block the user from changing date and time settings. SettingsBlockEditDeviceName Write Boolean Indicates whether or not to block the user from editing the device name. SettingsBlockChangeRegion Write Boolean Indicates whether or not to block the user from changing the region settings. SettingsBlockChangeLanguage Write Boolean Indicates whether or not to block the user from changing the language settings. SettingsBlockChangePowerSleep Write Boolean Indicates whether or not to block the user from changing power and sleep settings. LocationServicesBlocked Write Boolean Indicates whether or not to Block the user from location services. MicrosoftAccountBlocked Write Boolean Indicates whether or not to Block a Microsoft account. MicrosoftAccountBlockSettingsSync Write Boolean Indicates whether or not to Block Microsoft account settings sync. NfcBlocked Write Boolean Indicates whether or not to Block the user from using near field communication. ResetProtectionModeBlocked Write Boolean Indicates whether or not to Block the user from reset protection mode. ScreenCaptureBlocked Write Boolean Indicates whether or not to Block the user from taking Screenshots. StorageBlockRemovableStorage Write Boolean Indicates whether or not to Block the user from using removable storage. StorageRequireMobileDeviceEncryption Write Boolean Indicating whether or not to require encryption on a mobile device. UsbBlocked Write Boolean Indicates whether or not to Block the user from USB connection. VoiceRecordingBlocked Write Boolean Indicates whether or not to Block the user from voice recording. WiFiBlockAutomaticConnectHotspots Write Boolean Indicating whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked. WiFiBlocked Write Boolean Indicates whether or not to Block the user from using Wi-Fi. WiFiBlockManualConfiguration Write Boolean Indicates whether or not to Block the user from using Wi-Fi manual configuration. WiFiScanInterval Write UInt64 Specify how often devices scan for Wi-Fi networks. Supported values are 1-500, where 100 = default, and 500 = low frequency. Valid values 1 to 500 WirelessDisplayBlockProjectionToThisDevice Write Boolean Indicates whether or not to allow other devices from discovering this PC for projection. WirelessDisplayBlockUserInputFromReceiver Write Boolean Indicates whether or not to allow user input from wireless display receiver. WirelessDisplayRequirePinForPairing Write Boolean Indicates whether or not to require a PIN for new devices to initiate pairing. WindowsStoreBlocked Write Boolean Indicates whether or not to Block the user from using the Windows store. AppsAllowTrustedAppsSideloading Write String Indicates whether apps from AppX packages signed with a trusted certificate can be side loaded. Possible values are: notConfigured, blocked, allowed. WindowsStoreBlockAutoUpdate Write Boolean Indicates whether or not to block automatic update of apps from Windows Store. DeveloperUnlockSetting Write String Indicates whether or not to allow developer unlock. Possible values are: notConfigured, blocked, allowed. SharedUserAppDataAllowed Write Boolean Indicates whether or not to block multiple users of the same app to share data. AppsBlockWindowsStoreOriginatedApps Write Boolean Indicates whether or not to disable the launch of all apps from Windows Store that came pre-installed or were downloaded. WindowsStoreEnablePrivateStoreOnly Write Boolean Indicates whether or not to enable Private Store Only. StorageRestrictAppDataToSystemVolume Write Boolean Indicates whether application data is restricted to the system drive. StorageRestrictAppInstallToSystemVolume Write Boolean Indicates whether the installation of applications is restricted to the system drive. GameDvrBlocked Write Boolean Indicates whether or not to block DVR and broadcasting. ExperienceBlockDeviceDiscovery Write Boolean Indicates whether or not to enable device discovery UX. ExperienceBlockErrorDialogWhenNoSIM Write Boolean NIndicates whether or not to allow the error dialog from displaying if no SIM card is detected. ExperienceBlockTaskSwitcher Write Boolean Indicates whether or not to enable task switching on the device. LogonBlockFastUserSwitching Write Boolean Disables the ability to quickly switch between users that are logged on simultaneously without logging off. TenantLockdownRequireNetworkDuringOutOfBoxExperience Write Boolean Whether the device is required to connect to the network. Ensure Write String Present ensures the site collection exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceConfigurationPolicyWindows10 \u00b6 Description \u00b6 This resource configures an Intune device configuration profile for an Windows 10 Device. Examples \u00b6 Example 1 \u00b6 This example creates a new General Device Configuration Policy for Windows . Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceConfigurationPolicyWindows10 'ConfigureDeviceConfigurationPolicyWindows10' { displayName = \"CONTOSO | W10 | Device Restriction\" description = \"Default device restriction settings\" defenderBlockEndUserAccess = $true defenderRequireRealTimeMonitoring = $true defenderRequireBehaviorMonitoring = $true defenderRequireNetworkInspectionSystem = $true defenderScanDownloads = $true defenderScanScriptsLoadedInInternetExplorer = $true defenderSignatureUpdateIntervalInHours = 8 defenderMonitorFileActivity = 'monitorIncomingFilesOnly' # userDefined,monitorAllFiles,monitorIncomingFilesOnly,monitorOutgoingFilesOnly defenderDaysBeforeDeletingQuarantinedMalware = 3 defenderScanMaxCpu = 2 defenderScanArchiveFiles = $true defenderScanIncomingMail = $true defenderScanRemovableDrivesDuringFullScan = $true defenderScanMappedNetworkDrivesDuringFullScan = $false defenderScanNetworkFiles = $false defenderRequireCloudProtection = $true defenderCloudBlockLevel = 'high' defenderPromptForSampleSubmission = 'alwaysPrompt' defenderScheduledQuickScanTime = '13:00:00.0000000' defenderScanType = 'quick' #quick,full,userDefined defenderSystemScanSchedule = 'monday' #days of week defenderScheduledScanTime = '11:00:00.0000000' defenderDetectedMalwareActions = @( \"lowSeverity=clean\" , \"moderateSeverity=quarantine\" , \"highSeverity=remove\" , \"severeSeverity=block\" ) defenderFileExtensionsToExclude = \"[ `\" csv,jpg,docx `\" ]\" defenderFilesAndFoldersToExclude = \"[ `\" c:\\\\2,C:\\\\1 `\" ]\" defenderProcessesToExclude = \"[ `\" notepad.exe,c:\\\\Windows\\\\myprocess.exe `\" ]\" lockScreenAllowTimeoutConfiguration = $true lockScreenBlockActionCenterNotifications = $true lockScreenBlockCortana = $true lockScreenBlockToastNotifications = $false lockScreenTimeoutInSeconds = 90 passwordBlockSimple = $true passwordExpirationDays = 6 passwordMinimumLength = 5 passwordMinutesOfInactivityBeforeScreenTimeout = 15 passwordMinimumCharacterSetCount = 1 passwordPreviousPasswordBlockCount = 2 passwordRequired = $true passwordRequireWhenResumeFromIdleState = $true passwordRequiredType = \"alphanumeric\" passwordSignInFailureCountBeforeFactoryReset = 12 privacyAdvertisingId = \"blocked\" privacyAutoAcceptPairingAndConsentPrompts = $true privacyBlockInputPersonalization = $true startBlockUnpinningAppsFromTaskbar = $true startMenuAppListVisibility = \"collapse\" startMenuHideChangeAccountSettings = $true startMenuHideFrequentlyUsedApps = $true startMenuHideHibernate = $true startMenuHideLock = $true startMenuHidePowerButton = $true startMenuHideRecentJumpLists = $true startMenuHideRecentlyAddedApps = $true startMenuHideRestartOptions = $true startMenuHideShutDown = $true startMenuHideSignOut = $true startMenuHideSleep = $true startMenuHideSwitchAccount = $true startMenuHideUserTile = $true startMenuLayoutXml = \"+DQogICAGlmaWNhdGlvblRlbXBsYXRlPg==\" startMenuMode = \"fullScreen\" startMenuPinnedFolderDocuments = \"hide\" startMenuPinnedFolderDownloads = \"hide\" startMenuPinnedFolderFileExplorer = \"hide\" startMenuPinnedFolderHomeGroup = \"hide\" startMenuPinnedFolderMusic = \"hide\" startMenuPinnedFolderNetwork = \"hide\" startMenuPinnedFolderPersonalFolder = \"hide\" startMenuPinnedFolderPictures = \"hide\" startMenuPinnedFolderSettings = \"hide\" startMenuPinnedFolderVideos = \"hide\" settingsBlockSettingsApp = $true settingsBlockSystemPage = $true settingsBlockDevicesPage = $true settingsBlockNetworkInternetPage = $true settingsBlockPersonalizationPage = $true settingsBlockAccountsPage = $true settingsBlockTimeLanguagePage = $true settingsBlockEaseOfAccessPage = $true settingsBlockPrivacyPage = $true settingsBlockUpdateSecurityPage = $true settingsBlockAppsPage = $true settingsBlockGamingPage = $true windowsSpotlightBlockConsumerSpecificFeatures = $true windowsSpotlightBlocked = $true windowsSpotlightBlockOnActionCenter = $true windowsSpotlightBlockTailoredExperiences = $true windowsSpotlightBlockThirdPartyNotifications = $true windowsSpotlightBlockWelcomeExperience = $true windowsSpotlightBlockWindowsTips = $true windowsSpotlightConfigureOnLockScreen = \"disabled\" networkProxyApplySettingsDeviceWide = $true networkProxyDisableAutoDetect = $true networkProxyAutomaticConfigurationUrl = \"https://example.com/networkProxyAutomaticConfigurationUrl/\" accountsBlockAddingNonMicrosoftAccountEmail = $true antiTheftModeBlocked = $true bluetoothBlocked = $true bluetoothAllowedServices = \"[ `\" 8e473eaa-ead4-4c60-ba9c-2c5696d71492 `\" , `\" 21913f2d-a803-4f36-8039-669fd94ce5b3 `\" ]\" bluetoothBlockAdvertising = $true bluetoothBlockDiscoverableMode = $true bluetoothBlockPrePairing = $true cameraBlocked = $true connectedDevicesServiceBlocked = $true certificatesBlockManualRootCertificateInstallation = $true copyPasteBlocked = $true cortanaBlocked = $true deviceManagementBlockFactoryResetOnMobile = $true deviceManagementBlockManualUnenroll = $true safeSearchFilter = \"strict\" edgeBlockPopups = $true edgeBlockSearchSuggestions = $true edgeBlockSendingIntranetTrafficToInternetExplorer = $true edgeSendIntranetTrafficToInternetExplorer = $true edgeRequireSmartScreen = $true edgeFirstRunUrl = \"https://contoso.com/\" edgeBlockAccessToAboutFlags = $true edgeHomepageUrls = \"[ `\" https://microsoft.com `\" ]\" smartScreenBlockPromptOverride = $true smartScreenBlockPromptOverrideForFiles = $true webRtcBlockLocalhostIpAddress = $true internetSharingBlocked = $true settingsBlockAddProvisioningPackage = $true settingsBlockRemoveProvisioningPackage = $true settingsBlockChangeSystemTime = $true settingsBlockEditDeviceName = $true settingsBlockChangeRegion = $true settingsBlockChangeLanguage = $true settingsBlockChangePowerSleep = $true locationServicesBlocked = $true microsoftAccountBlocked = $true microsoftAccountBlockSettingsSync = $true nfcBlocked = $true resetProtectionModeBlocked = $true screenCaptureBlocked = $true storageBlockRemovableStorage = $true storageRequireMobileDeviceEncryption = $true usbBlocked = $true voiceRecordingBlocked = $true wiFiBlockAutomaticConnectHotspots = $true wiFiBlocked = $true wiFiBlockManualConfiguration = $true wiFiScanInterval = 1 wirelessDisplayBlockProjectionToThisDevice = $true wirelessDisplayBlockUserInputFromReceiver = $true wirelessDisplayRequirePinForPairing = $true windowsStoreBlocked = $true appsAllowTrustedAppsSideloading = \"blocked\" windowsStoreBlockAutoUpdate = $true developerUnlockSetting = \"blocked\" sharedUserAppDataAllowed = $true appsBlockWindowsStoreOriginatedApps = $true windowsStoreEnablePrivateStoreOnly = $true storageRestrictAppDataToSystemVolume = $true storageRestrictAppInstallToSystemVolume = $true gameDvrBlocked = $true edgeSearchEngine = \"bing\" #edgeSearchEngine = \"https://go.microsoft.com/fwlink/?linkid=842596\" #'Google' experienceBlockDeviceDiscovery = $true experienceBlockErrorDialogWhenNoSIM = $true experienceBlockTaskSwitcher = $true logonBlockFastUserSwitching = $true tenantLockdownRequireNetworkDuringOutOfBoxExperience = $true enterpriseCloudPrintDiscoveryEndPoint = \"https://cloudprinterdiscovery.contoso.com\" enterpriseCloudPrintDiscoveryMaxLimit = 4 enterpriseCloudPrintMopriaDiscoveryResourceIdentifier = \"http://mopriadiscoveryservice/cloudprint\" enterpriseCloudPrintOAuthClientIdentifier = \"30fbf7e8-321c-40ce-8b9f-160b6b049257\" enterpriseCloudPrintOAuthAuthority = \"https:/tenant.contoso.com/adfs\" enterpriseCloudPrintResourceIdentifier = \"http://cloudenterpriseprint/cloudPrint\" networkProxyServer = @( \"address=proxy.contoso.com:8080\" , \"exceptions=*.contoso.com `r`n *.internal.local\" , \"useForLocalAddresses=false\" ) Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceConfigurationPolicyWindows10"},{"location":"resources/intune/IntuneDeviceConfigurationPolicyiOS/","text":"IntuneDeviceConfigurationPolicyIOS \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) odataType Write String odatatype of the item. #microsoft.graph.appleAppListItem appId Write String Kiosk mode managed app id appStoreUrl Write String Define the app store URL. name Write String Define the name of the app. publisher Write String Define the publisher of the app. movieRating Write String Movies rating selected for Australia allAllowed, allBlocked, general, parentalGuidance, mature, agesAbove15, agesAbove18 tvRating Write String TV rating selected for Australia allAllowed, allBlocked, preschoolers, children, general, parentalGuidance, mature, agesAbove15, agesAbove15AdultViolence movieRating Write String Movies rating selected for Canada allAllowed, allBlocked, general, parentalGuidance, agesAbove14, agesAbove18, restricted tvRating Write String TV rating selected for Canada allAllowed, allBlocked, children, childrenAbove8, general, parentalGuidance, agesAbove14, agesAbove18 movieRating Write String Movies rating selected for France allAllowed, allBlocked, agesAbove10, agesAbove12, agesAbove16, agesAbove18 tvRating Write String TV rating selected for France allAllowed, allBlocked, agesAbove10, agesAbove12, agesAbove16, agesAbove18 movieRating Write String Movies rating selected for Germany allAllowed, allBlocked, general, agesAbove6, agesAbove12, agesAbove16, adults tvRating Write String TV rating selected for Germany allAllowed, allBlocked, general, agesAbove6, agesAbove12, agesAbove16, adults movieRating Write String Movies rating selected for Ireland allAllowed, allBlocked, general, parentalGuidance, agesAbove12, agesAbove15, agesAbove16, adults tvRating Write String TV rating selected for Ireland allAllowed, allBlocked, general, children, youngAdults, parentalSupervision, mature movieRating Write String Movies rating selected for Japan allAllowed, allBlocked, general, parentalGuidance, agesAbove15, agesAbove18 tvRating Write String TV rating selected for Japan allAllowed, allBlocked, explicitAllowed movieRating Write String Movies rating selected for New Zealand allAllowed, allBlocked, general, parentalGuidance, mature, agesAbove13, agesAbove15, agesAbove16, agesAbove18, restricted, agesAbove16Restricted tvRating Write String TV rating selected for New Zealand allAllowed, allBlocked, general, parentalGuidance, adults movieRating Write String Movies rating selected for UK allAllowed, allBlocked, general, universalChildren, parentalGuidance, agesAbove12Video, agesAbove12Cinema, agesAbove15, adults tvRating Write String TV rating selected for UK allAllowed, allBlocked, caution movieRating Write String Movies rating selected for USA allAllowed, allBlocked, general, parentalGuidance, parentalGuidance13, restricted, adults tvRating Write String TV rating selected for USA allAllowed, allBlocked, childrenAll, childrenAbove7, general, parentalGuidance, childrenAbove14, adults cellularDataBlocked Write Boolean If set to true, corresponding managed apps will not be allowed to use cellular data at any time. cellularDataBlockWhenRoaming Write Boolean If set to true, corresponding managed apps will not be allowed to use cellular data when roaming. managedApps Write InstanceArray[] Information about the managed apps that this rule is going to apply to. Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. AccountBlockModification Write Boolean Indicates whether or not to allow account modification when the device is in supervised mode. ActivationLockAllowWhenSupervised Write Boolean Activation Lock makes it harder for a lost or stolen device to be reactivated. AirDropBlocked Write Boolean Indicates whether or not to allow AirDrop when the device is in supervised mode. AirDropForceUnmanagedDropTarget Write Boolean Force AirDrop to be considered an unmanaged drop target. AirPlayForcePairingPasswordForOutgoingRequests Write Boolean Force requiring a pairing password for outgoing AirPlay requests. AirPrintBlockCredentialsStorage Write Boolean Blocks keychain storage of username and password for outgoing AirPrint request. AirPrintBlocked Write Boolean Blocks AirPrint request. AirPrintBlockiBeaconDiscovery Write Boolean Blocking prevents malicious AirPrint Bluetooth beacons phishing for network traffic. AirPrintForceTrustedTLS Write Boolean Forces trusted certificates for TLS printing communication AppClipsBlocked Write Boolean Block app clips. AppleNewsBlocked Write Boolean Block Apple News ApplePersonalizedAdsBlocked Write Boolean Block Apple PersonalizedAdsBlocked AppleWatchBlockPairing Write Boolean Indicates whether or not to allow Apple Watch pairing when the device is in supervised mode (iOS 9.0 and later). AppleWatchForceWristDetection Write Boolean Force paired Apple watch to use wrist detection. AppRemovalBlocked Write Boolean Block app removal. AppsSingleAppModeList Write InstanceArray[] Apps you add to this list and assign to a device can lock the device to run only that app once launched, or lock the device while a certain action is running (for example, taking a test). Once the action is complete, or you remove the restriction, the device returns to its normal state. AppStoreBlockAutomaticDownloads Write Boolean Blocks automatic downloading of apps purchased on other devices. Does not affect updates to existing apps. AppStoreBlocked Write Boolean For supervised devices as of iOS 13.0. AppStoreBlockInAppPurchases Write Boolean Block AppStore in-app purchases. AppStoreBlockUIAppInstallation Write Boolean Block App Store from Home Screen. Users may continue to use iTunes or Apple Configurator to install or update apps. AppStoreRequirePassword Write Boolean Users must enter Apple ID password for each in-app and iTunes purchase. AppsVisibilityList Write InstanceArray[] Enter the iTunes App Store URL of the app you want. For example, to specify the Microsoft Work Folders app for iOS, enter https://itunes.apple.com/us/app/work-folders/id950878067?mt=8. To find the URL of an app, use a search engine to locate the store page. For example, to find the Work Folders app, you could search Microsoft Work Folders ITunes. AppsVisibilityListType Write String Set whether the list is a list of apps to hide or a list of apps to make visible. none, appsInListCompliant, appsNotInListCompliant AutoFillForceAuthentication Write Boolean Require Touch ID or Face ID before passwords or credit card information can be auto filled in Safari and Apps. Available with iOS 12.0 and later. AutoUnlockBlocked Write Boolean Block auto unlock. BlockSystemAppRemoval Write Boolean Blocking disables the ability to remove system apps from the device. BluetoothBlockModification Write Boolean Block modification of Bluetooth settings. To use this setting, the device must be in supervised mode (iOS 10.0+). CameraBlocked Write Boolean Indicates whether or not to block the user from accessing the camera of the device. Requires a supervised device for iOS 13 and later. CellularBlockDataRoaming Write Boolean Block data roaming over the cellular network. This won't show in the device's management profile, but a block will be enforced for data roaming every time the device checks in (typically every 8 hours). CellularBlockGlobalBackgroundFetchWhileRoaming Write Boolean Block global background fetch while roaming over the cellular network. CellularBlockPerAppDataModification Write Boolean Block changes to app cellular data usage settings. CellularBlockPersonalHotspot Write Boolean This value is available only with certain carriers. This won't show in the device's management profile, but a block will be enforced for personal hotspot every time the device checks in (typically every 8 hours). Block modification of personal hotspot in addition to this setting to ensure personal hotspot will always be blocked. CellularBlockPersonalHotspotModification Write Boolean For devices running iOS 12.2 and later. Users can't turn Personal Hotspot on or off. If you block this setting and block Personal Hotspot, Personal Hotspot will be turned off. CellularBlockPlanModification Write Boolean Indicates whether or not to allow users to change the settings of the cellular plan on a supervised device. CellularBlockVoiceRoaming Write Boolean Block voice roaming over the cellular network. CertificatesBlockUntrustedTlsCertificates Write Boolean Block untrusted Transport Layer Security (TLS) certificates. ClassroomAppBlockRemoteScreenObservation Write Boolean Block remote screen observation by Classroom app. To use this setting, the device must be in supervised mode (iOS 9.3+). ClassroomAppForceUnpromptedScreenObservation Write Boolean Student devices enrolled in a class via the Classroom app will automatically give permission to that course's teacher to silently observe the student's screen. ClassroomForceAutomaticallyJoinClasses Write Boolean Students can join a class without prompting the teacher. ClassroomForceRequestPermissionToLeaveClasses Write Boolean Requires a student enrolled in an unmanaged course via Classroom to request permission from the teacher when attempting to leave the course. Only available in iOS 11.3+ ClassroomForceUnpromptedAppAndDeviceLock Write Boolean Teachers can lock an app open or lock the device without first prompting the user. CompliantAppListType Write String Device compliance can be viewed in the Restricted Apps Compliance report. none, appsInListCompliant, appsNotInListCompliant CompliantAppsList Write InstanceArray[] Enter the iTunes App Store URL of the app you want. For example, to specify the Microsoft Work Folders app for iOS, enter https://itunes.apple.com/us/app/work-folders/id950878067?mt=8. To find the URL of an app, use a search engine to locate the store page. For example, to find the Work Folders app, you could search Microsoft Work Folders ITunes. ConfigurationProfileBlockChanges Write Boolean Indicates whether or not to block the user from installing configuration profiles and certificates interactively when the device is in supervised mode. ContactsAllowManagedToUnmanagedWrite Write Boolean Users can sync and add their managed contacts (including business and corporate ones) to an unmanaged app, such as the device's built-in contacts app. ContactsAllowUnmanagedToManagedRead Write Boolean An unmanaged app, such as the device's built-in contacts app, can access contact info in a managed app, such as Outlook. ContinuousPathKeyboardBlocked Write Boolean QuickPath enables continuous input on the device keyboard. Available for iOS/iPadOS 13.0 and later. DateAndTimeForceSetAutomatically Write Boolean Forces device to Set Date & Time Automatically. The device's time zone will only be updated when the device has cellular connections or wifi with location services enabled. DefinitionLookupBlocked Write Boolean Indicates whether or not to block definition lookup when the device is in supervised mode (iOS 8.1.3 and later ). DeviceBlockEnableRestrictions Write Boolean On iOS 12.0 and later, this blocks users from setting their own Screen Time settings, which includes device restrictions. On iOS 11.4.1 and earlier, this blocks the user from enabling restrictions in the device settings. The blocking effect is the same on any supervised iOS device. DeviceBlockEraseContentAndSettings Write Boolean Block the use of the erase all content and settings option on the device. DeviceBlockNameModification Write Boolean Indicates whether or not to allow device name modification when the device is in supervised mode (iOS 9.0 and later). DiagnosticDataBlockSubmission Write Boolean Block the device from sending diagnostic and usage telemetry data. DiagnosticDataBlockSubmissionModification Write Boolean Block the modification of the diagnostic submission and app analytics settings in the Diagnostics and Usage pane in Settings. To use this setting, the device must be in supervised mode (iOS 9.3.2+). DocumentsBlockManagedDocumentsInUnmanagedApps Write Boolean Indicates whether or not to block the user from viewing managed documents in unmanaged apps. DocumentsBlockUnmanagedDocumentsInManagedApps Write Boolean Indicates whether or not to block the user from viewing unmanaged documents in managed apps. EmailInDomainSuffixes Write StringArray[] Emails that the user sends or receives which don't match the domains you specify here will be marked as untrusted. EnterpriseAppBlockTrust Write Boolean Removes the Trust Enterprise Developer button in Settings->General->Profiles & Device Management. EnterpriseAppBlockTrustModification Write Boolean Block the changing of enterprise app trust settings. EnterpriseBookBlockBackup Write Boolean Indicates whether or not to backup enterprise book. EnterpriseBookBlockMetadataSync Write Boolean Indicates whether or not to sync enterprise book metadata. EsimBlockModification Write Boolean Indicates whether or not to allow the addition or removal of cellular plans on the eSIM of a supervised device. FaceTimeBlocked Write Boolean Indicates whether or not to block the user from using FaceTime. Requires a supervised device for iOS 13 and later. FilesNetworkDriveAccessBlocked Write Boolean Using the Server Message Block (SMB) protocol, devices can access files or other resources on a network server. Available for devices running iOS and iPadOS, versions 13.0 and later. FilesUsbDriveAccessBlocked Write Boolean Devices with access can connect to and open files on a USB drive. Available for devices running iOS and iPadOS, versions 13.0 and later. FindMyDeviceInFindMyAppBlocked Write Boolean A Find My app feature. Available for iOS/iPadOS 13.0 and later. FindMyFriendsBlocked Write Boolean Block changes to the Find My Friends app settings. FindMyFriendsInFindMyAppBlocked Write Boolean A Find My app feature. Used to locate family and friends from an Apple device or iCloud.com. Available for iOS/iPadOS 13.0 and later. GameCenterBlocked Write Boolean Indicates whether or not to block the user from using Game Center when the device is in supervised mode. GamingBlockGameCenterFriends Write Boolean Block adding Game Center friends. For supervised devices as of iOS 13.0. GamingBlockMultiplayer Write Boolean For supervised devices as of iOS 13.0. HostPairingBlocked Write Boolean Host pairing allows you to control which devices the device can pair with. IBooksStoreBlocked Write Boolean Indicates whether or not to block the user from using the iBooks Store when the device is in supervised mode. IBooksStoreBlockErotica Write Boolean User will not be able to download media from the iBook store that has been tagged as erotica. ICloudBlockActivityContinuation Write Boolean Handoff lets users start work on one iOS device, and continue it on another MacOS or iOS device. ICloudBlockBackup Write Boolean Block backing up device to iCloud. ICloudBlockDocumentSync Write Boolean Blocks iCloud from syncing documents and data. ICloudBlockManagedAppsSync Write Boolean Block managed apps from syncing to cloud. ICloudBlockPhotoLibrary Write Boolean Any photos not fully downloaded from iCloud Photo Library to device will be removed from local storage. ICloudBlockPhotoStreamSync Write Boolean Block photo stream syncing to iCloud. ICloudBlockSharedPhotoStream Write Boolean Block shared photo streaming. Blocking can cause data loss. ICloudPrivateRelayBlocked Write Boolean Block iCloud private relay. ICloudRequireEncryptedBackup Write Boolean Require encryption on device backup. ITunesBlocked Write Boolean Block iTunes. ITunesBlockExplicitContent Write Boolean Block explicit iTunes music, podcast, and news content from iTunes. For supervised devices as of 13.0. ITunesBlockMusicService Write Boolean Block Music service. If true, Music app reverts to classic mode and Music service is disabled. ITunesBlockRadio Write Boolean Indicates whether or not to block the user from using iTunes Radio when the device is in supervised mode (iOS 9.3 and later). KeyboardBlockAutoCorrect Write Boolean Indicates whether or not to block keyboard auto-correction when the device is in supervised mode (iOS 8.1.3 and later). KeyboardBlockDictation Write Boolean Indicates whether or not to block the user from using dictation input when the device is in supervised mode. KeyboardBlockPredictive Write Boolean Indicates whether or not to block predictive keyboards when device is in supervised mode (iOS 8.1.3 and later). KeyboardBlockShortcuts Write Boolean Indicates whether or not to block keyboard shortcuts when the device is in supervised mode (iOS 9.0 and later). KeyboardBlockSpellCheck Write Boolean Indicates whether or not to block keyboard spell-checking when the device is in supervised mode (iOS 8.1.3 and later). KeychainBlockCloudSync Write Boolean Disables syncing credentials stored in the Keychain to iCloud. KioskModeAllowAssistiveSpeak Write Boolean Indicates whether or not to allow assistive speak while in kiosk mode. KioskModeAllowAssistiveTouchSettings Write Boolean Users can turn AssistiveTouch on or off. KioskModeAllowAutoLock Write Boolean Kiosk mode allow auto lock KioskModeAllowColorInversionSettings Write Boolean Users can turn invert colors on or off. KioskModeAllowRingerSwitch Write Boolean Kiosk mode allow ringer switch KioskModeAllowScreenRotation Write Boolean Kiosk mode allow screen rotation KioskModeAllowSleepButton Write Boolean Kiosk mode allow sleep button KioskModeAllowTouchscreen Write Boolean Kiosk mode allow touchscreen KioskModeAllowVoiceControlModification Write Boolean Indicates whether or not to allow the user to toggle voice control in kiosk mode. KioskModeAllowVoiceOverSettings Write Boolean Users can turn VoiceOver on or off. KioskModeAllowVolumeButtons Write Boolean Kiosk mode allow volume buttons KioskModeAllowZoomSettings Write Boolean Users can turn zoom on or off. KioskModeAppStoreUrl Write String URL of app for kiosk mode, e.g. https://itunes.apple.com/us/app/work-folders/id950878067?mt=8 KioskModeAppType Write String Indicates type of app in kiosk mode. notConfigured, appStoreApp, managedApp, builtInApp KioskModeBlockAutoLock Write Boolean Indicates whether or not to block the auto-lock while in Kiosk Mode. KioskModeBlockRingerSwitch Write Boolean Indicates whether or not to block the ringer switch while in Kiosk Mode. KioskModeBlockScreenRotation Write Boolean Indicates whether or not to block the screen rotation while in Kiosk Mode. KioskModeBlockSleepButton Write Boolean Indicates whether or not to block the sleep button while in Kiosk Mode. KioskModeBlockTouchscreen Write Boolean Indicates whether or not to block the touchscreen while in Kiosk Mode. KioskModeBlockVolumeButtons Write Boolean Indicates whether or not to block the volume buttons while in Kiosk Mode. KioskModeBuiltInAppId Write String To see a list of bundle IDs for common built-in iOS apps, see the Intune documentation. KioskModeEnableVoiceControl Write Boolean Indicates whether or not to enable the voice control while in Kiosk Mode. KioskModeManagedAppId Write String Add managed Intune apps from the Software Node. KioskModeRequireAssistiveTouch Write Boolean Indicates whether or not to enforce assistive touch while in Kiosk Mode. KioskModeRequireColorInversion Write Boolean Indicates whether or not to enforce color inversion while in Kiosk Mode. KioskModeRequireMonoAudio Write Boolean Indicates whether or not to enforce mono audio while in Kiosk Mode. KioskModeRequireVoiceOver Write Boolean Indicates whether or not to enforce voice control while in Kiosk Mode. KioskModeRequireZoom Write Boolean Indicates whether or not to enforce zoom while in Kiosk Mode. LockScreenBlockControlCenter Write Boolean Indicates whether or not to block the user from using control center on the lock screen. LockScreenBlockNotificationView Write Boolean Indicates whether or not to block the user from using the notification view on the lock screen. LockScreenBlockPassbook Write Boolean Indicates whether or not to block the user from using passbook when the device is locked. LockScreenBlockTodayView Write Boolean Indicates whether or not to block the user from using the Today View on the lock screen. ManagedPasteboardRequired Write Boolean Indicates whether or not to enforce managed pasteboard. MediaContentRatingApps Write String Media content rating settings for apps. allAllowed, allBlocked, agesAbove4, agesAbove9, agesAbove12, agesAbove17 MediaContentRatingAustralia Write Instance Media content rating settings for Australia MediaContentRatingCanada Write Instance Media content rating settings for Canada MediaContentRatingFrance Write Instance Media content rating settings for France MediaContentRatingGermany Write Instance Media content rating settings for Germany MediaContentRatingIreland Write Instance Media content rating settings for Ireland MediaContentRatingJapan Write Instance Media content rating settings for Japan MediaContentRatingNewZealand Write Instance Media content rating settings for New Zealand MediaContentRatingUnitedKingdom Write Instance Media content rating settings for United Kingdom MediaContentRatingUnitedStates Write Instance Media content rating settings for United States MessagesBlocked Write Boolean Indicates whether or not to block the user from using the Messages app on the supervised device. NetworkUsageRules Write InstanceArray[] If you don't add any managed apps, the configured settings will apply to all managed apps by default. If you add specific managed apps, the configured settings will apply to only those apps. NfcBlocked Write Boolean Indicates whether or not to block the user from using nfc on the supervised device. NotificationsBlockSettingsModification Write Boolean Indicates whether or not to allow notifications settings modification (iOS 9.3 and later). OnDeviceOnlyDictationForced Write Boolean Indicates whether or not to enforce on device only dictation. OnDeviceOnlyTranslationForced Write Boolean Indicates whether or not to enforce on device only translation. PasscodeBlockFingerprintModification Write Boolean Block users from adding, changing, or removing fingerprints and faces. Face ID is avaliable in iOS 11.0 and later. PasscodeBlockFingerprintUnlock Write Boolean Face ID is avaliable on iOS 11.0 and later. PasscodeBlockModification Write Boolean Block passcode from being added, changed or removed. Changes to passcode restrictions will be ignored on supervised devices after blocking passcode modification. PasscodeBlockSimple Write Boolean Block simple password sequences, such as 1234 or 1111. PasscodeExpirationDays Write UInt32 Number of days until device password must be changed. (1-65535) PasscodeMinimumCharacterSetCount Write UInt32 Minimum number (0-4) of non-alphanumeric characters, such as #, %, !, etc., required in the password. The default value is 0. PasscodeMinimumLength Write UInt32 Minimum number of digits or characters in password. (4-14) PasscodeMinutesOfInactivityBeforeLock Write UInt32 Set to 0 to require a password immediately. There is no maximum number of minutes, and this number overrides the number currently set on the device. (This compliance check is supported for devices with OS versions iOS 8.0 and above) PasscodeMinutesOfInactivityBeforeScreenTimeout Write UInt32 Set to 0 to use the device's minimum possible value. This number (0-60) overrides the number currently set on the device. If set to Immediately, devices will use the minimum possible value per device. PasscodePreviousPasscodeBlockCount Write UInt32 Number of new passwords that must be used until an old one can be reused. (1-24) PasscodeRequired Write Boolean In addition to requiring a password on all devices, this setting enforces a non-simple, 6-digit password requirement (regardless of other password settings you configure) on devices that are enrolled with Apple user enrollment. PasscodeRequiredType Write String Type of passcode that is required. deviceDefault, alphanumeric, numeric PasscodeSignInFailureCountBeforeWipe Write UInt32 Number of consecutive times an incorrect password can be entered before device is wiped of all data. (2-11) PasswordBlockAirDropSharing Write Boolean Indicates whether or not to block AirDrop password sharing PasswordBlockAutoFill Write Boolean Indicates whether or not to block password autofill. PasswordBlockProximityRequests Write Boolean Indicates whether or not to block password proximity requests. PkiBlockOTAUpdates Write Boolean Allows your users to receive software updates without connecting their devices to a computer PodcastsBlocked Write Boolean Indicates whether or not to block podcasts. PrivacyForceLimitAdTracking Write Boolean Disables device advertising identifier ProximityBlockSetupToNewDevice Write Boolean Block user's from using their Apple devices to set up and configure other Apple devices. SafariBlockAutofill Write Boolean Indicates whether or not to block Safari autofill. SafariBlocked Write Boolean Indicates whether or not to block Safari. For supervised devices as of iOS 13.0. SafariBlockJavaScript Write Boolean Indicates whether or not to block javascript in Safari. SafariBlockPopups Write Boolean Indicates whether or not to block popups on Safari. SafariCookieSettings Write String Cookie settings for Safari. browserDefault, blockAlways, allowCurrentWebSite, allowFromWebsitesVisited, allowAlways SafariManagedDomains Write StringArray[] Documents downloaded from the URLs you specify here will be considered managed (Safari only). SafariPasswordAutoFillDomains Write StringArray[] Users can save passwords in Safari only from URLs matching the patterns you specify here. To use this setting, the device must be in supervised mode and not configured for multiple users. (iOS 9.3+) SafariRequireFraudWarning Write Boolean Indicates whether or not to require fraud warning in Safari. ScreenCaptureBlocked Write Boolean Indicates whether or not to block the user from taking Screenshots SharedDeviceBlockTemporarySessions Write Boolean Indicates whether or not to block temporary sessions on shared devices. SiriBlocked Write Boolean Indicates whether or not to block Siri. SiriBlockedWhenLocked Write Boolean Indicates whether or not to block Siri when locked. SiriBlockUserGeneratedContent Write Boolean Block Siri from querying user-generated content from the internet. SiriRequireProfanityFilter Write Boolean Prevents Siri from dictating, or speaking profane language. SoftwareUpdatesEnforcedDelayInDays Write UInt32 Delay the user's software update for this many days. The maximum is 90 days. (1-90) SoftwareUpdatesForceDelayed Write Boolean Delay user visibility of Software Updates. This does not impact any scheduled updates. It represents days before software updates are visible to end users after release. SpotlightBlockInternetResults Write Boolean Blocks Spotlight from returning any results from an Internet search. UnpairedExternalBootToRecoveryAllowed Write Boolean Allow users to boot devices into recovery mode with unpaired devices. Available for devices running iOS and iPadOS versions 14.5 and later. UsbRestrictedModeBlocked Write Boolean Blocks USB Restricted mode. USB Restricted mode blocks USB accessories from exchanging data with a device that has been locked over an hour. VoiceDialingBlocked Write Boolean Indicates whether or not to block voice dialing. VpnBlockCreation Write Boolean Blocks the creation of VPN configurations WallpaperBlockModification Write Boolean Block wallpaper from being changed. WiFiConnectOnlyToConfiguredNetworks Write Boolean Force the device to use only Wi-Fi networks set up through configuration profiles. WiFiConnectToAllowedNetworksOnlyForced Write Boolean Require devices to use Wi-Fi networks set up via configuration profiles. Available for devices running iOS and iPadOS versions 14.5 and later. WifiPowerOnForced Write Boolean Wi-Fi can't be turned off in the Settings app or in the Control Center, even when the device is in airplane mode. Available for iOS/iPadOS 13.0 and later. Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceConfigurationPolicyIOS \u00b6 Description \u00b6 This resource configures an Intune Device Configuration Policy for iOS. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Configuration Policy for iOS. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceConfigurationPolicyiOS 'ConfigureDeviceConfigurationPolicyiOS' { DisplayName = \"iOS DSC Policy\" AccountBlockModification = $False ActivationLockAllowWhenSupervised = $False AirDropBlocked = $False AirDropForceUnmanagedDropTarget = $False AirPlayForcePairingPasswordForOutgoingRequests = $False AppleNewsBlocked = $False AppleWatchBlockPairing = $False AppleWatchForceWristDetection = $False AppStoreBlockAutomaticDownloads = $False AppStoreBlocked = $False AppStoreBlockInAppPurchases = $False AppStoreBlockUIAppInstallation = $False AppStoreRequirePassword = $False AppsVisibilityList = @() AppsVisibilityListType = \"none\" BluetoothBlockModification = $True CameraBlocked = $False CellularBlockDataRoaming = $False CellularBlockGlobalBackgroundFetchWhileRoaming = $False CellularBlockPerAppDataModification = $False CellularBlockVoiceRoaming = $False CertificatesBlockUntrustedTlsCertificates = $False ClassroomAppBlockRemoteScreenObservation = $False CompliantAppListType = \"none\" CompliantAppsList = @() ConfigurationProfileBlockChanges = $False DefinitionLookupBlocked = $False Description = \"iOS Device Restriction Policy\" DeviceBlockEnableRestrictions = $True DeviceBlockEraseContentAndSettings = $False DeviceBlockNameModification = $False DiagnosticDataBlockSubmission = $False DiagnosticDataBlockSubmissionModification = $False DocumentsBlockManagedDocumentsInUnmanagedApps = $False DocumentsBlockUnmanagedDocumentsInManagedApps = $False EmailInDomainSuffixes = @() EnterpriseAppBlockTrust = $False EnterpriseAppBlockTrustModification = $False FaceTimeBlocked = $False FindMyFriendsBlocked = $False GameCenterBlocked = $False GamingBlockGameCenterFriends = $True GamingBlockMultiplayer = $False HostPairingBlocked = $False iBooksStoreBlocked = $False iBooksStoreBlockErotica = $False iCloudBlockActivityContinuation = $False iCloudBlockBackup = $True iCloudBlockDocumentSync = $True iCloudBlockManagedAppsSync = $False iCloudBlockPhotoLibrary = $False iCloudBlockPhotoStreamSync = $True iCloudBlockSharedPhotoStream = $False iCloudRequireEncryptedBackup = $False iTunesBlockExplicitContent = $False iTunesBlockMusicService = $False iTunesBlockRadio = $False KeyboardBlockAutoCorrect = $False KeyboardBlockPredictive = $False KeyboardBlockShortcuts = $False KeyboardBlockSpellCheck = $False KioskModeAllowAssistiveSpeak = $False KioskModeAllowAssistiveTouchSettings = $False KioskModeAllowAutoLock = $False KioskModeAllowColorInversionSettings = $False KioskModeAllowRingerSwitch = $False KioskModeAllowScreenRotation = $False KioskModeAllowSleepButton = $False KioskModeAllowTouchscreen = $False KioskModeAllowVoiceOverSettings = $False KioskModeAllowVolumeButtons = $False KioskModeAllowZoomSettings = $False KioskModeRequireAssistiveTouch = $False KioskModeRequireColorInversion = $False KioskModeRequireMonoAudio = $False KioskModeRequireVoiceOver = $False KioskModeRequireZoom = $False LockScreenBlockControlCenter = $False LockScreenBlockNotificationView = $False LockScreenBlockPassbook = $False LockScreenBlockTodayView = $False MediaContentRatingApps = \"allAllowed\" messagesBlocked = $False NotificationsBlockSettingsModification = $False PasscodeBlockFingerprintUnlock = $False PasscodeBlockModification = $False PasscodeBlockSimple = $True PasscodeMinimumLength = 4 PasscodeRequired = $True PasscodeRequiredType = \"deviceDefault\" PodcastsBlocked = $False SafariBlockAutofill = $False SafariBlocked = $False SafariBlockJavaScript = $False SafariBlockPopups = $False SafariCookieSettings = \"browserDefault\" SafariManagedDomains = @() SafariPasswordAutoFillDomains = @() SafariRequireFraudWarning = $False ScreenCaptureBlocked = $False SiriBlocked = $False SiriBlockedWhenLocked = $False SiriBlockUserGeneratedContent = $False SiriRequireProfanityFilter = $False SpotlightBlockInternetResults = $False VoiceDialingBlocked = $False WallpaperBlockModification = $False Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceConfigurationPolicyIOS"},{"location":"resources/intune/IntuneDeviceEnrollmentLimitRestriction/","text":"IntuneDeviceEnrollmentLimitRestriction \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Display name of the device enrollment limit restriction. Description Write String Description of the device enrollment limit restriction. Limit Write UInt32 Specifies the maximum number of devices a user can enroll Ensure Write String Present ensures the restriction exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceEnrollmentLimitRestriction \u00b6 Description \u00b6 This resource configures the Intune device enrollment limit restrictions. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Enrollment Limit Restriction. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceEnrollmentLimitRestriction 'DeviceEnrollmentLimitRestriction' { Description = \"My Restriction\" DisplayName = \"My DSC Limit\" Limit = 12 Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceEnrollmentLimitRestriction"},{"location":"resources/intune/IntuneDeviceEnrollmentPlatformRestriction/","text":"IntuneDeviceEnrollmentPlatformRestriction \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Display name of the device enrollment platform restriction. Description Write String Description of the device enrollment platform restriction. AndroidPlatformBlocked Write Boolean N/A AndroidPersonalDeviceEnrollmentBlocked Write Boolean N/A AndroidOSMinimumVersion Write String N/A AndroidOSMaximumVersion Write String N/A iOSPlatformBlocked Write Boolean N/A iOSPersonalDeviceEnrollmentBlocked Write Boolean N/A iOSOSMinimumVersion Write String N/A iOSOSMaximumVersion Write String N/A MacPlatformBlocked Write Boolean N/A MacPersonalDeviceEnrollmentBlocked Write Boolean N/A MacOSMinimumVersion Write String N/A MacOSMaximumVersion Write String N/A WindowsPlatformBlocked Write Boolean N/A WindowsPersonalDeviceEnrollmentBlocked Write Boolean N/A WindowsOSMinimumVersion Write String N/A WindowsOSMaximumVersion Write String N/A WindowsMobilePlatformBlocked Write Boolean N/A WindowsMobilePersonalDeviceEnrollmentBlocked Write Boolean N/A WindowsMobileOSMinimumVersion Write String N/A WindowsMobileOSMaximumVersion Write String N/A Ensure Write String Present ensures the restriction exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneDeviceEnrollmentPlatformRestriction \u00b6 Description \u00b6 This resource configures the Intune device platform enrollment restrictions. Examples \u00b6 Example 1 \u00b6 This example creates a new Device Enrollment Platform Restriction. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { IntuneDeviceEnrollmentPlatformRestriction 'DeviceEnrollmentPlatformRestriction' { AndroidPersonalDeviceEnrollmentBlocked = $False AndroidPlatformBlocked = $False Description = \"\" DisplayName = \"My DSC Restriction\" iOSOSMaximumVersion = \"11.0\" iOSOSMinimumVersion = \"9.0\" iOSPersonalDeviceEnrollmentBlocked = $False iOSPlatformBlocked = $False MacPersonalDeviceEnrollmentBlocked = $False MacPlatformBlocked = $True WindowsMobilePersonalDeviceEnrollmentBlocked = $False WindowsMobilePlatformBlocked = $True WindowsPersonalDeviceEnrollmentBlocked = $True WindowsPlatformBlocked = $False Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"IntuneDeviceEnrollmentPlatformRestriction"},{"location":"resources/intune/IntuneExploitProtectionPolicyWindows10SettingCatalog/","text":"IntuneExploitProtectionPolicyWindows10SettingCatalog \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Identity Key String Identity of the endpoint protection policy. DisplayName Write String Display name of the endpoint protection policy. Description Write String Description of the endpoint protection. ExploitProtectionSettings Write String Enables the IT admin to push out a configuration representing the desired system and application mitigation options to all the devices in the organization. The configuration is represented by an XML. disallowexploitprotectionoverride Write String Prevent users from making changes to the exploit protection settings area in the Windows Defender Security Center.values 0:disable, 1:enable 0, 1 Assignments Write InstanceArray[] Assignments of the endpoint protection. Ensure Write String Present ensures the policy exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneExploitProtectionPolicyWindows10SettingCatalog \u00b6 Description \u00b6 This resource configures an Intune Endpoint Protection Exploit Protection policy for a Windows 10 Device. Enables the IT admin to push out a configuration representing the desired system and application mitigation options to all the devices in the organization. The configuration is represented by an XML. For more information Exploit Protection, see - Enable Exploit Protection on Devices and Import: https://docs.microsoft.com/en-us/microsoft-365/security/defender-endpoint/enable-exploit-protection, - Export, and deploy Exploit Protection configurations: https://docs.microsoft.com/en-us/windows/threat-protection/windows-defender-exploit-guard/import-export-exploit-protection-emet-xml","title":"IntuneExploitProtectionPolicyWindows10SettingCatalog"},{"location":"resources/intune/IntuneRoleAssignment/","text":"IntuneRoleAssignment \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Id Write String The unique idenfier for an entity. Read-only. Description Write String Description of the Role Assignment. DisplayName Key String The display or friendly name of the role Assignment. ResourceScopes Write StringArray[] List of ids of role scope member security groups. These are IDs from Azure Active Directory. ResourceScopesDisplayNames Write StringArray[] List of DisplayName of role scope member security groups. These are Displayname from Azure Active Directory. Members Write StringArray[] The list of ids of role member security groups. These are IDs from Azure Active Directory. MembersDisplayNames Write StringArray[] The list of Displaynames of role member security groups. These are Displaynamnes from Azure Active Directory. RoleDefinition Write String The Role Definition Id. RoleDefinitionDisplayName Write String The Role Definition Displayname. Ensure Write String Present ensures the Role exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneRoleAssignment \u00b6 Description \u00b6 This resource configures an Intune Role Assignment. Examples \u00b6 Example 1 \u00b6 This example creates a new Intune Role Assigment. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC Node localhost { IntuneRoleAssignment \"IntuneRoleAssignment\" { Description = \"test2\" ; DisplayName = \"test2\" ; Ensure = \"Present\" ; Id = \"20556aad-3d16-465a-890c-cf915ae1cd60\" ; Members = @( \"\" ); MembersDisplayNames = @( \"SecGroup2\" ); ResourceScopes = @( \"6eb76881-f56f-470f-be0d-672145d3dcb1\" ); ResourceScopesDisplayNames = @( \"\" ); RoleDefinition = \"2d00d0fd-45e9-4166-904f-b76ac5eed2c7\" ; RoleDefinitionDisplayName = \"This is my role\" ; Credential = $credsGlobalAdmin } } }","title":"IntuneRoleAssignment"},{"location":"resources/intune/IntuneRoleDefinition/","text":"IntuneRoleDefinition \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Id Write String The unique idenfier for an entity. Read-only. Description Write String Description of the Role definition. DisplayName Key String Display Name of the Role definition. IsBuiltIn Write Boolean Type of Role. Set to True if it is built-in, or set to False if it is a custom role definition. allowedResourceActions Write StringArray[] List of allowed resource actions notAllowedResourceActions Write StringArray[] List of not allowed resource actions roleScopeTagIds Write StringArray[] Id of the Scope Tags to assign Ensure Write String Present ensures the Role exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneRoleDefinition \u00b6 Description \u00b6 This resource configures an Intune Role Definition. Examples \u00b6 Example 1 \u00b6 This example creates a new Intune Role Definition. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC Node localhost { IntuneRoleDefinition \"IntuneRoleDefinition\" { allowedResourceActions = @( \"Microsoft.Intune_Organization_Read\" , \"Microsoft.Intune_Roles_Create\" , \"Microsoft.Intune_Roles_Read\" , \"Microsoft.Intune_Roles_Update\" ); Description = \"My role defined by me.\" ; DisplayName = \"This is my role\" ; Ensure = \"Present\" ; Id = \"\" ; IsBuiltIn = $False ; notallowedResourceActions = @(); roleScopeTagIds = @( \"0\" , \"1\" ); Credential = $credsGlobalAdmin } } }","title":"IntuneRoleDefinition"},{"location":"resources/intune/IntuneSettingCatalogASRRulesPolicyWindows10/","text":"IntuneSettingCatalogASRRulesPolicyWindows10 \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Identity Key String Identity of the endpoint protection attack surface protection rules policy for Windows 10. DisplayName Write String Display name of the endpoint protection attack surface protection rules policy for Windows 10. Description Write String Description of the endpoint protection attack surface protection rules policy for Windows 10. Assignments Write InstanceArray[] Assignments of the endpoint protection. AttackSurfaceReductionOnlyExclusions Write StringArray[] Exclude files and paths from attack surface reduction rules BlockAbuseOfExploitedVulnerableSignedDrivers Write String This rule prevents an application from writing a vulnerable signed driver to disk. off, block, audit, warn BlockAdobeReaderFromCreatingChildProcesses Write String This rule prevents attacks by blocking Adobe Reader from creating processes. off, block, audit, warn BlockAllOfficeApplicationsFromCreatingChildProcesses Write String This rule blocks Office apps from creating child processes. Office apps include Word, Excel, PowerPoint, OneNote, and Access. off, block, audit, warn BlockCredentialStealingFromWindowsLocalSecurityAuthoritySubsystem Write String This rule helps prevent credential stealing by locking down Local Security Authority Subsystem Service (LSASS). off, block, audit, warn BlockExecutableContentFromEmailClientAndWebmail Write String This rule blocks the following file types from launching from email opened within the Microsoft Outlook application, or Outlook.com and other popular webmail providers. off, block, audit, warn BlockExecutableFilesRunningUnlessTheyMeetPrevalenceAgeTrustedListCriterion Write String This rule blocks executable files that don't meet a prevalence, age, or trusted list criteria, such as .exe, .dll, or .scr, from launching. off, block, audit, warn BlockExecutionOfPotentiallyObfuscatedScripts Write String This rule detects suspicious properties within an obfuscated script. off, block, audit, warn BlockJavaScriptOrVBScriptFromLaunchingDownloadedExecutableContent Write String This rule prevents scripts from launching potentially malicious downloaded content. off, block, audit, warn BlockOfficeApplicationsFromCreatingExecutableContent Write String This rule prevents Office apps, including Word, Excel, and PowerPoint, from creating potentially malicious executable content, by blocking malicious code from being written to disk. off, block, audit, warn BlockOfficeApplicationsFromInjectingCodeIntoOtherProcesses Write String This rule blocks code injection attempts from Office apps into other processes. off, block, audit, warn BlockOfficeCommunicationAppFromCreatingChildProcesses Write String This rule prevents Outlook from creating child processes, while still allowing legitimate Outlook functions. off, block, audit, warn BlockPersistenceThroughWMIEventSubscription Write String This rule prevents malware from abusing WMI to attain persistence on a device. off, block, audit, warn BlockProcessCreationsFromPSExecAndWMICommands Write String This rule blocks processes created through PsExec and WMI from running. off, block, audit, warn BlockUntrustedUnsignedProcessesThatRunFromUSB Write String With this rule, admins can prevent unsigned or untrusted executable files from running from USB removable drives, including SD cards. off, block, audit, warn BlockWin32APICallsFromOfficeMacros Write String This rule prevents VBA macros from calling Win32 APIs. off, block, audit, warn UseAdvancedProtectionAgainstRansomware Write String This rule provides an extra layer of protection against ransomware. off, block, audit, warn ControlledFolderAccessProtectedFolders Write StringArray[] List of additional folders that need to be protected ControlledFolderAccessAllowedApplications Write StringArray[] List of apps that have access to protected folders. EnableControlledFolderAccess Write String This rule enable Controlled folder access which protects your data by checking apps against a list of known, trusted apps.values 0:disable, 1:enable, 2:audit 0, 1, 2 Ensure Write String Present ensures the policy exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneSettingCatalogASRRulesPolicyWindows10 \u00b6 Description \u00b6 This resource configures a Intune Endpoint Protection Attack Surface Reduction rules policy for a Windows 10 Device. This resource returns ASR rules created using settings catalog settings.","title":"IntuneSettingCatalogASRRulesPolicyWindows10"},{"location":"resources/intune/IntuneWifiConfigurationPolicyAndroidDeviceAdministrator/","text":"IntuneWifiConfigurationPolicyAndroidDeviceAdministrator \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune Policy. Description Write String Description of the Intune Policy. DisplayName Write String Display name of the Intune Policy. ConnectAutomatically Write Boolean Connect automatically. ConnectWhenNetworkNameIsHidden Write Boolean Connect when network name is hidden. NetworkName Write String Network name. Ssid Write String SSID. WiFiSecurityType Write String Wi-Fi security type. open, wpaEnterprise, wpa2Enterprise Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneWifiConfigurationPolicyAndroidDeviceAdministrator \u00b6 Description \u00b6 This resource configures an Intune Wifi Configuration Policy Android Device Administrator Device.","title":"IntuneWifiConfigurationPolicyAndroidDeviceAdministrator"},{"location":"resources/intune/IntuneWifiConfigurationPolicyAndroidEntrepriseDeviceOwner/","text":"IntuneWifiConfigurationPolicyAndroidEntrepriseDeviceOwner \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune policy Description Write String Description of the Intune policy DisplayName Write String Disaply name of the Intune policy ConnectAutomatically Write Boolean If the network is in range, automatically connect. ConnectWhenNetworkNameIsHidden Write Boolean Don't show this Wi-Fi network on an end-user's device in the list of available networks. The SSID will not be broadcasted. NetworkName Write String Network name. PreSharedKey Write String Pre shared key. PreSharedKeyIsSet Write Boolean Pre shared key is set. ProxyAutomaticConfigurationUrl Write String URL of the automatic proxy. ProxyExclusionList Write String Exclusion list of the proxy. ProxyManualAddress Write String Address of the proxy. ProxyManualPort Write UInt32 Port of the proxy. ProxySettings Write String Proxy setting type. none, manual, automatic Ssid Write String Service Set Identifier. The name of the Wi-Fi connection. WiFiSecurityType Write String Type of Wi-Fi profile. open, wep, wpaPersonal, wpaEnterprise Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneWifiConfigurationPolicyAndroidEntrepriseDeviceOwner \u00b6 Description \u00b6 This resource configures an Intune Wifi Configuration Policy Android Entreprise Device Owner Device.","title":"IntuneWifiConfigurationPolicyAndroidEntrepriseDeviceOwner"},{"location":"resources/intune/IntuneWifiConfigurationPolicyAndroidEntrepriseWorkProfile/","text":"IntuneWifiConfigurationPolicyAndroidEntrepriseWorkProfile \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. ConnectAutomatically Write Boolean Connect automatically. ConnectWhenNetworkNameIsHidden Write Boolean Connect when network name is hidden. NetworkName Write String Network name. Ssid Write String SSID. WiFiSecurityType Write String Wi-Fi security. open, wpaEnterprise, wpa2Enterprise Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneWifiConfigurationPolicyAndroidEntrepriseWorkProfile \u00b6 Description \u00b6 This resource configures an Intune Wifi Configuration Policy Android Entreprise Work Profile Device.","title":"IntuneWifiConfigurationPolicyAndroidEntrepriseWorkProfile"},{"location":"resources/intune/IntuneWifiConfigurationPolicyAndroidForWork/","text":"IntuneWifiConfigurationPolicyAndroidForWork \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. ConnectAutomatically Write Boolean Connect automatically ConnectWhenNetworkNameIsHidden Write Boolean Connect when network name is hidden NetworkName Write String Network name Ssid Write String SSID WiFiSecurityType Write String Wi-Fi security open, wpaEnterprise, wpa2Enterprise Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneWifiConfigurationPolicyAndroidForWork \u00b6 Description \u00b6 This resource configures an Intune Wifi Configuration Policy Android For Work Device.","title":"IntuneWifiConfigurationPolicyAndroidForWork"},{"location":"resources/intune/IntuneWifiConfigurationPolicyAndroidOpenSourceProject/","text":"IntuneWifiConfigurationPolicyAndroidOpenSourceProject \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. ConnectAutomatically Write Boolean Connect automatically to the network. ConnectWhenNetworkNameIsHidden Write Boolean Define if the network should be connected if hidden. NetworkName Write String Define the network name. PreSharedKey Write String Define the pre-shared key. PreSharedKeyIsSet Write Boolean Define if the pre-shared key is set. Ssid Write String Define the SSID. WiFiSecurityType Write String Define the Wifi security type. open, wep, wpaPersonal, wpaEnterprise Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneWifiConfigurationPolicyAndroidOpenSourceProject \u00b6 Description \u00b6 This resource configures an Intune Wifi Configuration Policy Android Open Source Project Device.","title":"IntuneWifiConfigurationPolicyAndroidOpenSourceProject"},{"location":"resources/intune/IntuneWifiConfigurationPolicyIOS/","text":"IntuneWifiConfigurationPolicyIOS \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. ConnectAutomatically Write Boolean Connect automatically ConnectWhenNetworkNameIsHidden Write Boolean Connect when network name is hidden DisableMacAddressRandomization Write Boolean Disable the MAC address randomization. NetworkName Write String Network name PreSharedKey Write String Pre shared key ProxyAutomaticConfigurationUrl Write String Proxy automatic configuration url ProxyManualAddress Write String Proxy manual address ProxyManualPort Write UInt32 Proxy manual port ProxySettings Write String Proxy settings none, manual, automatic Ssid Write String SSID WiFiSecurityType Write String Wi-Fi security open, wpaPersonal, wpaEnterprise, wep, wpa2Personal, wpa2Enterprise Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneWifiConfigurationPolicyIOS \u00b6 Description \u00b6 This resource configures an Intune Wifi Configuration Policy for iOS Device.","title":"IntuneWifiConfigurationPolicyIOS"},{"location":"resources/intune/IntuneWifiConfigurationPolicyMacOS/","text":"IntuneWifiConfigurationPolicyMacOS \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. ConnectAutomatically Write Boolean Connect automatically ConnectWhenNetworkNameIsHidden Write Boolean Connect when network name is hidden NetworkName Write String Network name PreSharedKey Write String Pre shared key ProxyAutomaticConfigurationUrl Write String Proxy automatic configuration url ProxyManualAddress Write String Proxy manual address ProxyManualPort Write UInt32 Proxy manual port ProxySettings Write String Proxy settings none, manual, automatic Ssid Write String SSID WiFiSecurityType Write String Wi-Fi security open, wpaPersonal, wpaEnterprise, wep, wpa2Personal, wpa2Enterprise Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneWifiConfigurationPolicyMacOS \u00b6 Description \u00b6 This resource configures an Intune Wifi Configuration Policy for MacOS Device.","title":"IntuneWifiConfigurationPolicyMacOS"},{"location":"resources/intune/IntuneWifiConfigurationPolicyWindows10/","text":"IntuneWifiConfigurationPolicyWindows10 \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values dataType Write String The type of the target assignment. #microsoft.graph.groupAssignmentTarget, #microsoft.graph.allLicensedUsersAssignmentTarget, #microsoft.graph.allDevicesAssignmentTarget, #microsoft.graph.exclusionGroupAssignmentTarget, #microsoft.graph.configurationManagerCollectionAssignmentTarget deviceAndAppManagementAssignmentFilterType Write String The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude. none, include, exclude deviceAndAppManagementAssignmentFilterId Write String The Id of the filter for the target assignment. groupId Write String The group Id that is the target of the assignment. collectionId Write String The collection Id that is the target of the assignment.(ConfigMgr) Id Write String Id of the Intune policy. Description Write String Description of the Intune policy. DisplayName Write String Display name of the Intune policy. ConnectAutomatically Write Boolean Connect automatically ConnectToPreferredNetwork Write Boolean Connect to preferred network ConnectWhenNetworkNameIsHidden Write Boolean Connect when network name is hidden ForceFIPSCompliance Write Boolean Force FIPS compliance MeteredConnectionLimit Write String Metered connection limit unrestricted, fixed, variable NetworkName Write String Network name PreSharedKey Write String Pre shared key ProxyAutomaticConfigurationUrl Write String Proxy automatic configuration url ProxyManualAddress Write String Proxy manual address ProxyManualPort Write UInt32 Proxy manual port ProxySetting Write String Proxy setting none, manual, automatic Ssid Write String SSID WifiSecurityType Write String Wi-Fi security open, wpaPersonal, wpaEnterprise, wep, wpa2Personal, wpa2Enterprise Assignments Write InstanceArray[] Represents the assignment to the Intune policy. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Intune Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. IntuneWifiConfigurationPolicyWindows10 \u00b6 Description \u00b6 This resource configures an Intune Wifi Configuration Policy for Windows10 Device.","title":"IntuneWifiConfigurationPolicyWindows10"},{"location":"resources/office365/O365AdminAuditLogConfig/","text":"O365AdminAuditLogConfig \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes Ensure Write String 'Present' is the only value accepted. Present UnifiedAuditLogIngestionEnabled Required String Determins if Unified Audit Log Ingestion is enabled Enabled, Disabled Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. O365AdminAuditLogConfig \u00b6 Description \u00b6 This resource configures Security and Compliance Center Admin Audit Log. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { O365AdminAuditLogConfig 'AuditLogConfig' { IsSingleInstance = \"Yes\" UnifiedAuditLogIngestionEnabled = \"Enabled\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"O365AdminAuditLogConfig"},{"location":"resources/office365/O365Group/","text":"O365Group \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String The display name for the group. MailNickName Key String The group's Internal Name. ManagedBy Write StringArray[] The group's owner user principal. Description Write String The group's description. Members Write StringArray[] Members of the group. Ensure Write String Present ensures the group exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory application used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. O365Group \u00b6 Description \u00b6 This resource allows users to create Office 365 Users and assign them licenses. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { O365Group 'OttawaTeamGroup' { DisplayName = \"Ottawa Employees\" MailNickName = \"OttawaEmployees\" Description = \"This is only for employees of the Ottawa Office\" ManagedBy = \"TenantAdmin@contoso.onmicrosoft.com\" Members = @( \"Bob.Houle\" , \"John.Smith\" ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"O365Group"},{"location":"resources/office365/O365OrgCustomizationSetting/","text":"O365OrgCustomizationSetting \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes Ensure Write String Since there is only one setting availble, this must be set to 'Present' Present Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. CertificatePassword Write PSCredential Username can be made up to anything but password will be used for CertificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. O365OrgCustomizationSetting \u00b6 Description \u00b6 This resource configures the tenant settings so that the tenant runs in a fully configurable mode. Usually tenants are created in a mode, that limits options to customize the tenant. This setting is reflected by the Organization Config proptery IsDehydrated: True . Running this resource will set the property to false. Currently there is no setting available to undo Enable-OrganizationCustomization. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { O365OrgCustomizationSetting 'O365OrgCustomizationSetting' { IsSingleInstance = \"Yes\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"O365OrgCustomizationSetting"},{"location":"resources/office365/O365User/","text":"O365User \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values UserPrincipalName Key String The login name of the user DisplayName Write String The display name for the user FirstName Write String The first name of the user LastName Write String The last name of the user UsageLocation Write String The country code the user will be assigned to LicenseAssignment Write StringArray[] The account SKU Id for the license to be assigned to the user Password Write PSCredential The password for the account. The parameter is a PSCredential object, but only the Password component will be used City Write String The City name of the user Country Write String The Country name of the user Department Write String The Department name of the user Fax Write String The Fax Number of the user MobilePhone Write String The Mobile Phone Number of the user Office Write String The Office Name of the user PasswordNeverExpires Write Boolean Specifies whether the user password expires periodically. Default value is false PhoneNumber Write String The Phone Number of the user PostalCode Write String The Postal Code of the user PreferredDataLocation Write String The Prefered location to store data of the user PreferredLanguage Write String The Prefered Language of the user State Write String Specifies the state or province where the user is located StreetAddress Write String Specifies the street address of the user Title Write String Specifies the title of the user UserType Write String Specifies the title of the user Guest, Member, Other, Viral Ensure Write String Present ensures the user exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Exchange Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com ApplicationSecret Write PSCredential Secret of the Azure Active Directory application used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. O365User \u00b6 Description \u00b6 This resource allows users to create Office 365 Users and assign them licenses. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { O365User 'ConfigureJohnSMith' { UserPrincipalName = \"John.Smith@O365DSC1.onmicrosoft.com\" FirstName = \"John\" LastName = \"Smith\" DisplayName = \"John J. Smith\" City = \"Gatineau\" Country = \"Canada\" Office = \"Ottawa - Queen\" LicenseAssignment = @( \"O365dsc1:ENTERPRISEPREMIUM\" ) UsageLocation = \"US\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"O365User"},{"location":"resources/onedrive/ODSettings/","text":"ODSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Should be set to yes Yes OneDriveStorageQuota Write UInt32 The resource quota to apply to the OneDrive sites OrphanedPersonalSitesRetentionPeriod Write UInt32 Number of days after a user's account is deleted that their OneDrive for Business content will be deleted. OneDriveForGuestsEnabled Write Boolean Enable guest acess for OneDrive NotifyOwnersWhenInvitationsAccepted Write Boolean When true and when an external user accepts an invitation to a resource in a user\u00e2\u0080\u0099s OneDrive for Business owner is notified by e-mail NotificationsInOneDriveForBusinessEnabled Write Boolean Turn notifications on/off OneDrive ODBMembersCanShare Write String Lets administrators set policy on re-sharing behavior in OneDrive for Business On, Off, Unspecified ODBAccessRequests Write String Lets administrators set policy on access requests and requests to share in OneDrive for Business On, Off, Unspecified BlockMacSync Write Boolean Block sync client on Mac DisableReportProblemDialog Write Boolean Disable dialog box TenantRestrictionEnabled Write Boolean Enable/disable Safe domain List - if disabled overrides DomainGuids value DomainGuids Write StringArray[] Safe domain list ExcludedFileExtensions Write StringArray[] Exclude files from being synced to OneDrive GrooveBlockOption Write String Groove block options OptOut, HardOptIn, SoftOptIn Ensure Write String Present ensures the user exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. ODSettings \u00b6 Description \u00b6 This resource allows admins to manage blocked file types, blocked domains and MAC Sync. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { ODSettings 'OneDriveSettings' { IsSingleInstance = \"Yes\" OneDriveStorageQuota = \"1024\" ExcludedFileExtensions = @( \"pst\" ) DomainGuids = \"786548dd-877b-4760-a749-6b1efbc1190a\" GrooveBlockOption = \"OptOut\" DisableReportProblemDialog = $true BlockMacSync = $true OrphanedPersonalSitesRetentionPeriod = \"45\" OneDriveForGuestsEnabled = $false ODBAccessRequests = \"On\" ODBMembersCanShare = \"On\" NotifyOwnersWhenInvitationsAccepted = $false NotificationsInOneDriveForBusinessEnabled = $false Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"ODSettings"},{"location":"resources/planner/PlannerBucket/","text":"PlannerBucket \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name of the Planner Bucket. PlanId Key String Id of the Plan to which the bucket is associated with. BucketId Write String Id of the Bucket, if known. Ensure Write String Present ensures the Plan exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. PlannerBucket \u00b6 Description \u00b6 This resource is used to configure the Planner Buckets. This resource deals with content. Using the Monitoring feature of Microsoft365DSC on content resources is not recommended. Examples \u00b6 Example 1 \u00b6 This example creates a new Planner Bucket in a Plan. Configuration Example { Import-DscResource -ModuleName Microsoft365DSC node localhost { PlannerBucket 'ContosoPlannerBucket' { PlanId = \"1234567890\" Name = \"Contoso Bucket\" Ensure = \"Present\" ApplicationId = \"12345-12345-12345-12345-12345\" TenantId = \"12345-12345-12345-12345-12345\" CertificateThumbprint = \"1234567890\" } } }","title":"PlannerBucket"},{"location":"resources/planner/PlannerPlan/","text":"PlannerPlan \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Title Key String The Title of the Planner Plan. OwnerGroup Key String Name of Id of the Azure Active Directory Group who owns the plan Ensure Write String Present ensures the Plan exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. PlannerPlan \u00b6 Description \u00b6 This resource is used to configure the Planner Plans. This resource deals with content. Using the Monitoring feature of Microsoft365DSC on content resources is not recommended. Examples \u00b6 Example 1 \u00b6 This example creates a new Plan in Planner. Configuration Example { Import-DscResource -ModuleName Microsoft365DSC node localhost { PlannerPlan 'ContosoPlannerPlan' { Title = \"Contoso Plan\" OwnerGroup = \"Contoso Group\" Ensure = \"Present\" ApplicationId = \"12345-12345-12345-12345-12345\" TenantId = \"12345-12345-12345-12345-12345\" CertificateThumbprint = \"1234567890\" } } }","title":"PlannerPlan"},{"location":"resources/planner/PlannerTask/","text":"PlannerTask \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Alias Write String Alias of for the attachment. Uri Write String Uri of the link to the attachment. Type Write String Type of attachment. PowerPoint, Word, Excel, Other Title Write String Title of the checklist item. Completed Write String True if the item is completed, false otherwise. PlanId Key String Id of the Planner Plan which contains the Task. Title Key String The Title of the Planner Task. Categories Write StringArray[] List of categories assigned to the task. Pink, Red, Yellow, Green, Blue, Purple AssignedUsers Write StringArray[] List of users assigned to the tasks (ex: @('john.smith@contoso.com', 'bob.houle@contoso.com')). Attachments Write InstanceArray[] List of links to attachments assigned to the task. Checklist Write InstanceArray[] List checklist items associated with the task. Notes Write String Description of the Task. Bucket Write String The Id of the bucket that contains the task. TaskId Write String Id of the Task, if known. StartDateTime Write String Date and Time for the start of the Task. DueDateTime Write String Date and Time for the task is due for completion. PercentComplete Write UInt32 Percentage completed of the Task. Value can only be between 0 and 100. Priority Write UInt32 Priority of the Task. Value can only be between 1 and 10. ConversationThreadId Write String Id of the group conversation thread associated with the comments section for this task. Ensure Write String Present ensures the Plan exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. ApplicationSecret Write PSCredential Secret of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. PlannerTask \u00b6 Description \u00b6 This resource is used to configure the Planner Tasks. This resource deals with content. Using the Monitoring feature of Microsoft365DSC on content resources is not recommended. Examples \u00b6 Example 1 \u00b6 This example creates a new Planner Task in a Plan. Configuration Example { Import-DscResource -ModuleName Microsoft365DSC node localhost { PlannerTask 'ContosoPlannerTask' { PlanId = \"1234567890\" Title = \"Contoso Task\" StartDateTime = \"2020-06-09\" Priority = 7 PercentComplete = 75 Ensure = \"Present\" ApplicationId = \"12345-12345-12345-12345-12345\" TenantId = \"12345-12345-12345-12345-12345\" CertificateThumbprint = \"1234567890\" } } }","title":"PlannerTask"},{"location":"resources/power-platform/PPPowerAppsEnvironment/","text":"PPPowerAppsEnvironment \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Display name for the PowerApps environment Location Required String Location of the PowerApps environment. canada, unitedstates, europe, asia, australia, india, japan, unitedkingdom, unitedstatesfirstrelease, southamerica, france, usgov EnvironmentSKU Required String Environment type. Production, Standard, Trial, Sandbox, SubscriptionBasedTrial, Teams Ensure Write String Only accepted value is 'Present'. Present, Absent Credential Write PSCredential Credentials of the Power Platform Admin PPPowerAppsEnvironment \u00b6 Description \u00b6 This resources configures the PowerApps Environment. Examples \u00b6 Example 1 \u00b6 This example creates a new PowerApps environment in production. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { PPPowerAppsEnvironment 'PowerAppsDemoEnvironment' { DisplayName = \"My Demo Environment\" EnvironmentSKU = \"Production\" Location = \"canada\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"PPPowerAppsEnvironment"},{"location":"resources/power-platform/PPTenantIsolationSettings/","text":"PPTenantIsolationSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values TenantName Required String Name of the trusted tenant. Direction Required String Direction of tenant trust. Inbound, Outbound, Both IsSingleInstance Key String Should be set to yes Yes Enabled Write Boolean When set to true this will enable the tenant isolation settings. Rules Write InstanceArray[] The exact list of tenant rules to be configured. RulesToInclude Write InstanceArray[] A list of tenant rules that has to be added. RulesToExclude Write InstanceArray[] A list of tenant rules that is now allowed to be added. Credential Write PSCredential Credentials of the Power Platform Admin PPTenantSettingsIsolationSettings \u00b6 Description \u00b6 This resource configures the Tenant Isolation settings for a Power Platform Tenant. Examples \u00b6 Example 1 \u00b6 This example sets Power Platform tenant isolation settings. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { PPTenantIsolationSettings 'PowerPlatformTenantSettings' { IsSingleInstance = 'Yes' Enable = $true Rules = @( MSFT_PPTenantRule { TenantName = 'contoso.onmicrosoft.com' Direction = 'Outbound' } MSFT_PPTenantRule { TenantName = 'fabrikam.onmicrosoft.com' Direction = 'Both' } ) Credential = $credsGlobalAdmin } } } Example 2 \u00b6 This example sets Power Platform tenant isolation settings. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { PPTenantIsolationSettings 'PowerPlatformTenantSettings' { IsSingleInstance = 'Yes' Enable = $true RulesToInclude = @( MSFT_PPTenantRule { TenantName = 'contoso.onmicrosoft.com' Direction = 'Inbound' } ) RulesToExclude = @( MSFT_PPTenantRule { TenantName = 'fabrikam.onmicrosoft.com' Direction = 'Both' } ) Credential = $credsGlobalAdmin } } }","title":"PPTenantIsolationSettings"},{"location":"resources/power-platform/PPTenantSettings/","text":"PPTenantSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Should be set to yes Yes WalkMeOptOut Write Boolean When set to true this will disable the Walk Me guidance. DisableNPSCommentsReachout Write Boolean When set to true this will disable the NPS Comments Reachout. DisableNewsletterSendout Write Boolean When set to true this will disable the monthly newsletters. DisableEnvironmentCreationByNonAdminUsers Write Boolean When set to true this will disable production environment creation by non-admin users. DisablePortalsCreationByNonAdminUsers Write Boolean When set to true this will disable portal creation by non-admin users. DisableSurveyFeedback Write Boolean When set to true this will disable survey feedback that sometimes pops up on top of an app. DisableTrialEnvironmentCreationByNonAdminUsers Write Boolean When set to true this will disable trial environment creation by non-admin users. DisableCapacityAllocationByEnvironmentAdmins Write Boolean When set to true this will disable capacity allocation by environment admins. DisableSupportTicketsVisibleByAllUsers Write Boolean When set to true this will disable support tickets to be visible by all users. DisableDocsSearch Write Boolean When set to true this will disable docs search in the Office 365 Suite navigation bar. DisableCommunitySearch Write Boolean When set to true this will disable community search in the Office 365 Suite navigation bar. DisableBingVideoSearch Write Boolean When set to true this will disable Bing video search in the Office 365 Suite navigation bar. DisableShareWithEveryone Write Boolean When set to true this will disable the ability to share apps with the whole tenant. EnableGuestsToMake Write Boolean When set to true this will enable the ability for guests in your tenant to create Power Platform resources. ShareWithColleaguesUserLimit Write UInt32 The amount of people an app can be shared with in Dataverse for Teams (maximum is 10,000). Credential Write PSCredential Credentials of the Power Platform Admin PPTenantSettings \u00b6 Description \u00b6 This resource configures a Power Platform Tenant. Examples \u00b6 Example 1 \u00b6 This example sets Power Platform tenant settings. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { PPTenantSettings 'PowerPlatformTenantSettings' { IsSingleInstance = 'Yes' WalkMeOptOut = $false DisableNPSCommentsReachout = $false DisableNewsletterSendout = $false DisableEnvironmentCreationByNonAdminUsers = $true DisablePortalsCreationByNonAdminUsers = $false DisableSurveyFeedback = $false DisableTrialEnvironmentCreationByNonAdminUsers = $false DisableCapacityAllocationByEnvironmentAdmins = $true DisableSupportTicketsVisibleByAllUsers = $false DisableDocsSearch = $false DisableCommunitySearch = $false DisableBingVideoSearch = $false DisableShareWithEveryone = $false EnableGuestsToMake = $false ShareWithColleaguesUserLimit = 10000 Credential = $credsGlobalAdmin } } }","title":"PPTenantSettings"},{"location":"resources/security-compliance/SCAuditConfigurationPolicy/","text":"SCAuditConfigurationPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Workload Key String Workload associated with the policy. Exchange, SharePoint, OneDriveForBusiness Ensure Write String Specify if this policy should exist or not. Present, Absent Credential Required PSCredential Credentials of the Global Admin SCAuditConfigurationPolicy \u00b6 Description \u00b6 This resource configures an Audit ConfigurationPolicy in Security and Compliance Center. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCAuditConfigurationPolicy 'ExchangeAuditPolicy' { Workload = \"Exchange\" Ensure = \"Present\" Credential = $credsGlobalAdmin } SCAuditConfigurationPolicy 'OneDriveAuditPolicy' { Workload = \"OneDriveForBusiness\" Ensure = \"Present\" Credential = $credsGlobalAdmin } SCAuditConfigurationPolicy 'SharePointAuditPolicy' { Workload = \"SharePoint\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCAuditConfigurationPolicy"},{"location":"resources/security-compliance/SCAutoSensitivityLabelPolicy/","text":"SCAutoSensitivityLabelPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name for the sensitivity label. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks. Ensure Write String Specify if this label policy should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. ApplySensitivityLabel Write String The ApplySensitivityLabel parameter specifies the label to use for the auto label policy. ExchangeSender Write StringArray[] The ExchangeSender parameter specifies which senders to include in the policy. ExchangeSenderException Write StringArray[] The ExchangeSenderException parameter specifies which senders to exclude in the policy. ExchangeSenderMemberOf Write StringArray[] The ExchangeSenderMemberOf parameter specifies the distribution groups, mail-enabled security groups, or dynamic distribution groups to include in the auto-labeling policy. ExchangeSenderMemberOfException Write StringArray[] he ExchangeSenderMemberOf parameter specifies the distribution groups, mail-enabled security groups, or dynamic distribution groups to exclude from the auto-labeling policy. ExchangeLocation Write StringArray[] The ExchangeSender parameter specifies which senders to include in the policy. AddExchangeLocation Write StringArray[] This AddExchangeLocation parameter specifies new Exchange locations to be added to the policy without affecting the existing ones. RemoveExchangeLocation Write StringArray[] The RemoveExchangeLocation parameter removes locations on Exchange from the policy. Mode Write String The Mode parameter specifies the action and notification level of the auto-labeling policy. Enable, Disable, TestWithNotifications, TestWithoutNotifications OneDriveLocation Write StringArray[] The OneDriveLocation parameter specifies the OneDrive for Business sites to include. You identify the site by its URL value, or you can use the value. AddOneDriveLocation Write StringArray[] The AddOneDriveLocation parameter specifies the OneDrive for Business sites to add to the list of included sites when you aren't using the value All for the OneDriveLocation parameter. RemoveOneDriveLocation Write StringArray[] The RemoveOneDriveLocation parameter specifies the OneDrive for Business sites to remove from the list of included sites when you aren't using the value All for the OneDriveLocation parameter. AddOneDriveLocationException Write StringArray[] This parameter specifies the OneDrive for Business sites to exclude when you use the value All for the OneDriveLocation parameter. RemoveOneDriveLocationException Write StringArray[] This RemoveOneDriveLocationException parameter specifies the OneDrive for Business sites to remove from the list of excluded sites when you use the value All for the OneDriveLocation parameter. OneDriveLocationException Write StringArray[] The AddOneDriveLocationException parameter specifies the OneDrive for Business sites to add to the list of excluded sites when you use the value All for the OneDriveLocation parameter. Priority Write UInt32 The Priority parameter specifies the priority of the policy. The highest priority policy will take action over lower priority policies if two policies are applicable for a file. SharePointLocation Write StringArray[] The SharePointLocation parameter specifies the SharePoint Online sites to include. You identify the site by its URL value, or you can use the value All to include all sites. SharePointLocationException Write StringArray[] This parameter specifies the SharePoint Online sites to exclude when you use the value All for the SharePointLocation parameter. AddSharePointLocationException Write StringArray[] The AddSharePointLocation parameter specifies the SharePoint Online sites to add to the list of included sites when you aren't using the value All for the SharePointLocation parameter. RemoveSharePointLocationException Write StringArray[] The RemoveSharePointLocationException parameter specifies the SharePoint Online sites to remove from the list of excluded sites when you use the value All for the SharePointLocation parameter. AddSharePointLocation Write StringArray[] The AddSharePointLocation parameter specifies the SharePoint Online sites to add to the list of included sites when you aren't using the value All for the SharePointLocation parameter. RemoveSharePointLocation Write StringArray[] The RemoveSharePointLocation parameter specifies the SharePoint Online sites to remove from the list of included sites when you aren't using the value All for the SharePointLocation parameter. Credential Required PSCredential Credentials of the Exchange Global Admin SCAutoSensitivityLabelPolicy \u00b6 Description \u00b6 This resource configures a Auto Sensitivity label policy in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $Credscredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCAutoSensitivityLabelPolicy 'TestPolicy' { ApplySensitivityLabel = \"TopSecret\" ; Comment = \"This is a test\" ; Credential = $Credscredential ; Ensure = \"Present\" ; ExchangeLocation = @( \"All\" ); Mode = \"Enable\" ; Name = \"TestPolicy\" ; Priority = 0 ; } } }","title":"SCAutoSensitivityLabelPolicy"},{"location":"resources/security-compliance/SCAutoSensitivityLabelRule/","text":"SCAutoSensitivityLabelRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values name Required String Name of the Sensitive Information Content id Write String Id of the Sensitive Information Content maxconfidence Write String Maximum Confidence level value for the Sensitive Information minconfidence Write String Minimum Confidence level value for the Sensitive Information classifiertype Write String Type of Classifier value for the Sensitive Information mincount Write String Minimum Count value for the Sensitive Information maxcount Write String Maximum Count value for the Sensitive Information name Required String Name of the Sensitive Label id Write String Id of the Sensitive Information label type Write String Type of the Sensitive Information label SensitiveInformation Write InstanceArray[] Sensitive Information Content Types Labels Write InstanceArray[] Sensitive Information Labels Name Required String Name of the group Operator Required String Operator And, Or SensitiveInformation Write InstanceArray[] Sensitive Information Content Types Groups Write InstanceArray[] Groups of sensitive information types. Operator Write String Operator And, Or Name Key String Name of the Rule. Policy Required String Name of the associated Policy. AccessScope Write String The AccessScope parameter specifies a condition for the auto-labeling policy rule that's based on the access scope of the content. The rule is applied to content that matches the specified access scope. Valid values are: InOrganization, NotInOrganization, None InOrganization, NotInOrganization, None AnyOfRecipientAddressContainsWords Write String The AnyOfRecipientAddressContainsWords parameter specifies a condition for the auto-labeling policy rule that looks for words or phrases in recipient email addresses. You can specify multiple words or phrases separated by commas. AnyOfRecipientAddressMatchesPatterns Write String The AnyOfRecipientAddressMatchesPatterns parameter specifies a condition for the auto-labeling policy rule that looks for text patterns in recipient email addresses by using regular expressions. Comment Write String The Comment parameter specifies an optional comment. ContentContainsSensitiveInformation Write Instance The ContentContainsSensitiveInformation parameter specifies a condition for the rule that's based on a sensitive information type match in content. The rule is applied to content that contains the specified sensitive information type. ContentExtensionMatchesWords Write String The ContentExtensionMatchesWords parameter specifies a condition for the auto-labeling policy rule that looks for words in file name extensions. You can specify multiple words separated by commas. Disabled Write Boolean The Disabled parameter specifies whether the auto-labeling policy rule is enabled or disabled. DocumentIsPasswordProtected Write Boolean The DocumentIsPasswordProtected parameter specifies a condition for the auto-labeling policy rule that looks for password protected files (because the contents of the file can't be inspected). Password detection only works for Office documents and .zip files. DocumentIsUnsupported Write Boolean The DocumentIsUnsupported parameter specifies a condition for the auto-labeling policy rule that looks for files that can't be scanned. ExceptIfAccessScope Write String The ExceptIfAccessScopeAccessScope parameter specifies an exception for the auto-labeling policy rule that's based on the access scope of the content. The rule isn't applied to content that matches the specified access scope. Valid values are: InOrganization, NotInOrganization, None InOrganization, NotInOrganization, None ExceptIfAnyOfRecipientAddressContainsWords Write String The ExceptIfAnyOfRecipientAddressContainsWords parameter specifies an exception for the auto-labeling policy rule that looks for words or phrases in recipient email addresses. You can specify multiple words separated by commas. ExceptIfAnyOfRecipientAddressMatchesPatterns Write String The ExceptIfAnyOfRecipientAddressMatchesPatterns parameter specifies an exception for the auto-labeling policy rule that looks for text patterns in recipient email addresses by using regular expressions. ExceptIfContentContainsSensitiveInformation Write Instance The ExceptIfContentContainsSensitiveInformation parameter specifies an exception for the auto-labeling policy rule that's based on a sensitive information type match in content. The rule isn't applied to content that contains the specified sensitive information type. ExceptIfContentExtensionMatchesWords Write StringArray[] The ExceptIfContentExtensionMatchesWords parameter specifies an exception for the auto-labeling policy rule that looks for words in file name extensions. You can specify multiple words separated by commas. ExceptIfDocumentIsPasswordProtected Write Boolean The ExceptIfDocumentIsPasswordProtected parameter specifies an exception for the auto-labeling policy rule that looks for password protected files (because the contents of the file can't be inspected). Password detection only works for Office documents and .zip files. ExceptIfDocumentIsUnsupported Write Boolean The ExceptIfDocumentIsUnsupported parameter specifies an exception for the auto-labeling policy rule that looks for files that can't be scanned. ExceptIfFrom Write StringArray[] The ExceptIfFrom parameter specifies an exception for the auto-labeling policy rule that looks for messages from specific senders. You can use any value that uniquely identifies the sender. ExceptIfFromAddressContainsWords Write String The ExceptIfFromAddressContainsWords parameter specifies an exception for the auto-labeling policy rule that looks for words or phrases in the sender's email address. You can specify multiple words or phrases separated by commas. ExceptIfFromAddressMatchesPatterns Write String The ExceptIfFromAddressMatchesPatterns parameter specifies an exception for the auto-labeling policy rule that looks for text patterns in the sender's email address by using regular expressions. ExceptIfFromMemberOf Write StringArray[] The ExceptIfFromMemberOf parameter specifies an exception for the auto-labeling policy rule that looks for messages sent by group members. You identify the group members by their email addresses. You can enter multiple values separated by commas. ExceptIfHeaderMatchesPatterns Write StringArray[] The HeaderMatchesPatterns parameter specifies an exception for the auto-labeling policy rule that looks for text patterns in a header field by using regular expressions. ExceptIfProcessingLimitExceeded Write Boolean The ExceptIfProcessingLimitExceeded parameter specifies an exception for the auto-labeling policy rule that looks for files where scanning couldn't complete. ExceptIfRecipientDomainIs Write StringArray[] The ExceptIfRecipientDomainIs parameter specifies an exception for the auto-labeling policy rule that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. ExceptIfSenderDomainIs Write StringArray[] The ExceptIfSenderDomainIs parameter specifies an exception for the auto-labeling policy rule that looks for messages from senders with email address in the specified domains. You can specify multiple values separated by commas. ExceptIfSenderIPRanges Write StringArray[] The ExceptIfSenderIpRanges parameter specifies an exception for the auto-labeling policy rule that looks for senders whose IP addresses matches the specified value, or fall within the specified ranges. ExceptIfSentTo Write StringArray[] The ExceptIfSentTo parameter specifies an exception for the auto-labeling policy rule that looks for recipients in messages. You can use any value that uniquely identifies the recipient. ExceptIfSentToMemberOf Write StringArray[] The ExceptIfSentToMemberOf parameter specifies an exception for the auto-labeling policy rule that looks for messages sent to members of distribution groups, dynamic distribution groups, or mail-enabled security groups. You identify the groups by email address. You can specify multiple values separated by commas. ExceptIfSubjectMatchesPatterns Write String The ExceptIfSubjectMatchesPatterns parameter specifies an exception for the auto-labeling policy rule that looks for text patterns in the Subject field of messages by using regular expressions. FromAddressContainsWords Write String The FromAddressContainsWords parameter specifies a condition for the auto-labeling policy rule that looks for words or phrases in the sender's email address. You can specify multiple words or phrases separated by commas. FromAddressMatchesPatterns Write String The FromAddressMatchesPatterns parameter specifies a condition for the auto-labeling policy rule that looks for text patterns in the sender's email address by using regular expressions. HeaderMatchesPatterns Write StringArray[] The HeaderMatchesPatterns parameter specifies a condition for the auto-labeling policy rule that looks for text patterns in a header field by using regular expressions. ProcessingLimitExceeded Write Boolean The ProcessingLimitExceeded parameter specifies a condition for the auto-labeling policy rule that looks for files where scanning couldn't complete. You can use this condition to create rules that work together to identify and process messages where the content couldn't be fully scanned. RecipientDomainIs Write StringArray[] The RecipientDomainIs parameter specifies a condition for the auto-labeling policy rule that looks for recipients with email address in the specified domains. You can specify multiple domains separated by commas. ReportSeverityLevel Write String The ReportSeverityLevel parameter specifies the severity level of the incident report for content detections based on the rule. Valid values are: None, Low, Medium, High None, Low, Medium, High RuleErrorAction Write String The RuleErrorAction parameter specifies what to do if an error is encountered during the evaluation of the rule. Valid values are: Ignore, RetryThenBlock, blank Ignore, RetryThenBlock, SenderDomainIs Write StringArray[] The SenderDomainIs parameter specifies a condition for the auto-labeling policy rule that looks for messages from senders with email address in the specified domains. SenderIPRanges Write StringArray[] The SenderIpRanges parameter specifies a condition for the auto-sensitivity policy rule that looks for senders whose IP addresses matches the specified value, or fall within the specified ranges. SentTo Write StringArray[] The SentTo parameter specifies a condition for the auto-sensitivity policy rule that looks for recipients in messages. You can use any value that uniquely identifies the recipient. SentToMemberOf Write StringArray[] The SentToMemberOf parameter specifies a condition for the auto-labeling policy rule that looks for messages sent to members of distribution groups, dynamic distribution groups, or mail-enabled security groups. You identify the groups by email address. SubjectMatchesPatterns Write String The SubjectMatchesPatterns parameter specifies a condition for the auto-labeling policy rule that looks for text patterns in the Subject field of messages by using regular expressions. Workload Key String Workload the rule is associated with. Value can be: Exchange, SharePoint, OneDriveForBusiness Exchange, SharePoint, OneDriveForBusiness Ensure Write String Specify if this rule should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCAutoSensitivityLabelRule \u00b6 Description \u00b6 This resource configures a Auto Sensitivity Label Rule in Security and Compliance Center. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $Credscredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCAutoSensitivityLabelRule 'TestRule' { Comment = \"Detects when 1 to 9 credit card numbers are contained in Exchange items\" ; ContentContainsSensitiveInformation = MSFT_SCDLPContainsSensitiveInformation { operator = 'And' Groups = @( MSFT_SCDLPContainsSensitiveInformationGroup { operator = 'And' name = 'Default' SensitiveInformation = @( MSFT_SCDLPSensitiveInformation { name = 'Credit Card Number' id = '50842eb7-edc8-4019-85dd-5a5c1f2bb085' maxconfidence = '100' minconfidence = '85' classifiertype = 'Content' mincount = '1' maxcount = '9' } ) } ) }; Credential = $Credscredential ; Disabled = $False ; DocumentIsPasswordProtected = $False ; DocumentIsUnsupported = $False ; Ensure = \"Present\" ; ExceptIfDocumentIsPasswordProtected = $False ; ExceptIfDocumentIsUnsupported = $False ; ExceptIfProcessingLimitExceeded = $False ; Name = \"My Test Rule\" ; Policy = \"My Test Policy\" ; ProcessingLimitExceeded = $False ; ReportSeverityLevel = \"Low\" ; Workload = @( \"Exchange\" , \"SharePoint\" , \"OneDriveForBusiness\" ) } } }","title":"SCAutoSensitivityLabelRule"},{"location":"resources/security-compliance/SCCaseHoldPolicy/","text":"SCCaseHoldPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the case hold policy. Case Key String The Case parameter specifies the eDiscovery case that you want to associate with the case hold policy. Comment Write String The Comment parameter specifies an optional comment. Enabled Write Boolean The Enabled parameter specifies whether the policy is enabled or disabled. ExchangeLocation Write StringArray[] The ExchangeLocation parameter specifies the mailboxes to include in the policy. PublicFolderLocation Write StringArray[] The PublicFolderLocation parameter specifies that you want to include all public folders in the case hold policy. You use the value All for this parameter. SharePointLocation Write StringArray[] The SharePointLocation parameter specifies the SharePoint Online and OneDrive for Business sites to include. You identify a site by its URL value. Ensure Write String Specify if this policy should exist or not. Present, Absent Credential Required PSCredential Credentials of the Global Admin SCCaseHoldPolicy \u00b6 Description \u00b6 This resource configures a eDiscovery Case Policy in Security and Compliance Center. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCCaseHoldPolicy 'CaseHoldPolicy' { Case = \"Test Case\" ExchangeLocation = \"DemoGroup@contoso.onmicrosoft.com\" Name = \"Demo Hold\" PublicFolderLocation = \"All\" Comment = \"This is a demo\" Enabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCCaseHoldPolicy"},{"location":"resources/security-compliance/SCCaseHoldRule/","text":"SCCaseHoldRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies a unique name for the case hold rule. Policy Key String The Policy parameter specifies the case hold policy that contains the rule. You can use any value that uniquely identifies the policy. Comment Write String The Comment parameter specifies an optional comment. ContentMatchQuery Write String The ContentMatchQuery parameter specifies a content search filter. Use this parameter to create a query-based hold so only the content that matches the specified search query is placed on hold. This parameter uses a text search string or a query that's formatted by using the Keyword Query Language (KQL). Disabled Write Boolean The Disabled parameter specifies whether the case hold rule is enabled or disabled. Ensure Write String Present ensures the rule exists, absent ensures it is removed Present, Absent Credential Required PSCredential Credentials of the Global Admin Account SCCaseHoldRule \u00b6 Description \u00b6 This resource configures an eDiscovery Case Hold Rule in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCCaseHoldRule 'ConfigureCaseHoldRule' { Name = \"My Rule\" Policy = \"My Policy\" Comment = \"This is a demo rule\" Disabled = $false ContentMatchQuery = \"filename:2016 budget filetype:xlsx\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCCaseHoldRule"},{"location":"resources/security-compliance/SCComplianceCase/","text":"SCComplianceCase \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the compliance case. Description Write String The description of the case. Ensure Write String Specify if this case should exist or not. Present, Absent Status Write String Status for the case. Can either be 'Active' or 'Closed' Active, Closed Credential Required PSCredential Credentials of the Global Admin Account SCComplianceCase \u00b6 Description \u00b6 This resource configures an eDiscovery Case in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCComplianceCase 'ConfigureComplianceCase' { Name = \"MyCase\" Description = \"MyPolicy\" Status = \"Active\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCComplianceCase"},{"location":"resources/security-compliance/SCComplianceSearch/","text":"SCComplianceSearch \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the complaiance tag. Case Write String Compliance Case (eDiscovery) that this Search is associated with AllowNotFoundExchangeLocationsEnabled Write Boolean The AllowNotFoundExchangeLocationsEnabled parameter specifies whether to include mailboxes other than regular user mailboxes in the compliance search. ContentMatchQuery Write String The ContentMatchQuery parameter specifies a content search filter. This parameter uses a text search string or a query that's formatted by using the Keyword Query Language (KQL). Description Write String The Description parameter specifies an optional description for the compliance search. If the value contains spaces, enclose the value in quotation marks. ExchangeLocation Write StringArray[] The ExchangeLocation parameter specifies the mailboxes to include. ExchangeLocationExclusion Write StringArray[] This parameter specifies the mailboxes to exclude when you use the value All for the ExchangeLocation parameter. HoldNames Write StringArray[] The HoldNames parameter specifies that the content locations that have been placed on hold in the specified eDiscovery case will be searched. You use the value All for this parameter. You also need to specify the name of an eDiscovery case by using the Case parameter. IncludeUserAppContent Write Boolean The IncludeUserAppContent parameter specifies that you want to search the cloud-based storage location for users who don't have a regular Office 365 user account in your organization. These types of users include users without an Exchange Online license who use Office applications, Office 365 guest users, and on-premises users whose identity is synchronized with your Office 365 organization. Language Write String The Language parameter specifies the language for the compliance search. Valid input for this parameter is a supported culture code value from the Microsoft .NET Framework CultureInfo class. For example, da-DK for Danish or ja-JP for Japanese. PublicFolderLocation Write StringArray[] The PublicFolderLocation parameter specifies that you want to include all public folders in the search. You use the value All for this parameter. SharePointLocation Write StringArray[] The SharePointLocation parameter specifies the SharePoint Online sites to include. You identify the site by its URL value, or you can use the value All to include all sites. SharePointLocationExclusion Write StringArray[] This parameter specifies the SharePoint Online sites to exclude when you use the value All for the SharePointLocation parameter. You identify the site by its URL value. Ensure Write String Specify if this search should exist or not. Present, Absent Credential Required PSCredential Credentials of the Global Admin Account SCComplianceSearch \u00b6 Description \u00b6 This resource configures an Compliance Search (eDiscovery) in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCComplianceSearch 'ConfigureComplianceSearch' { Case = \"Demo Search\" HoldNames = @() Name = \"Demo Compliance Search\" Language = \"iv\" AllowNotFoundExchangeLocationsEnabled = $False SharePointLocation = @( \"All\" ) Credential = $credsGlobalAdmin Ensure = \"Present\" } } }","title":"SCComplianceSearch"},{"location":"resources/security-compliance/SCComplianceSearchAction/","text":"SCComplianceSearchAction \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Action Key String The Action parameter specifies what type of action to define. Accepted values are Export, Retention and Purge. Export, Preview, Purge, Retention SearchName Key String The SearchName parameter specifies the name of the existing content search to associate with the content search action. You can specify multiple content searches separated by commas. FileTypeExclusionsForUnindexedItems Write StringArray[] The FileTypeExclusionsForUnindexedItems specifies the file types to exclude because they can't be indexed. You can specify multiple values separated by commas. EnableDedupe Write Boolean The EnableDedupe parameter eliminates duplication of messages when you export content search results. IncludeCredential Write Boolean The IncludeCredential switch specifies whether to include the credential in the results. IncludeSharePointDocumentVersions Write Boolean The IncludeSharePointDocumentVersions parameter specifies whether to export previous versions of the document when you use the Export switch. PurgeType Write String The PurgeType parameter specifies how to remove items when the action is Purge. SoftDelete, HardDelete RetryOnError Write Boolean The RetryOnError switch specifies whether to retry the action on any items that failed without re-running the entire action all over again. ActionScope Write String The ActionScope parameter specifies the items to include when the action is Export. IndexedItemsOnly, UnindexedItemsOnly, BothIndexedAndUnindexedItems Ensure Write String Specify if this action should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCComplianceSearchAction \u00b6 Description \u00b6 This resource configures a Compliance Search Action in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCComplianceSearchAction 'ComplianceSearchActionPurge' { Action = \"Purge\" PurgeType = \"SoftDelete\" IncludeCredential = $True RetryOnError = $False SearchName = \"Demo Search\" Ensure = \"Present\" Credential = $credsGlobalAdmin } SCComplianceSearchAction 'ComplianceSearchActionExport' { IncludeSharePointDocumentVersions = $False Action = \"Export\" SearchName = \"Demo Search\" FileTypeExclusionsForUnindexedItems = $null IncludeCredential = $False RetryOnError = $False ActionScope = \"IndexedItemsOnly\" EnableDedupe = $False Ensure = \"Present\" Credential = $credsGlobalAdmin } SCComplianceSearchAction 'ComplianceSearchActionRetention' { IncludeSharePointDocumentVersions = $False Action = \"Retention\" SearchName = \"Demo Search\" FileTypeExclusionsForUnindexedItems = $null IncludeCredential = $False RetryOnError = $False ActionScope = \"IndexedItemsOnly\" EnableDedupe = $False Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCComplianceSearchAction"},{"location":"resources/security-compliance/SCComplianceTag/","text":"SCComplianceTag \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values FilePlanPropertyDepartment Write String File plan department. Can get list by running Get-FilePlanPropertyDepartment. FilePlanPropertyAuthority Write String File plan Authority. Can get list by running Get-FilePlanPropertyAuthority. FilePlanPropertyCategory Write String File plan category. Can get a list by running Get-FilePlanPropertyCategory. FilePlanPropertyCitation Write String File plan citation. Can get a list by running Get-FilePlanPropertyCitation. FilePlanPropertyReferenceId Write String File plan reference id. Can get a list by running Get-FilePlanPropertyReferenceId. FilePlanPropertySubCategory Write String File plan subcategory. Can get a list by running Get-FilePlanPropertySubCategory. Name Key String The Name parameter specifies the unique name of the complaiance tag. Ensure Write String Specify if this rule should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. EventType Write String The EventType parameter specifies the retention rule that's associated with the label. IsRecordLabel Write Boolean The IsRecordLabel parameter specifies whether the label is a record label. Notes Write String The Notes parameter specifies an optional note. If you specify a value that contains spaces, enclose the value in quotation marks, for example: 'This is a user note' Regulatory Write Boolean Regulatory description FilePlanProperty Write Instance The FilePlanProperty parameter specifies the file plan properties to include in the label. ReviewerEmail Write StringArray[] The ReviewerEmail parameter specifies the email address of a reviewer for Delete and KeepAndDelete retention actions. You can specify multiple email addresses separated by commas. RetentionDuration Write String The RetentionDuration parameter specifies the hold duration for the retention rule. Valid values are: An integer - The hold duration in days, Unlimited - The content is held indefinitely. RetentionAction Write String The RetentionAction parameter specifies the action for the label. Valid values are: Delete, Keep or KeepAndDelete. Delete, Keep, KeepAndDelete RetentionType Write String The RetentionType parameter specifies whether the retention duration is calculated from the content creation date, tagged date, or last modification date. Valid values are: CreationAgeInDays, EventAgeInDays,ModificationAgeInDays, or TaggedAgeInDays. CreationAgeInDays, EventAgeInDays, ModificationAgeInDays, TaggedAgeInDays Credential Required PSCredential Credentials of the Exchange Global Admin SCComplianceTag \u00b6 Description \u00b6 This resource configures a Compliance Tag in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCComplianceTag 'ConfigureComplianceTag' { Name = \"DemoTag\" Comment = \"This is a Demo Tag\" RetentionAction = \"Keep\" RetentionDuration = \"1025\" RetentionType = \"ModificationAgeInDays\" FilePlanProperty = MSFT_SCFilePlanProperty { FilePlanPropertyDepartment = \"DemoDept\" FilePlanPropertyCitation = \"DemoCit\" FilePlanPropertyReferenceId = \"DemoRef\" FilePlanPropertyAuthority = \"DemoAuth\" FilePlanPropertyCategory = \"DemoCat\" FilePlanPropertySubcategory = \"DemoSub\" } Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCComplianceTag"},{"location":"resources/security-compliance/SCDLPCompliancePolicy/","text":"SCDLPCompliancePolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the DLP policy. If the value contains spaces, enclose the value in quotation marks. Comment Write String The Comment parameter specifies an optional comment. ExchangeLocation Write StringArray[] The ExchangeLocation parameter specifies Exchange Online mailboxes to include in the DLP policy. You can only use the value All for this parameter to include all mailboxes. ExchangeSenderMemberOf Write StringArray[] Exchange members to include. ExchangeSenderMemberOfException Write StringArray[] Exchange members to exclude. Mode Write String The Mode parameter specifies the action and notification level of the DLP policy. Valid values are: Enable, TestWithNotifications, TestWithoutNotifications, Disable and PendingDeletion. Enable, TestWithNotifications, TestWithoutNotifications, Disable, PendingDeletion OneDriveLocation Write StringArray[] The OneDriveLocation parameter specifies the OneDrive for Business sites to include. You identify the site by its URL value, or you can use the value All to include all sites. OneDriveLocationException Write StringArray[] This parameter specifies the OneDrive for Business sites to exclude when you use the value All for the OneDriveLocation parameter. You identify the site by its URL value. Priority Write UInt32 Priority for the Policy. SharePointLocation Write StringArray[] The SharePointLocation parameter specifies the SharePoint Online sites to include. You identify the site by its URL value, or you can use the value All to include all sites. SharePointLocationException Write StringArray[] This parameter specifies the SharePoint Online sites to exclude when you use the value All for the SharePointLocation parameter. You identify the site by its URL value. TeamsLocation Write StringArray[] Teams locations to include TeamsLocationException Write StringArray[] Teams locations to exclude. Ensure Write String Specify if this policy should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCDLPCompliancePolicy \u00b6 Description \u00b6 This resource configures a Data Loss Prevention Compliance Policy in Security and Compliance Center. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCDLPCompliancePolicy 'ConfigureCompliancePolicy' { Name = \"MyPolicy\" Comment = \"Test Policy\" Priority = 1 SharePointLocation = \"https://contoso.sharepoint.com/sites/demo\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCDLPCompliancePolicy"},{"location":"resources/security-compliance/SCDLPComplianceRule/","text":"SCDLPComplianceRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values name Required String Name of the Sensitive Information Content id Write String Id of the Sensitive Information Content maxconfidence Write String Maximum Confidence level value for the Sensitive Information minconfidence Write String Minimum Confidence level value for the Sensitive Information classifiertype Write String Type of Classifier value for the Sensitive Information mincount Write String Minimum Count value for the Sensitive Information maxcount Write String Maximum Count value for the Sensitive Information name Required String Name of the Sensitive Label id Write String Id of the Sensitive Information label type Write String Type of the Sensitive Information label SensitiveInformation Write InstanceArray[] Sensitive Information Content Types Labels Write InstanceArray[] Sensitive Information Labels Name Required String Name of the group Operator Required String Operator And, Or SensitiveInformation Write InstanceArray[] Sensitive Information Content Types Groups Write InstanceArray[] Groups of sensitive information types. Operator Write String Operator And, Or Name Key String Name of the Rule. Policy Required String Name of the associated DLP Compliance Policy. AccessScope Write StringArray[] The AccessScope parameter specifies a condition for the DLP rule that's based on the access scope of the content. The rule is applied to content that matches the specified access scope. InOrganization, NotInOrganization, None BlockAccess Write Boolean The BlockAccess parameter specifies an action for the DLP rule that blocks access to the source item when the conditions of the rule are met. $true: Blocks further access to the source item that matched the rule. The owner, author, and site owner can still access the item. $false: Allows access to the source item that matched the rule. This is the default value. BlockAccessScope Write String The BlockAccessScope parameter specifies the scope of the block access action. All, PerUser Comment Write String The Comment parameter specifies an optional comment. If you specify a value that contains spaces, enclose the value in quotation marks. ContentContainsSensitiveInformation Write Instance The ContentContainsSensitiveInformation parameter specifies a condition for the rule that's based on a sensitive information type match in content. The rule is applied to content that contains the specified sensitive information type. ExceptIfContentContainsSensitiveInformation Write Instance The ExceptIfContentContainsSensitiveInformation parameter specifies an exception for the rule that's based on a sensitive information type match in content. The rule isn't applied to content that contains the specified sensitive information type. ContentPropertyContainsWords Write StringArray[] The ContentPropertyContainsWords parameter specifies a condition for the DLP rule that's based on a property match in content. The rule is applied to content that contains the specified property. Disabled Write Boolean The Disabled parameter specifies whether the DLP rule is disabled. GenerateAlert Write StringArray[] The GenerateAlert parameter specifies an action for the DLP rule that notifies the specified users when the conditions of the rule are met. GenerateIncidentReport Write StringArray[] The GenerateIncidentReport parameter specifies an action for the DLP rule that sends an incident report to the specified users when the conditions of the rule are met. IncidentReportContent Write StringArray[] The IncidentReportContent parameter specifies the content to include in the report when you use the GenerateIncidentReport parameter. All, Default, DetectionDetails, Detections, DocumentAuthor, DocumentLastModifier, MatchedItem, OriginalContent, RulesMatched, Service, Severity, Title, RetentionLabel, SensitivityLabel NotifyAllowOverride Write StringArray[] The NotifyAllowOverride parameter specifies the notification override options when the conditions of the rule are met. FalsePositive, WithoutJustification, WithJustification NotifyEmailCustomText Write String The NotifyEmailCustomText parameter specifies the custom text in the email notification message that's sent to recipients when the conditions of the rule are met. NotifyPolicyTipCustomText Write String The NotifyPolicyTipCustomText parameter specifies the custom text in the Policy Tip notification message that's shown to recipients when the conditions of the rule are met. The maximum length is 256 characters. HTML tags and tokens (variables) aren't supported. NotifyUser Write StringArray[] The NotifyUser parameter specifies an action for the DLP rule that notifies the specified users when the conditions of the rule are met. ReportSeverityLevel Write String The ReportSeverityLevel parameter specifies the severity level of the incident report for content detections based on the rule. Low, Medium, High, None RuleErrorAction Write String The RuleErrorAction parameter specifies what to do if an error is encountered during the evaluation of the rule. Ignore, RetryThenBlock Ensure Write String Specify if this rule should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin AnyOfRecipientAddressContainsWords Write StringArray[] The AnyOfRecipientAddressContainsWords parameter specifies a condition for the DLP rule that looks for words or phrases in recipient email addresses. AnyOfRecipientAddressMatchesPatterns Write StringArray[] The AnyOfRecipientAddressMatchesPatterns parameter specifies a condition for the DLP rule that looks for text patterns in recipient email addresses by using regular expressions.. RemoveRMSTemplate Write Boolean The RemoveRMSTemplate parameter specifies an action for the DLP rule that removes Office 365 Message Encryption from messages and their attachments. StopPolicyProcessing Write Boolean The StopPolicyProcessing parameter specifies an action that stops processing more DLP policy rules. DocumentIsUnsupported Write Boolean The DocumentIsUnsupported parameter specifies a condition for the DLP rule that looks for files that can't be scanned. ExceptIfDocumentIsUnsupported Write Boolean The ExceptIfDocumentIsUnsupported parameter specifies an exception for the DLP rule that looks for files that can't be scanned. HasSenderOverride Write Boolean The SenderOverride parameter specifies a condition for the rule that looks for messages where the sender chose to override a DLP policy. ExceptIfHasSenderOverride Write Boolean The ExceptIfHasSenderOverride parameter specifies an exception for the rule that looks for messages where the sender chose to override a DLP policy. ProcessingLimitExceeded Write Boolean The ProcessingLimitExceeded parameter specifies a condition for the DLP rule that looks for files where scanning couldn't complete. ExceptIfProcessingLimitExceeded Write Boolean The ExceptIfProcessingLimitExceeded parameter specifies an exception for the DLP rule that looks for files where scanning couldn't complete. DocumentIsPasswordProtected Write Boolean The DocumentIsPasswordProtected parameter specifies a condition for the DLP rule that looks for password protected files (because the contents of the file can't be inspected). Password detection only works for Office documents and .zip files. ExceptIfDocumentIsPasswordProtected Write Boolean The ExceptIfDocumentIsPasswordProtected parameter specifies an exception for the DLP rule that looks for password protected files (because the contents of the file can't be inspected). Password detection only works for Office documents and .zip files. ContentExtensionMatchesWords Write StringArray[] The ContentExtensionMatchesWords parameter specifies a condition for the DLP rule that looks for words in file name extensions. You can specify multiple words separated by commas. ExceptIfContentExtensionMatchesWords Write StringArray[] The ExceptIfContentExtensionMatchesWords parameter specifies an exception for the DLP rule that looks for words in file name extensions. You can specify multiple words separated by commas. SCDLPComplianceRule \u00b6 Description \u00b6 This resource configures a Data Loss Prevention Compliance Rule in Security and Compliance Center. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCDLPComplianceRule 'ConfigureDLPComplianceRule' { AccessScope = \"InOrganization\" BlockAccess = $True BlockAccessScope = \"All\" ContentContainsSensitiveInformation = @( MSFT_SCDLPSensitiveInformation { name = 'EU Debit Card Number' id = '0e9b3178-9678-47dd-a509-37222ca96b42' maxconfidence = '100' minconfidence = '75' classifiertype = 'Content' mincount = '1' maxcount = '9' } ) Disabled = $False DocumentIsPasswordProtected = $False DocumentIsUnsupported = $False ExceptIfDocumentIsPasswordProtected = $False ExceptIfDocumentIsUnsupported = $False ExceptIfHasSenderOverride = $False ExceptIfProcessingLimitExceeded = $False GenerateIncidentReport = @( \"SiteAdmin\" ) HasSenderOverride = $False IncidentReportContent = @( \"DocumentLastModifier\" , \"Detections\" , \"Severity\" , \"DetectionDetails\" , \"OriginalContent\" ) Name = \"Low volume EU Sensitive content found\" NotifyUser = @( \"LastModifier\" ) Policy = \"General Data Protection Regulation (GDPR)\" ProcessingLimitExceeded = $False RemoveRMSTemplate = $False ReportSeverityLevel = \"Low\" StopPolicyProcessing = $False Ensure = \"Present\" Credential = $Credsglobaladmin } } }","title":"SCDLPComplianceRule"},{"location":"resources/security-compliance/SCDeviceConditionalAccessPolicy/","text":"SCDeviceConditionalAccessPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The name of the Device Conditional Access Policy. Ensure Write String Specify if this policy should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. Enabled Write Boolean The Enabled parameter specifies whether the policy is enabled. Credential Required PSCredential Credentials of Security and Compliance Center Admin SCDeviceConditionalAccessPolicy \u00b6 Description \u00b6 This resource configures a Device Conditional Access Policy in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCDeviceConditionalAccessPolicy 'ConfigureDeviceConditionalAccessPolicy' { Name = \"Human Resources\" Comment = \"Device Conditional Access Policy for Human Resources department\" Enabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCDeviceConditionalAccessPolicy"},{"location":"resources/security-compliance/SCDeviceConfigurationPolicy/","text":"SCDeviceConfigurationPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The name of the Device Configuration Policy. Ensure Write String Specify if this policy should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. Enabled Write Boolean The Enabled parameter specifies whether the policy is enabled. Credential Required PSCredential Credentials of Security and Compliance Center Admin SCDeviceConfigurationPolicy \u00b6 Description \u00b6 This resource configures a Device Configuration Policy in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCDeviceConfigurationPolicy 'ConfigureDeviceConfigurationPolicy' { Name = \"Human Resources\" Comment = \"Device Configuration Policy for Human Resources department\" Enabled = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCDeviceConfigurationPolicy"},{"location":"resources/security-compliance/SCFilePlanPropertyAuthority/","text":"SCFilePlanPropertyAuthority \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the Authority. Ensure Write String Specify if this authority should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCFilePlanPropertyAuthority \u00b6 Description \u00b6 This resource configures an authority entry for Security and Compliance File Plans. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCFilePlanPropertyAuthority 'FilePlanPropertyAuthority' { Name = \"My Authority\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCFilePlanPropertyAuthority"},{"location":"resources/security-compliance/SCFilePlanPropertyCategory/","text":"SCFilePlanPropertyCategory \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the category. Ensure Write String Specify if this category should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCFilePlanPropertyCategory \u00b6 Description \u00b6 This resource configures a category entry for Security and Compliance File Plans. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCFilePlanPropertyCategory 'FilePlanPropertyCategory' { Name = \"My Category\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCFilePlanPropertyCategory"},{"location":"resources/security-compliance/SCFilePlanPropertyCitation/","text":"SCFilePlanPropertyCitation \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the citation. CitationUrl Write String URL of the citation. CitationJurisdiction Write String Jurisdiction of the citation. Ensure Write String Specify if this citation should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCFilePlanPropertyCitation \u00b6 Description \u00b6 This resource configures a citation entry for Security and Compliance File Plans. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCFilePlanPropertyCitation 'FilePlanPropertyCitation' { Name = \"Demo Citation\" CitationURL = \"https://contoso.com\" CitationJurisdiction = \"Federal\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCFilePlanPropertyCitation"},{"location":"resources/security-compliance/SCFilePlanPropertyDepartment/","text":"SCFilePlanPropertyDepartment \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the department. Ensure Write String Specify if this department should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCFilePlanPropertyDepartment \u00b6 Description \u00b6 This resource configures a department entry for Security and Compliance File Plans. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC Node localhost { SCFilePlanPropertyDepartment 'FilePlanPropertyDepartment' { Name = \"Demo Department\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCFilePlanPropertyDepartment"},{"location":"resources/security-compliance/SCFilePlanPropertyReferenceId/","text":"SCFilePlanPropertyReferenceId \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the reference id. Ensure Write String Specify if this reference id should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCFilePlanPropertyReferenceId \u00b6 Description \u00b6 This resource configures a reference ID entry for Security and Compliance File Plans. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCFilePlanPropertyReferenceId 'FilePlanPropertyReferenceId' { Name = \"My Reference ID\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCFilePlanPropertyReferenceId"},{"location":"resources/security-compliance/SCFilePlanPropertySubCategory/","text":"SCFilePlanPropertySubCategory \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the sub-category. Category Required String The Category parameter specifies the name of the parent category associated with the sub-category. Ensure Write String Specify if this category should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCFilePlanPropertySubCategory \u00b6 Description \u00b6 This resource configures a sub-category entry for Security and Compliance File Plans. Examples \u00b6 Example 1 \u00b6 This example shows how to create a new File Plan Property Sub-Category. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCFilePlanPropertySubCategory 'FilePlanPropertySubCategory' { Name = \"My Sub-Category\" Category = \"My Category\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCFilePlanPropertySubCategory"},{"location":"resources/security-compliance/SCLabelPolicy/","text":"SCLabelPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Key Write String Advanced settings key. Value Write StringArray[] Advanced settings value. Name Key String The Name parameter specifies the unique name for the sensitivity label. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks. Ensure Write String Specify if this label policy should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. AdvancedSettings Write InstanceArray[] The AdvancedSettings parameter enables client-specific features and capabilities on the sensitivity label. The settings that you configure with this parameter only affect apps that are designed for the setting. ExchangeLocation Write StringArray[] The ExchangeLocation parameter specifies the mailboxes to include in the policy. ExchangeLocationException Write StringArray[] The ExchangeLocationException parameter specifies the mailboxes to exclude when you use the value All for the ExchangeLocation parameter. ModernGroupLocation Write StringArray[] The ModernGroupLocation parameter specifies the Microsoft 365 Groups to include in the policy. ModernGroupLocationException Write StringArray[] The ModernGroupLocationException parameter specifies the Microsoft 365 Groups to exclude when you're using the value All for the ModernGroupLocation parameter. Labels Write StringArray[] The Labels parameter specifies the sensitivity labels that are associated with the policy. You can use any value that uniquely identifies the label. AddExchangeLocation Write StringArray[] The AddExchangeLocation parameter specifies the mailboxes to add in the existing policy. AddExchangeLocationException Write StringArray[] The AddExchangeLocationException parameter specifies the mailboxes to add to exclusions when you use the value All for the ExchangeLocation parameter. AddModernGroupLocation Write StringArray[] The AddModernGroupLocation parameter specifies the Microsoft 365 Groups to add to include the policy. AddModernGroupLocationException Write StringArray[] The AddModernGroupLocationException parameter specifies the Microsoft 365 Groups to add to exclusions when you're using the value All for the ModernGroupLocation parameter. AddLabels Write StringArray[] The AddLabels parameter specifies the sensitivity labels to add to the policy. You can use any value that uniquely identifies the label. RemoveExchangeLocation Write StringArray[] The RemoveExchangeLocation parameter specifies the mailboxes to remove from the policy. RemoveExchangeLocationException Write StringArray[] The RemoveExchangeLocationException parameter specifies the mailboxes to remove when you use the value All for the ExchangeLocation parameter. RemoveModernGroupLocation Write StringArray[] The RemoveModernGroupLocation parameter specifies the Microsoft 365 Groups to remove from the policy. RemoveModernGroupLocationException Write StringArray[] The RemoveModernGroupLocationException parameter specifies the Microsoft 365 Groups to remove from excluded values when you're using the value All for the ModernGroupLocation parameter. RemoveLabels Write StringArray[] The RemoveLabels parameter specifies the sensitivity labels that are removed from the policy. You can use any value that uniquely identifies the label. Credential Required PSCredential Credentials of the Exchange Global Admin SCLabelPolicy \u00b6 Description \u00b6 This resource configures a Sensitivity label policy in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCLabelPolicy 'ConfigureLabelPolicy' { Name = \"DemoLabelPolicy\" Comment = \"Demo Label policy comment\" Labels = @( \"Personal\" , \"General\" ) ExchangeLocation = @( \"All\" ) AdvancedSettings = @( MSFT_SCLabelSetting { Key = \"AllowedLevel\" Value = @( \"Sensitive\" , \"Classified\" ) } MSFT_SCLabelSetting { Key = \"LabelStatus\" Value = \"Enabled\" } ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCLabelPolicy"},{"location":"resources/security-compliance/SCRetentionCompliancePolicy/","text":"SCRetentionCompliancePolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the retention policy. Ensure Write String Specify if this policy should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. DynamicScopeLocation Write StringArray[] Location of the dynamic scope for this policy. Enabled Write Boolean Determines if the policy is enabled or not. ExchangeLocation Write StringArray[] The ExchangeLocation parameter specifies the mailboxes to include. ExchangeLocationException Write StringArray[] This parameter specifies the mailboxes to remove from the list of excluded mailboxes when you use the value All for the ExchangeLocation parameter ModernGroupLocation Write StringArray[] The ModernGroupLocation parameter specifies the Office 365 groups to include in the policy. ModernGroupLocationException Write StringArray[] The ModernGroupLocationException parameter specifies the Office 365 groups to exclude when you're using the value All for the ModernGroupLocation parameter. OneDriveLocation Write StringArray[] The OneDriveLocation parameter specifies the OneDrive for Business sites to include. You identify the site by its URL value, or you can use the value All to include all sites. OneDriveLocationException Write StringArray[] This parameter specifies the OneDrive for Business sites to exclude when you use the value All for the OneDriveLocation parameter. You identify the site by its URL value. PublicFolderLocation Write StringArray[] The PublicFolderLocation parameter specifies that you want to include all public folders in the retention policy. You use the value All for this parameter. RestrictiveRetention Write Boolean The RestrictiveRetention parameter specifies whether Preservation Lock is enabled for the policy. SharePointLocation Write StringArray[] The SharePointLocation parameter specifies the SharePoint Online sites to include. You identify the site by its URL value, or you can use the value All to include all sites. SharePointLocationException Write StringArray[] This parameter specifies the SharePoint Online sites to exclude when you use the value All for the SharePointLocation parameter. You identify the site by its URL value. SkypeLocation Write StringArray[] The SkypeLocation parameter specifies the Skype for Business Online users to include in the policy. SkypeLocationException Write StringArray[] This parameter is reserved for internal Microsoft use. TeamsChannelLocation Write StringArray[] The TeamsChannelLocation parameter specifies the Teams Channel to include in the policy. TeamsChannelLocationException Write StringArray[] This parameter specifies the SharePoint Online sites to exclude when you use the value All for the TeamsChannelLocation parameter. You identify the site by its URL value. TeamsChatLocation Write StringArray[] The TeamsChatLocation parameter specifies the Teams Chat to include in the policy. TeamsChatLocationException Write StringArray[] This parameter specifies the SharePoint Online sites to exclude when you use the value All for the TeamsChatLocation parameter. You identify the site by its URL value. Credential Required PSCredential Credentials of the Exchange Global Admin SCRetentionCompliancePolicy \u00b6 Description \u00b6 This resource configures a Retention Compliance Policy in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCRetentionCompliancePolicy 'RetentionCompliancePolicy' { Name = \"MyPolicy\" Comment = \"Test Policy\" SharePointLocation = \"https://contoso.sharepoint.com/sites/demo\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCRetentionCompliancePolicy"},{"location":"resources/security-compliance/SCRetentionComplianceRule/","text":"SCRetentionComplianceRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the retention rule. Policy Required String The Policy parameter specifies the policy to contain the rule. Ensure Write String Specify if this rule should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. ExpirationDateOption Write String The ExpirationDateOption parameter specifies whether the expiration date is calculated from the content creation date or last modification date. Valid values are: CreationAgeInDays and ModificationAgeInDays. CreationAgeInDays, ModificationAgeInDays ExcludedItemClasses Write StringArray[] The ExcludedItemClasses parameter specifies the types of messages to exclude from the rule. You can use this parameter only to exclude items from a hold policy, which excludes the specified item class from being held. Using this parameter won't exclude items from deletion policies. Typically, you use this parameter to exclude voicemail messages, IM conversations, and other Skype for Business Online content from being held by a hold policy. ContentMatchQuery Write String The ContentMatchQuery parameter specifies a content search filter. RetentionComplianceAction Write String The RetentionComplianceAction parameter specifies the retention action for the rule. Valid values are: Delete, Keep and KeepAndDelete. Delete, Keep, KeepAndDelete RetentionDuration Write String The RetentionDuration parameter specifies the hold duration for the retention rule. Valid values are: An integer - The hold duration in days, Unlimited - The content is held indefinitely. RetentionDurationDisplayHint Write String The RetentionDurationDisplayHint parameter specifies the units that are used to display the retention duration in the Security and Compliance Center. Valid values are: Days, Months or Years. Days, Months, Years Credential Required PSCredential Credentials of the Exchange Global Admin SCRetentionComplianceRule \u00b6 Description \u00b6 This resource configures a Retention Compliance Rule in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCRetentionComplianceRule 'RetentionComplianceRule' { Name = \"DemoRule2\" Policy = \"ContosoPolicy\" Comment = \"This is a Demo Rule\" RetentionComplianceAction = \"Keep\" RetentionDuration = \"Unlimited\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCRetentionComplianceRule"},{"location":"resources/security-compliance/SCRetentionEventType/","text":"SCRetentionEventType \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name of the retention event type. Ensure Write String Specify if this rule should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. Credential Required PSCredential Credentials of the Exchange Global Admin SCRetentionEventType \u00b6 Description \u00b6 This resource configures a Retention Event Type in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC Node localhost { SCRetentionEventType 'RetentionEventType' { Name = \"DemoEventType\" Comment = \"Demo event comment\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCRetentionEventType"},{"location":"resources/security-compliance/SCSensitivityLabel/","text":"SCSensitivityLabel \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Key Write String Advanced settings key. Value Write StringArray[] Advanced settings value. localeKey Write String Name of the Local key. LabelSettings Write InstanceArray[] The locale settings display names. Name Key String The Name parameter specifies the unique name for the sensitivity label. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks. Ensure Write String Specify if this rule should exist or not. Present, Absent Comment Write String The Comment parameter specifies an optional comment. AdvancedSettings Write InstanceArray[] The AdvancedSettings parameter enables client-specific features and capabilities on the sensitivity label. The settings that you configure with this parameter only affect apps that are designed for the setting. DisplayName Write String The DisplayName parameter specifies the display name for the sensitivity label. The display name appears in the Microsoft Office and is used by Outlook users to select the appropriate sensitivity label before they send a message. LocaleSettings Write InstanceArray[] The LocaleSettings parameter specifies one or more localized label name or label Tooltips in different languages. Regions include all region codes supported in Office Client applications. ParentId Write String The ParentId parameter specifies the parent label that you want this label to be under (a sublabel). You can use any value that uniquely identifies the parent sensitivity label for example name. Priority Write UInt32 The Priority parameter specifies a priority value for the sensitivity label that determines the order of label processing. A lower integer value indicates a highter priority. Tooltip Write String The ToolTip parameter specifies the default tooltip and sensitivity label description that's seen by users. It the value contains spaces, enclose the value in quotation marks. Disabled Write Boolean The disabled parameter specifies whether to enable or disable the sensitivity label. ApplyContentMarkingFooterAlignment Write String The ApplyContentMarkingFooterAlignment parameter specifies the footer alignment. Left, Center, Right ApplyContentMarkingFooterEnabled Write Boolean The disabled parameter specifies whether to enable or disable the sensitivity label. ApplyContentMarkingFooterFontColor Write String The ApplyContentMarkingFooterFontColor parameter specifies the color of the footer text. This parameter accepts a hexadecimal color code value in the format #xxxxxx. The default value is #000000. ApplyContentMarkingFooterFontName Write String The ApplyContentMarkingFooterFontName parameter specifies the font of the footer text. If the value contains spaces, enclose the value in quotation marks. ApplyContentMarkingFooterFontSize Write SInt32 The ApplyContentMarkingFooterFontSize parameter specifies the font size (in points) of the footer text. ApplyContentMarkingFooterMargin Write SInt32 The ApplyContentMarkingFooterMargin parameter specifies the size (in points) of the footer margin. ApplyContentMarkingFooterText Write String The ApplyContentMarkingFooterText parameter specifies the footer text. If the value contains spaces, enclose the value in quotation marks. ApplyContentMarkingHeaderAlignment Write String The ApplyContentMarkingFooterAlignment parameter specifies the header alignment. Left, Center, Right ApplyContentMarkingHeaderEnabled Write Boolean The ApplyContentMarkingHeaderEnabled parameter enables or disables the Apply Content Marking Header action for the label. ApplyContentMarkingHeaderFontColor Write String The ApplyContentMarkingFooterFontColor parameter specifies the color of the header text. This parameter accepts a hexadecimal color code value in the format #xxxxxx. The default value is #000000. ApplyContentMarkingHeaderFontName Write String The ApplyContentMarkingFooterFontName parameter specifies the font of the header text. If the value contains spaces, enclose the value in quotation marks. ApplyContentMarkingHeaderFontSize Write SInt32 The ApplyContentMarkingFooterFontSize parameter specifies the font size (in points) of the header text. ApplyContentMarkingHeaderMargin Write SInt32 The ApplyContentMarkingFooterMargin parameter specifies the size (in points) of the header margin. ApplyContentMarkingHeaderText Write String The ApplyContentMarkingFooterText parameter specifies the header text. If the value contains spaces, enclose the value in quotation marks. ApplyWaterMarkingEnabled Write Boolean The ApplyWaterMarkingEnabled parameter enables or disables the Apply Watermarking Header action for the label. ApplyWaterMarkingFontColor Write String The ApplyWaterMarkingFontColor parameter specifies the color of the watermark text. This parameter accepts a hexadecimal color code value in the format #xxxxxx. ApplyWaterMarkingFontName Write String The ApplyWaterMarkingFontName parameter specifies the font of the watermark text. If the value contains spaces, enclose the value in quotation marks. ApplyWaterMarkingFontSize Write SInt32 The ApplyWaterMarkingFontSize parameter specifies the font size (in points) of the watermark text. ApplyWaterMarkingLayout Write String The ApplyContentMarkingFooterAlignment parameter specifies the header alignment. Horizontal, Diagonal ApplyWaterMarkingText Write String The ApplyWaterMarkingText parameter specifies the watermark text. If the value contains spaces, enclose the value in quotation marks. EncryptionAipTemplateScopes Write String The EncryptionAipTemplateScopes parameter specifies that the label is still published and usable in the AIP classic client. EncryptionContentExpiredOnDateInDaysOrNever Write String The EncryptionContentExpiredOnDateInDaysOrNever parameter specifies when the encrypted content expires. Valid values are integer or never. EncryptionDoNotForward Write Boolean The EncryptionDoNotForward parameter specifies whether the Do Not Forward template is applied. EncryptionEnabled Write Boolean The EncryptionEnabled parameter specifies whether encryption in enabled. EncryptionOfflineAccessDays Write SInt32 The EncryptionOfflineAccessDays parameter specifies the number of days that offline access is allowed. EncryptionPromptUser Write Boolean The EncryptionPromptUser parameter specifies whether to set the label with user defined permission in Word, Excel, and PowerPoint. EncryptionProtectionType Write String The EncryptionProtectionType parameter specifies the protection type for encryption. Template, RemoveProtection, UserDefined EncryptionRightsDefinitions Write String The EncryptionRightsDefinitions parameter specifies the rights users have when accessing protected. This parameter uses the syntax Identity1:Rights1,Rights2;Identity2:Rights3,Rights4. For example, john@contoso.com:VIEW,EDIT;microsoft.com:VIEW. EncryptionRightsUrl Write String The EncryptionRightsUrl parameter specifies the URL for hold your own key (HYOK) protection. SiteAndGroupProtectionAllowAccessToGuestUsers Write Boolean The SiteAndGroupProtectionAllowAccessToGuestUsers parameter enables or disables access to guest users. SiteAndGroupProtectionAllowEmailFromGuestUsers Write Boolean The SiteAndGroupProtectionAllowEmailFromGuestUsers parameter enables or disables email from guest users. SiteAndGroupProtectionAllowFullAccess Write Boolean The SiteAndGroupProtectionAllowFullAccess parameter enables or disables full access. SiteAndGroupProtectionAllowLimitedAccess Write Boolean The SiteAndGroupProtectionAllowLimitedAccess parameter enables or disables limited access. SiteAndGroupProtectionBlockAccess Write Boolean The SiteAndGroupProtectionBlockAccess parameter blocks access. SiteAndGroupProtectionEnabled Write Boolean The SiteAndGroupProtectionEnabled parameter enables or disables the Site and Group Protection action for the labels. SiteAndGroupProtectionPrivacy Write String The SiteAndGroupProtectionPrivacy parameter specifies the privacy level for the label. Public, Private Credential Required PSCredential Credentials of the Exchange Global Admin SCSensitivityLabel \u00b6 Description \u00b6 This resource configures Sensitivity labels in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SCSensitivityLabel 'ConfigureSensitivityLabel' { Name = \"DemoLabel\" Comment = \"Demo Label comment\" ToolTip = \"Demo tool tip\" DisplayName = \"Demo Label\" ApplyContentMarkingFooterAlignment = \"Center\" ApplyContentMarkingFooterEnabled = $true ApplyContentMarkingFooterFontColor = \"#FF0000\" ApplyContentMarkingFooterFontName = \"calibri\" ApplyContentMarkingFooterFontSize = 10 ApplyContentMarkingFooterMargin = 5 ApplyContentMarkingFooterText = \"Demo footer text\" ApplyContentMarkingHeaderAlignment = \"Center\" ApplyContentMarkingHeaderEnabled = $true ApplyContentMarkingHeaderFontColor = \"#FF0000\" ApplyContentMarkingHeaderFontName = \"calibri\" ApplyContentMarkingHeaderFontSize = 10 ApplyContentMarkingHeaderMargin = 5 ApplyContentMarkingHeaderText = \"demo header text\" ApplyWaterMarkingEnabled = $true ApplyWaterMarkingFontColor = \"#FF0000\" ApplyWaterMarkingFontName = \"calibri\" ApplyWaterMarkingFontSize = 10 ApplyWaterMarkingLayout = \"Diagonal\" ApplyWaterMarkingText = \"demo watermark\" SiteAndGroupProtectionAllowAccessToGuestUsers = $true SiteAndGroupProtectionAllowEmailFromGuestUsers = $true SiteAndGroupProtectionAllowFullAccess = $true SiteAndGroupProtectionAllowLimitedAccess = $true SiteAndGroupProtectionBlockAccess = $true SiteAndGroupProtectionEnabled = $true SiteAndGroupProtectionPrivacy = \"Private\" LocaleSettings = @( MSFT_SCLabelLocaleSettings { LocaleKey = \"DisplayName\" LabelSettings = @( MSFT_SCLabelSetting { Key = \"en-us\" Value = \"English Display Names\" } MSFT_SCLabelSetting { Key = \"fr-fr\" Value = \"Nom da'ffichage francais\" } ) } MSFT_SCLabelLocaleSettings { LocaleKey = \"StopColor\" LabelSettings = @( MSFT_SCLabelSetting { Key = \"en-us\" Value = \"RedGreen\" } MSFT_SCLabelSetting { Key = \"fr-fr\" Value = \"Rouge\" } ) } ) AdvancedSettings = @( MSFT_SCLabelSetting { Key = \"AllowedLevel\" Value = @( \"Sensitive\" , \"Classified\" ) } MSFT_SCLabelSetting { Key = \"LabelStatus\" Value = \"Enabled\" } ) ParentId = \"Personal\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCSensitivityLabel"},{"location":"resources/security-compliance/SCSupervisoryReviewPolicy/","text":"SCSupervisoryReviewPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name for the supervisory review policy. The name can't exceed 64 characters. If the value contains spaces, enclose the value in quotation marks. Comment Write String The Comment parameter specifies an optional comment. If you specify a value that contains spaces, enclose the value in quotation marks. Reviewers Required StringArray[] The Reviewers parameter specifies the SMTP addresses of the reviewers for the supervisory review policy. You can specify multiple email addresses separated by commas. Ensure Write String Specify if this rule should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCSupervisoryReviewPolicy \u00b6 Description \u00b6 This resource configures a Supervision Policy in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC Node localhost { SCSupervisoryReviewPolicy 'SupervisoryReviewPolicy' { Name = \"MyPolicy\" Comment = \"Test Policy\" Reviewers = @( \"admin@contoso.com\" ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCSupervisoryReviewPolicy"},{"location":"resources/security-compliance/SCSupervisoryReviewRule/","text":"SCSupervisoryReviewRule \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name parameter specifies the unique name for the supervisory review policy. The name can't exceed 64 characters. If the value contains spaces, enclose the value in quotation marks. Policy Key String The Policy parameter specifies the supervisory review policy that's assigned to the rule. You can use any value that uniquely identifies the policy. Condition Write String The Condition parameter specifies the conditions and exceptions for the rule. SamplingRate Write UInt32 The SamplingRate parameter specifies the percentage of communications for review. If you want reviewers to review all detected items, use the value 100. Ensure Write String Specify if this rule should exist or not. Present, Absent Credential Required PSCredential Credentials of the Exchange Global Admin SCSupervisoryReviewRule \u00b6 Description \u00b6 This resource configures a Supervision Review Rule in Security and Compliance. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC Node localhost { SCSupervisoryReviewRule 'SupervisoryReviewRule' { Name = \"DemoRule\" Condition = \"(NOT(Reviewee:US Compliance))\" SamplingRate = 100 Policy = 'TestPolicy' Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SCSupervisoryReviewRule"},{"location":"resources/sharepoint/SPOAccessControlSettings/","text":"SPOAccessControlSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes DisplayStartASiteOption Write Boolean Determines whether tenant users see the Start a Site menu option StartASiteFormUrl Write String Specifies URL of the form to load in the Start a Site dialog. The valid values are: (default) - Blank by default, this will also remove or clear any value that has been set.Full URL - Example: https://contoso.sharepoint.com/path/to/form IPAddressEnforcement Write Boolean Allows access from network locations that are defined by an administrator. IPAddressAllowList Write String Configures multiple IP addresses or IP address ranges (IPv4 or IPv6). Use commas to separate multiple IP addresses or IP address ranges. IPAddressWACTokenLifetime Write UInt32 Office webapps TokenLifeTime in minutes CommentsOnSitePagesDisabled Write Boolean When this feature is set to true, comments on site pages will be disabled SocialBarOnSitePagesDisabled Write Boolean Disables or enables the Social Bar. It will give users the ability to like a page, see the number of views, likes, and comments on a page, and see the people who have liked a page. DisallowInfectedFileDownload Write Boolean Prevents the Download button from being displayed on the Virus Found warning page. ExternalServicesEnabled Write Boolean Enables external services for a tenant. External services are defined as services that are not in the Office 365 datacenters. EmailAttestationRequired Write Boolean Sets email attestation to required EmailAttestationReAuthDays Write UInt32 Sets email attestation re-auth days Ensure Write String Only value accepted is 'Present' Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPO Access Control Settings \u00b6 Description \u00b6 This resource allows users to configure and monitor the access control settings for your SPO tenant sharing settings. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOAccessControlSettings 'ConfigureAccessControlSettings' { IsSingleInstance = \"Yes\" DisplayStartASiteOption = $false StartASiteFormUrl = \"https://contoso.sharepoint.com\" IPAddressEnforcement = $false IPAddressWACTokenLifetime = 15 CommentsOnSitePagesDisabled = $false SocialBarOnSitePagesDisabled = $false DisallowInfectedFileDownload = $false ExternalServicesEnabled = $true EmailAttestationRequired = $false EmailAttestationReAuthDays = 30 Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOAccessControlSettings"},{"location":"resources/sharepoint/SPOApp/","text":"SPOApp \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The name of the App. Path Key String The path the the app package on disk. Publish Write Boolean This will deploy/trust an app into the app catalog. Overwrite Write Boolean Overwrites the existing app package if it already exists. Ensure Write String Present ensures the site collection exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOApp \u00b6 Description \u00b6 This resource allows users to deploy App instances in the App Catalog. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOApp 'ConfigureDemoApp' { Identity = \"DemoApp\" Path = \"C:\\Demo\\DemoApp.sppkg\" Publish = $true Ensure = \"Present\" Credential = $credsGlobalAdmin } SPOApp 'ConfigureDemoApp2' { Identity = \"DemoApp2\" Path = \"C:\\Demo\\DemoApp2.app\" Publish = $true Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOApp"},{"location":"resources/sharepoint/SPOBrowserIdleSignout/","text":"SPOBrowserIdleSignout \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes Enabled Write Boolean Enables the browser idle sign-out policy SignOutAfter Write String Specifies a time interval of inactivity before the user gets signed out WarnAfter Write String Specifies a time interval of inactivity before the user gets a warning about being signed out Credential Write PSCredential Credentials of the SharePoint Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOBrowserIdleSignout \u00b6 Description \u00b6 This resource configures an SharePoint Online Idle session sign-out policy. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOBrowserIdleSignout 'ConfigureBrowserIdleSignout' { IsSingleInstance = \"Yes\" Enabled = $True SignOutAfter = \"04:00:00\" WarnAfter = \"03:30:00\" Credential = $Credsglobaladmin } } }","title":"SPOBrowserIdleSignout"},{"location":"resources/sharepoint/SPOHomeSite/","text":"SPOHomeSite \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes Url Write String The URL of the home site collection Ensure Write String Present ensures the site collection is registered as home site, absent ensures it is unregistered Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOHomeSite \u00b6 Description \u00b6 This resource allows administrators to configure a Site Collection as the Home Site of the tenant. The menu of this SharePoint Site Collection will be shown on SharePoint Home. NOTE: This setting is not applied immediately and can take several hours to be fully available within the tenant. Please use this resource with caution, as a direct test run can lead to incorrect status results. For more details about setting the home site, go to> aka.ms/homesites Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOHomeSite 'SetMarketingSiteCollectionAsHomeSite' { IsSingleInstance = \"Yes\" Url = \"https://contoso.sharepoint.com/sites/Marketing\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOHomeSite"},{"location":"resources/sharepoint/SPOHubSite/","text":"SPOHubSite \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Url Key String The URL of the site collection Title Write String The title of the hub site Description Write String The description of the hub site LogoUrl Write String The url to the logo of the hub site RequiresJoinApproval Write Boolean Does the hub site require approval to join AllowedToJoin Write StringArray[] The users or mail-enabled security groups which are allowed to associate their site with a hub site SiteDesignId Write String The guid of the site design to link to the hub site Ensure Write String Present ensures the site collection is registered as hub site, absent ensures it is unregistered Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOHubSite \u00b6 Description \u00b6 This resource allows users to configure a Site Collection as Hub Site Collection and configure its properties. NOTE: The AllowedToJoin parameter accepts e-mail addresses (for users, Office 365 Groups and Mail-Enabled Security groups) or DisplayName (for Security groups). However, when using DisplayName it is required that there is only one group with that name. The resource will throw an exception if there are multiple groups with that name found! Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOHubSite 'ConfigureHubSite' { Url = \"https://contoso.sharepoint.com/sites/Marketing\" Title = \"Marketing Hub\" Description = \"Hub for the Marketing division\" LogoUrl = \"https://contoso.sharepoint.com/sites/Marketing/SiteAssets/hublogo.png\" RequiresJoinApproval = $true AllowedToJoin = @( \"admin@contoso.onmicrosoft.com\" , \"superuser@contoso.onmicrosoft.com\" ) SiteDesignId = \"f7eba920-9cca-4de8-b5aa-1da75a2a893c\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOHubSite"},{"location":"resources/sharepoint/SPOOrgAssetsLibrary/","text":"SPOOrgAssetsLibrary \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values LibraryUrl Key String Indicates the absolute URL of the library to be designated as a central location for organization assets. CdnType Write String Specifies the CDN type. The valid values are public or private. Public, Private ThumbnailUrl Write String Indicates the absolute URL of the library to be designated as a central location for organization Indicates the URL of the background image used when the library is publicly displayed. If no thumbnail URL is indicated, the card will have a gray background. Ensure Write String Specify if the SPO Org Assets library should exist or not. Present, Absent Credential Write PSCredential Credentials of the SharePoint Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOOrgAssetsLibrary \u00b6 Description \u00b6 This resource configures an SharePoint Online Org site assets library. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOOrgAssetsLibrary 'ConfigureOrgSiteAssets' { LibraryUrl = \"https://contoso.sharepoint.com/sites/org/Branding\" ThumbnailUrl = \"https://contoso.sharepoint.com/sites/org/Branding/Logo/Owagroup.png\" CdnType = \"Public\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOOrgAssetsLibrary"},{"location":"resources/sharepoint/SPOPropertyBag/","text":"SPOPropertyBag \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Url Key String Url of the site where to configure the PropertyBag property. Key Key String Key that should be configured. Value Key String Value of the assigned key. Ensure Write String Specify if this policy should exist or not. Present, Absent Credential Write PSCredential Credentials of the Global Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOPropertyBag \u00b6 Description \u00b6 Configures a value in a site's property bag. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOPropertyBag 'ConfigurePropertyBag' { Url = \"https://contoso.sharepoint.com/sites/Marketing\" Key = \"MyKey\" Value = \"MyValue\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOPropertyBag"},{"location":"resources/sharepoint/SPOSearchManagedProperty/","text":"SPOSearchManagedProperty \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name of the Managed Property Type Key String The Type of the Managed Property Text, Integer, Decimal, DateTime, YesNo, Double, Binary Description Write String Description of the Managed Property Searchable Write Boolean Enables querying against the content of the managed property. The content of this managed property is included in the full-text index. For example, if the property is 'author', a simple query for 'Smith' returns items containing the word 'Smith' and items whose author property contains 'Smith'. FullTextIndex Write String Defines which full-text index the Managed Property is stored in. FullTextContext Write UInt32 Defines the context of a managed property within its full-text index. Queryable Write Boolean Enables querying against the specific Managed Property. The Managed Property field name must be included in the query, either specified in the query itself or included in the query programmatically. If the Managed Property is 'author', the query must contain 'author:Smith'. Retrievable Write Boolean Enables the content of this managed property to be returned in search results. Enable this setting for managed properties that are relevant to present in search results. AllowMultipleValues Write Boolean Allow multiple values of the same type in this managed property. For example, if this is the 'author' managed property, and a document has multiple authors, each author name will be stored as a separate value in this managed property. Refinable Write String Yes: Enables using the property as a refiner for search results in the front end. You must manually configure the refiner in the web part. Yes - latent: Enables switching refinable to active later, without having to do a full re-crawl when you switch. Both options require a full crawl to take effect. No, Yes - latent, Yes Sortable Write String Yes: Enables sorting the result set based on the property before the result set is returned. Use for example for large result sets that cannot be sorted and retrieved at the same time. Yes - latent: Enables switching sortable to active later, without having to do a full re-crawl when you switch. Both options require a full crawl to take effect. No, Yes - latent, Yes Safe Write Boolean Enables this managed property to be returned for queries executed by anonymous users. Enable this setting for managed properties that do not contain sensitive information and are appropriate for anonymous users to view. Aliases Write StringArray[] Define an alias for a managed property if you want to use the alias instead of the managed property name in queries and in search results. Use the original managed property and not the alias to map to a crawled property. Use an alias if you don't want to or don't have permission to create a new managed property. TokenNormalization Write Boolean Enable to return results independent of letter casing and diacritics(for example accented characters) used in the query. CompleteMatching Write Boolean By default, search returns partial matches between queries against this managed property and its content. Select Complete Matching for search to return exact matches instead. If a managed property 'Title' contains 'Contoso Sites', only the query Title: 'Contoso Sites' will give a result. LanguageNeutralTokenization Write Boolean By default, search depends on language when it breaks queries and content into parts (tokenization). Select language neutral tokenization if you have multilingual content and this managed property contains tags that are based on metadata term sets or other identifiers. FinerQueryTokenization Write Boolean By default, search tokenizes queries coarser than content. If a managed property 'ID' contains the string '1-23-456#7', and you query ID:'1-23', you might not get a partial match because search didn't break the query into small enough parts. Consider selecting finer query tokenization if the content of this managed property contains separators such as dots and dashes. Finer query tokenization makes queries against this managed property slower. MappedCrawledProperties Write StringArray[] Names of the crawled properties that are mapped to this managed property CompanyNameExtraction Write Boolean Enables the system to extract company name entities from the managed property when crawling new or updated items. Afterwards, the extracted entities can be used to set up refiners in the web part. Ensure Write String Present ensures the Search Managed Property exists. Present Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSearchManagedProperty \u00b6 Description \u00b6 This resource allows users to create and monitor SharePoint Online Search Managed Properties. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSearchManagedProperty 'ConfigureSearchMP' { Searchable = $True FullTextIndex = \"\" MappedCrawledProperties = @() LanguageNeutralTokenization = $True CompanyNameExtraction = $False AllowMultipleValues = $True Aliases = $True Queryable = $True Name = \"TestManagedProperty\" Safe = $True Description = \"Description of item\" FinerQueryTokenization = $True Retrievable = $True Type = \"Text\" CompleteMatching = $True FullTextContext = 4 Sortable = \"Yes\" Refinable = \"Yes\" TokenNormalization = $True Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOSearchManagedProperty"},{"location":"resources/sharepoint/SPOSearchResultSource/","text":"SPOSearchResultSource \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Name Key String The Name of the Result Source. Description Write String Description of the Result Source. Protocol Required String The protocol of the Result Source. Local, Remote, OpenSearch, Exchange SourceURL Write String Address of the root site collection of the remote SharePoint farm or Exchange server. Type Write String Select SharePoint Search Results to search over the entire index. Select People Search Results to enable query processing specific to People Search, such as phonetic name matching or nickname matching. Only people profiles will be returned from a People Search source. SharePoint, People QueryTransform Write String Change incoming queries to use this new query text instead. Include the incoming query in the new text by using the query variable '{searchTerms}'. ShowPartialSearch Write Boolean Show partial search or not UseAutoDiscover Write Boolean Specifies if AutoDiscover should be used for the Exchange Source URL Ensure Write String Present ensures the Search Result Source exists. Present Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSearchResultSource \u00b6 Description \u00b6 This resource allows users to create and monitor SharePoint Online Search Result Sources. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSearchResultSource 'ConfigureSearchResultSource' { Name = \"MyResultSource\" Description = \"Description of item\" Protocol = \"Local\" Type = \"SharePoint\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOSearchResultSource"},{"location":"resources/sharepoint/SPOSharingSettings/","text":"SPOSharingSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes SharingCapability Write String Configures sharing capability for SharePoint ExistingExternalUserSharingOnly, ExternalUserAndGuestSharing, Disabled, ExternalUserSharingOnly MySiteSharingCapability Write String Configures sharing capability for mysite (onedrive) ExistingExternalUserSharingOnly, ExternalUserAndGuestSharing, Disabled, ExternalUserSharingOnly ShowEveryoneClaim Write Boolean Enables the administrator to hide the Everyone claim in the People Picker. ShowAllUsersClaim Write Boolean Enables the administrator to hide the All Users claim groups in People Picker. ShowEveryoneExceptExternalUsersClaim Write Boolean Enables the administrator to hide the Everyone except external users claim in the People Picker. ProvisionSharedWithEveryoneFolder Write Boolean Creates a Shared with Everyone folder in every user's new OneDrive for Business document library. EnableGuestSignInAcceleration Write Boolean Accelerates guest-enabled site collections as well as member-only site collections when the SignInAccelerationDomain parameter is set. BccExternalSharingInvitations Write Boolean When the feature is enabled, all external sharing invitations that are sent will blind copy the e-mail messages listed in the BccExternalSharingsInvitationList. BccExternalSharingInvitationsList Write String Specifies a list of e-mail addresses to be BCC'd when the BCC for External Sharing feature is enabled.Multiple addresses can be specified by creating a comma separated list with no spaces. RequireAnonymousLinksExpireInDays Write UInt32 Specifies all anonymous links that have been created (or will be created) will expire after the set number of days. SharingAllowedDomainList Write StringArray[] Specifies a list of email domains that is allowed for sharing with the external collaborators. Entry values as an array of domains. SharingBlockedDomainList Write StringArray[] Specifies a list of email domains that is blocked or prohibited for sharing with the external collaborators. Entry values as an array of domains. SharingDomainRestrictionMode Write String Specifies the external sharing mode for domains. None, AllowList, BlockList DefaultSharingLinkType Write String Lets administrators choose what type of link appears is selected in the 'Get a link' sharing dialog box in OneDrive for Business and SharePoint Online None, Direct, Internal, AnonymousAccess PreventExternalUsersFromResharing Write Boolean Allow or deny external users re-sharing ShowPeoplePickerSuggestionsForGuestUsers Write Boolean Enables the administrator to hide the guest users claim in the People Picker. FileAnonymousLinkType Write String Configures anonymous link types for files View, Edit FolderAnonymousLinkType Write String Configures anonymous link types for folders View, Edit NotifyOwnersWhenItemsReshared Write Boolean When this parameter is set to $true and another user re-shares a document from a user\u00e2\u0080\u0099s OneDrive for Business, the OneDrive for Business owner is notified by e-mail. DefaultLinkPermission Write String Specifies the link permission on the tenant level. Valid values to set are View and Edit. A value of None will be set to Edit as its the default value. None, View, Edit RequireAcceptingAccountMatchInvitedAccount Write Boolean Ensures that an external user can only accept an external sharing invitation with an account matching the invited email address.Administrators who desire increased control over external collaborators should consider enabling this feature. False (default) - When a document is shared with an external user, bob@contoso.com, it can be accepted by any user with access to the invitation link in the original e-mail.True - User must accept this invitation with bob@contoso.com. Ensure Write String Only accepted value is 'Present'. Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSharingSettings \u00b6 Description \u00b6 This resource allows users to configure and monitor the sharing settings for your SPO tenant sharing settings Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSharingSettings 'ConfigureSharingSettings' { IsSingleInstance = \"Yes\" SharingCapability = 'ExternalUserSharingOnly' ShowEveryoneClaim = $false ShowAllUsersClaim = $false ShowEveryoneExceptExternalUsersClaim = $true ProvisionSharedWithEveryoneFolder = $false EnableGuestSignInAcceleration = $false BccExternalSharingInvitations = $false BccExternalSharingInvitationsList = \"\" RequireAnonymousLinksExpireInDays = 730 SharingAllowedDomainList = @( \"contoso.com\" ) SharingBlockedDomainList = @( \"contoso.com\" ) SharingDomainRestrictionMode = \"None\" DefaultSharingLinkType = \"AnonymousAccess\" PreventExternalUsersFromResharing = $false ShowPeoplePickerSuggestionsForGuestUsers = $false FileAnonymousLinkType = \"Edit\" FolderAnonymousLinkType = \"Edit\" NotifyOwnersWhenItemsReshared = $true DefaultLinkPermission = \"View\" RequireAcceptingAccountMatchInvitedAccount = $false Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOSharingSettings"},{"location":"resources/sharepoint/SPOSite/","text":"SPOSite \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Url Key String The URL of the site collection. Title Required String The title of the site collection. Owner Required String Specifies the owner of the site. TimeZoneId Required UInt32 TimeZone ID of the site collection. Template Write String Specifies with template of site to create. HubUrl Write String The URL of the Hub site the site collection needs to get connected to. DisableFlows Write Boolean Disables Microsoft Flow for this site. SharingCapability Write String Specifies what the sharing capabilities are for the site. Possible values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly. Disabled, ExistingExternalUserSharingOnly, ExternalUserSharingOnly, ExternalUserAndGuestSharing StorageMaximumLevel Write UInt32 Specifies the storage quota for this site collection in megabytes. This value must not exceed the company's available quota. StorageWarningLevel Write UInt32 Specifies the warning level for the storage quota in megabytes. This value must not exceed the values set for the StorageMaximumLevel parameter. AllowSelfServiceUpgrade Write Boolean Specifies if the site administrator can upgrade the site collection. CommentsOnSitePagesDisabled Write Boolean Specifies if comments on site pages are enabled or disabled. DefaultLinkPermission Write String Specifies the default link permission for the site collection. None - Respect the organization default link permission. View - Sets the default link permission for the site to 'view' permissions. Edit - Sets the default link permission for the site to 'edit' permissions. None, View, Edit DefaultSharingLinkType Write String Specifies the default link type for the site collection. None - Respect the organization default sharing link type. AnonymousAccess - Sets the default sharing link for this site to an Anonymous Access or Anyone link. Internal - Sets the default sharing link for this site to the 'organization' link or company shareable link. Direct - Sets the default sharing link for this site to the 'Specific people' link. None, AnonymousAccess, Internal, Direct DisableAppViews Write String Disables App Views. Unknown, Disabled, NotDisabled DisableCompanyWideSharingLinks Write String Disables Company wide sharing links. Unknown, Disabled, NotDisabled LocaleId Write UInt32 Specifies the language of the new site collection. Defaults to the current language of the web connected to. DenyAddAndCustomizePages Write Boolean Determines whether the Add And Customize Pages right is denied on the site collection. For more information about permission levels, see User permissions and permission levels in SharePoint. RestrictedToRegion Write String Defines geo-restriction settings for this site NoRestriction, BlockMoveOnly, BlockFull, Unknown SharingAllowedDomainList Write String Specifies a list of email domains that is allowed for sharing with the external collaborators. Use the space character as the delimiter. SharingBlockedDomainList Write String Specifies a list of email domains that is blocked for sharing with the external collaborators. SharingDomainRestrictionMode Write String Specifies the external sharing mode for domains. None, AllowList, BlockList ShowPeoplePickerSuggestionsForGuestUsers Write Boolean To enable the option to search for existing guest users at Site Collection Level, set this parameter to $true. AnonymousLinkExpirationInDays Write UInt32 Specifies that all anonymous/anyone links that have been created (or will be created) will expire after the set number of days. Only applies if OverrideTenantAnonymousLinkExpirationPolicy is set to true. To remove the expiration requirement, set the value to zero (0) SocialBarOnSitePagesDisabled Write Boolean Disables or enables the Social Bar for Site Collection. OverrideTenantAnonymousLinkExpirationPolicy Write Boolean False - Respect the organization-level policy for anonymous or anyone link expiration. True - Override the organization-level policy for anonymous or anyone link expiration (can be more or less restrictive) Ensure Write String Present ensures the site collection exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSite \u00b6 Description \u00b6 This resource allows users to create and monitor SharePoint Online Site Collections. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSite 'ConfigureTestSite' { Url = \"https://contoso.sharepoint.com/sites/testsite1\" StorageMaximumLevel = 26214400 LocaleId = 1033 Template = \"STS#3\" Owner = \"admin@contoso.onmicrosoft.com\" Title = \"TestSite\" TimeZoneId = 13 StorageWarningLevel = 25574400 SharingCapability = \"Disabled\" CommentsOnSitePagesDisabled = $false DisableAppViews = \"NotDisabled\" DisableCompanyWideSharingLinks = \"NotDisabled\" DisableFlows = $false DefaultSharingLinkType = \"None\" DefaultLinkPermission = \"None\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOSite"},{"location":"resources/sharepoint/SPOSiteAuditSettings/","text":"SPOSiteAuditSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Url Key String URL of the site collection to configure. AuditFlags Required String Audit flag for the site collection. Can be 'All' or 'None'. All, None Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSiteAuditSettings \u00b6 Description \u00b6 Set Audit settings for a site. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSiteAuditSettings 'ConfigureSiteAuditSettings ' { Url = \"https://contoso.sharepoint.com/sites/DemoSite\" AuditFlags = \"All\" Credential = $credsGlobalAdmin } } }","title":"SPOSiteAuditSettings"},{"location":"resources/sharepoint/SPOSiteDesign/","text":"SPOSiteDesign \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Title Key String The title of the site design. SiteScriptNames Write StringArray[] The names of the site design scripts. WebTemplate Write String Web template to which the site design is applied to when invoked. CommunicationSite, TeamSite, GrouplessTeamSite Description Write String Description of site design. IsDefault Write Boolean Is site design applied by default to web templates. PreviewImageAltText Write String Site design alternate preview image text. PreviewImageUrl Write String Site design preview image url. Version Write UInt32 Site design version number. Ensure Write String Used to add or remove site design. Present, Absent Credential Write PSCredential Credentials of the Office365 Tenant Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSiteDesign \u00b6 Description \u00b6 This resource configures Site Designs. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSiteDesign 'ConfigureSiteDesign' { Title = \"DSC Site Design\" SiteScriptNames = @( \"Cust List\" , \"List_Views\" ) WebTemplate = \"TeamSite\" IsDefault = $false Description = \"Created by DSC\" PreviewImageAltText = \"Office 365\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOSiteDesign"},{"location":"resources/sharepoint/SPOSiteDesignRights/","text":"SPOSiteDesignRights \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values SiteDesignTitle Key String The title of the site design Rights Key String Rights to grant user principals on site design rights. View, None UserPrincipals Write StringArray[] List of user principals with seperated by commas to site design rights. Ensure Write String Used to add or remove list of users from site design rights. Present, Absent Credential Write PSCredential Credentials of the Office365 Tenant Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSiteDesignRights \u00b6 Description \u00b6 This resource configures rights on Site Designs. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSiteDesignRights 'ConfigureSiteDesignRights' { SiteDesignTitle = \"Customer List\" UserPrincipals = \"jdoe@contoso.onmicrosoft.com\" Rights = \"View\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOSiteDesignRights"},{"location":"resources/sharepoint/SPOSiteGroup/","text":"SPOSiteGroup \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The name of the site group Url Key String The URL of the site. Owner Write String The owner (email address) of the site group PermissionLevels Write StringArray[] The permission level of the site group Ensure Write String Used to add or remove site design. Present, Absent Credential Write PSCredential Credentials of the Office365 Tenant Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSiteGroup \u00b6 Description \u00b6 Configure groups for a SharePoint Online site. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSiteGroup 'ConfigureTestSiteGroup1' { Url = \"https://contoso.sharepoint.com/sites/testsite1\" Identity = \"TestSiteGroup1\" Owner = \"admin@contoso.onmicrosoft.com\" PermissionLevels = @( \"Edit\" , \"Read\" ) Ensure = \"Present\" Credential = $credsGlobalAdmin } SPOSiteGroup 'ConfigureTestSiteGroup2' { Url = \"https://contoso.sharepoint.com/sites/testsite1\" Identity = \"TestSiteGroup2\" Owner = \"admin@contoso.onmicrosoft.com\" PermissionLevels = @( \"Edit\" , \"Read\" ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOSiteGroup"},{"location":"resources/sharepoint/SPOSiteScript/","text":"SPOSiteScript \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Title Key String The title of the site script. Identity Write String ID of the site Script Description Write String The description of the site script. Content Write String A JSON string containing the site script. Ensure Write String Present ensures the site script exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOSiteScript \u00b6 Description \u00b6 This resource allows users to manage JSON files that specify an ordered list of actions to run when creating the new sites. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSiteScript 'ConfigureSiteScript' { Identity = \"5c73382d-9643-4aa0-9160-d0cba35e40fd\" Title = \"My Site Script\" Content = '{ \"$schema\": \"schema.json\", \"actions\": [ { \"verb\": \"setSiteLogo\", \"url\": \"https://contoso.sharepoint.com/SiteAssets/company-logo.png\" } ] }' Description = \"My custom site script\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOSiteScript"},{"location":"resources/sharepoint/SPOStorageEntity/","text":"SPOStorageEntity \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Key Key String The key of the storage entity. EntityScope Write String Scope of the storage entity. Tenant, Site Value Write String Value of the storage entity. Description Write String Description of storage entity. Comment Write String Comment for the storage entity. Ensure Write String Used to add or remove storage entity. Present, Absent SiteUrl Required String The url of site collection or tenant. Credential Write PSCredential Credentials of the Office365 Tenant Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOStorageEntity \u00b6 Description \u00b6 This resource configures Storage Entity for SharePoint Online. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOStorageEntity 'ConfigureDSCStorageEntity' { Key = \"DSCKey\" Value = \"Test storage entity\" EntityScope = \"Tenant\" Description = \"Description created by DSC\" Comment = \"Comment from DSC\" SiteUrl = \"https://contoso-admin.sharepoint.com\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOStorageEntity"},{"location":"resources/sharepoint/SPOTenantCDNPolicy/","text":"SPOTenantCDNPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values CDNType Key String Type of Content Delivery Network. Can be 'Private' or 'Public'. Private, Public ExcludeRestrictedSiteClassifications Write StringArray[] List of site classifications to exclude. IncludeFileExtensions Write StringArray[] List of file extensions to include in the Policy. Credential Write PSCredential Credentials of the Office365 Tenant Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOTenantCdnPolicy \u00b6 Description \u00b6 This resource configures Content Delivery Network policies for SharePoint Online. Not supported in GCC High Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOTenantCDNPolicy 'PublicCDNPolicy' { IncludeFileExtensions = @( '.jpg' , '.png' ) CDNType = \"Public\" ExcludeRestrictedSiteClassifications = @() Credential = $credsGlobalAdmin } SPOTenantCDNPolicy 'PrivateCDNPolicy' { IncludeFileExtensions = @( '.gif' ) CDNType = \"Private\" ExcludeRestrictedSiteClassifications = @() Credential = $credsGlobalAdmin } } }","title":"SPOTenantCDNPolicy"},{"location":"resources/sharepoint/SPOTenantCdnEnabled/","text":"SPOTenantCdnEnabled \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values CdnType Key String Specifies the CDN type. The valid values are public or private. Public, Private Enable Write Boolean Specify to enable or disable tenant CDN. Ensure Write String Get-PNPTenantCdnEnabled always returns a value, only support value is Present Present Credential Write PSCredential Credentials of the SharePoint Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOTenantCdnEnabled \u00b6 Description \u00b6 This resource enables / disables SharePoint online CDN Not supported in GCC High Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOTenantCdnEnabled 'ConfigureCDN' { Enable = $True CdnType = \"Public\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOTenantCdnEnabled"},{"location":"resources/sharepoint/SPOTenantSettings/","text":"SPOTenantSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes MinCompatibilityLevel Write UInt32 Specifies the lower bound on the compatibility level for new sites. MaxCompatibilityLevel Write UInt32 Specifies the upper bound on the compatibility level for new sites. SearchResolveExactEmailOrUPN Write Boolean Removes the search capability from People Picker. Note, recently resolved names will still appear in the list until browser cache is cleared or expired. OfficeClientADALDisabled Write Boolean When set to true this will disable the ability to use Modern Authentication that leverages ADAL across the tenant. LegacyAuthProtocolsEnabled Write Boolean Setting this parameter prevents Office clients using non-modern authentication protocols from accessing SharePoint Online resources. RequireAcceptingAccountMatchInvitedAccount Write Boolean DEPRECATED SignInAccelerationDomain Write String Specifies the home realm discovery value to be sent to Azure Active Directory (AAD) during the user sign-in process. UsePersistentCookiesForExplorerView Write Boolean Lets SharePoint issue a special cookie that will allow this feature to work even when Keep Me Signed In is not selected. UserVoiceForFeedbackEnabled Write Boolean Allow feedback via UserVoice. PublicCdnEnabled Write Boolean Configure PublicCDN PublicCdnAllowedFileTypes Write String Configure filetypes allowed for PublicCDN UseFindPeopleInPeoplePicker Write Boolean When set to $true, users aren't able to share with security groups or SharePoint groups NotificationsInSharePointEnabled Write Boolean When set to $true, users aren't able to share with security groups or SharePoint groups OwnerAnonymousNotification Write Boolean ApplyAppEnforcedRestrictionsToAdHocRecipients Write Boolean FilePickerExternalImageSearchEnabled Write Boolean HideDefaultThemes Write Boolean Defines if the default themes are visible or hidden MarkNewFilesSensitiveByDefault Write String Allow or block external sharing until at least one Office DLP policy scans the content of the file. AllowExternalSharing, BlockExternalSharing ConditionalAccessPolicy Write String Allow or Block Conditional Access Policy on the SharePoint Tenant AllowFullAccess, AllowLimitedAccess, BlockAccess DisabledWebPartIds Write String Provide GUID for the Web Parts that are to be disabled on the Sharepoint Site Ensure Write String Only accepted value is 'Present'. Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPO Tenant Settings \u00b6 Description \u00b6 This resource allows users to configure and monitor the tenant settings for their SPO tenant settings. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOTenantSettings 'ConfigureTenantSettings' { IsSingleInstance = \"Yes\" MinCompatibilityLevel = 16 MaxCompatibilityLevel = 16 SearchResolveExactEmailOrUPN = $false OfficeClientADALDisabled = $false LegacyAuthProtocolsEnabled = $true SignInAccelerationDomain = \"\" UsePersistentCookiesForExplorerView = $false UserVoiceForFeedbackEnabled = $true PublicCdnEnabled = $false PublicCdnAllowedFileTypes = \"CSS,EOT,GIF,ICO,JPEG,JPG,JS,MAP,PNG,SVG,TTF,WOFF\" UseFindPeopleInPeoplePicker = $false NotificationsInSharePointEnabled = $true OwnerAnonymousNotification = $true ApplyAppEnforcedRestrictionsToAdHocRecipients = $true FilePickerExternalImageSearchEnabled = $true HideDefaultThemes = $false MarkNewFilesSensitiveByDefault = \"AllowExternalSharing\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOTenantSettings"},{"location":"resources/sharepoint/SPOTheme/","text":"SPOTheme \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Property Write String Name of the property. Value Write String Color value in Hexadecimal. Name Key String The name of the theme, which appears in the theme picker UI and is also used by administrators and developers to refer to the theme in PowerShell cmdlets or calls to the SharePoint REST API. IsInverted Write Boolean This value should be false for light themes and true for dark themes; it controls whether SharePoint uses dark or light theme colors to render text on colored backgrounds. Palette Write InstanceArray[] Specifies the color scheme which composes your theme. Ensure Write String Only accepted value is 'Present'. Present, Absent Credential Write PSCredential Credentials of the account to authenticate with. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificatePassword Write PSCredential Username can be made up to anything but password will be used for certificatePassword CertificatePath Write String Path to certificate used in service principal usually a PFX file. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOTheme \u00b6 Description \u00b6 This resource allows users to configure and monitor the themes for their SPO tenant. To configure your SPO themes using this configuration resource requires you to provide a color palette which at the end defines the colors of your theme. You can use the SPO Theme builder under: https://aka.ms/spthemebuilder to create and preview your color palette. Once you are satisfied with the color of your theme you can copy the JSON Output and put it directly into your configuration. More details on the theme schema can be found here Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOTheme 'ConfigureSharePointTheme' { Name = \"PSTheme1\" IsInverted = $false Palette = @( MSFT_SPOThemePaletteProperty { Property = \"themePrimary\" Value = \"#0078d4\" } MSFT_SPOThemePaletteProperty { Property = \"themeLighterAlt\" Value = \"#eff6fc\" } ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOTheme"},{"location":"resources/sharepoint/SPOUserProfileProperty/","text":"SPOUserProfileProperty \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Key Write String Name of the User Profile Property. Value Write String Value of the User Profile Property. UserName Key String Username of the user to configure the profile properties for. E.g. John.Smith@contoso.com Properties Write InstanceArray[] Array of MSFT_SPOUserProfilePropertyInstance representing the profile properties to set. Ensure Write String Only accepted value is 'Present'. Present Credential Write PSCredential Credentials of the Global Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. ApplicationSecret Write PSCredential Secret of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. ManagedIdentity Write Boolean Managed ID being used for authentication. SPOUserProfileProperty \u00b6 Description \u00b6 This resource allows users to configure and monitor the profile properties of a user. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOUserProfileProperty 'ConfigureUserProfileProperty' { UserName = \"John.Smith@contoso.com\" Properties = @( MSFT_SPOUserProfilePropertyInstance { Key = \"MyProperty\" Value = \"MyValue\" } ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"SPOUserProfileProperty"},{"location":"resources/teams/TeamsCallingPolicy/","text":"TeamsCallingPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Calling Policy. Description Write String Description of the Teams Calling Policy. AllowPrivateCalling Write Boolean Controls all calling capabilities in Teams. Turning this off will turn off all calling functionality in Teams. If you use Skype for Business for calling, this policy will not affect calling functionality in Skype for Business. AllowVoicemail Write String Enables inbound calls to be routed to voice mail. Valid options are: AlwaysEnabled, AlwaysDisabled, UserOverride. AlwaysEnabled, AlwaysDisabled, UserOverride AllowCallGroups Write Boolean Enables inbound calls to be routed to call groups. AllowDelegation Write Boolean Enables inbound calls to be routed to delegates; allows delegates to make outbound calls on behalf of the users for whom they have delegated permissions. AllowCallForwardingToUser Write Boolean Enables call forwarding or simultaneous ringing of inbound calls to other users in your tenant. AllowCallForwardingToPhone Write Boolean Enables call forwarding or simultaneous ringing of inbound calls to any phone number. AllowCallRedirect Write String Setting this parameter provides the ability to configure call redirection capabilities on Teams phones. Enabled, Disabled, UserOverride AllowSIPDevicesCalling Write Boolean Determines whether the user is allowed to use SIP devices for calling on behalf of a Teams client. AllowWebPSTNCalling Write Boolean Allows PSTN calling from the Team web client PreventTollBypass Write Boolean Setting this parameter to True will send calls through PSTN and incur charges rather than going through the network and bypassing the tolls. BusyOnBusyEnabledType Write String Setting this parameter lets you configure how incoming calls are handled when a user is already in a call or conference or has a call placed on hold. New or incoming calls will be rejected with a busy signal. Valid options are: Enabled, Disabled and Unanswered. Enabled, Disabled, Unanswered, UserOverride CallRecordingExpirationDays Write UInt32 Sets the expiration of the recorded 1:1 calls. MusicOnHoldEnabledType Write String Setting this parameter allows you to turn on or turn off music on hold when a PSTN caller is placed on hold. It is turned on by default. Valid options are: Enabled, Disabled, UserOverride. For now setting the value to UserOverride is the same as Enabled. This setting does not apply to call park and SLA boss delegate features. Valid options are: Enabled, Disabled, UserOverride. Enabled, Disabled, UserOverride SafeTransferEnabled Write String This parameter is not available for use. Valid options are: Enabled, Disabled, UserOverride. Enabled, Disabled, UserOverride AllowCloudRecordingForCalls Write Boolean Setting this parameter to True will allows 1:1 Calls to be recorded. AllowTranscriptionforCalling Write Boolean Determines whether post-meeting captions and transcriptions are allowed in a user's meetings. Set this to TRUE to allow. Set this to FALSE to prohibit. LiveCaptionsEnabledTypeForCalling Write String Determines whether real-time captions are available for the user in Teams meetings. Set this to DisabledUserOverride to allow user to turn on live captions. Set this to Disabled to prohibit. DisabledUserOverride, Disabled AutoAnswerEnabledType Write String This setting allows the tenant admin to enable or disable the Auto-Answer setting. Valid options are: Enabled, Disabled. Enabled, Disabled SpamFilteringEnabledType Write String Setting this parameter determines whether calls identified as Spam will be rejected or not (probably). Valid options are: Enabled, Disabled. Enabled, Disabled Ensure Write String Present ensures the policyexists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsCallingPolicy \u00b6 Description \u00b6 This resource configures a Teams Calling Policy. More information: https://docs.microsoft.com/en-us/microsoftteams/teams-calling-policy Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Calling Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsCallingPolicy 'ConfigureCallingPolicy' { Identity = 'New Calling Policy' AllowPrivateCalling = $false AllowVoicemail = 'UserOverride' AllowCallGroups = $true AllowDelegation = $true AllowCallForwardingToUser = $false AllowCallForwardingToPhone = $true PreventTollBypass = $true BusyOnBusyEnabledType = 'Enabled' Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"TeamsCallingPolicy"},{"location":"resources/teams/TeamsChannel/","text":"TeamsChannel \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Current channel name TeamName Key String Name of the team the Channel belongs to GroupID Write String Team group ID, only used to target a Team when duplicated display names occurs. NewDisplayName Write String Used to update current channel name Description Write String Channel description Ensure Write String Present ensures the Team channel exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsChannel \u00b6 Description \u00b6 This resource is used to add and update channels in existing Teams. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsChannel 'ConfigureChannel' { TeamName = \"SuperSecretTeam\" DisplayName = \"SP2013 Review teams group\" NewDisplayName = \"SP2016 Review teams group\" Description = \"SP2016 Code reviews for SPFX\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"TeamsChannel"},{"location":"resources/teams/TeamsChannelTab/","text":"TeamsChannelTab \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Display Name of the Channel Tab. TeamName Required String Display Name of the Team. ChannelName Required String Display Name of the Channel. TeamId Write String Unique Id of the Team of the instance on the source tenant. TeamsApp Write String Id of the Teams App associated with the custom tab. SortOrderIndex Write UInt32 Index of the sort order for the custom tab. WebSiteUrl Write String Url of the website linked to the Channel Tab. ContentUrl Write String Url of the content linked to the Channel Tab. RemoveUrl Write String Url of the location used to remove the app. EntityId Write String Id of the Entity linked to the Channel Tab. Ensure Write String Present ensures the Tab exists, absent ensures it is removed. Present, Absent ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsChannelTab \u00b6 Description \u00b6 This resource configures a new Custom tab in a Channel. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsChannelTab 'ConfigureChannelTab' { ChannelName = \"General\" ContentUrl = \"https://contoso.com\" DisplayName = \"TestTab\" SortOrderIndex = \"10100\" TeamName = \"Contoso Team\" TeamsApp = \"com.microsoft.teamspace.tab.web\" WebSiteUrl = \"https://contoso.com\" Ensure = \"Present\" ApplicationId = \"12345\" CertificateThumbprint = \"ABCDEF1234567890\" TenantId = \"contoso.onmicrosoft.com\" } } }","title":"TeamsChannelTab"},{"location":"resources/teams/TeamsChannelsPolicy/","text":"TeamsChannelsPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Channel Policy. Description Write String Description of the Teams Channel Policy. AllowChannelSharingToExternalUser Write Boolean Determines whether a user is allowed to share a shared channel with an external user. Set this to TRUE to allow. Set this FALSE to prohibit. AllowOrgWideTeamCreation Write Boolean Determines whether a user is allowed to create an org-wide team. Set this to TRUE to allow. Set this FALSE to prohibit. AllowPrivateTeamDiscovery Write Boolean Determines whether a user is allowed to discover private teams in suggestions and search results. Set this to TRUE to allow. Set this FALSE to prohibit. AllowPrivateChannelCreation Write Boolean Determines whether a user is allowed to create a private channel. Set this to TRUE to allow. Set this FALSE to prohibit. AllowSharedChannelCreation Write Boolean Determines whether a user is allowed to create a shared channel. Set this to TRUE to allow. Set this FALSE to prohibit. AllowUserToParticipateInExternalSharedChannel Write Boolean Determines whether a user is allowed to participate in a shared channel that has been shared by an external user. Set this to TRUE to allow. Set this FALSE to prohibit. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsChannelsPolicy \u00b6 Description \u00b6 This resource configures a Teams Channel Policy. More information: https://docs.microsoft.com/en-us/microsoftteams/teams-policies Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Channels Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsChannelsPolicy 'ConfigureChannelsPolicy' { Identity = 'New Channels Policy' AllowOrgWideTeamCreation = $True AllowPrivateChannelCreation = $True AllowPrivateTeamDiscovery = $True Description = 'This is an example' Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"TeamsChannelsPolicy"},{"location":"resources/teams/TeamsClientConfiguration/","text":"TeamsClientConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The only valid input is Global - the tenant wide configuration Global AllowBox Write Boolean Designates whether users are able to leverage Box as a third party storage solution in Microsoft Teams. If $true, users will be able to add Box in the client and interact with the files stored there. AllowDropBox Write Boolean Designates whether users are able to leverage DropBox as a third party storage solution in Microsoft Teams. If $true, users will be able to add DropBox in the client and interact with the files stored there. AllowEmailIntoChannel Write Boolean When set to $true, mail hooks are enabled, and users can post messages to a channel by sending an email to the email address of Teams channel. AllowGoogleDrive Write Boolean Designates whether users are able to leverage GoogleDrive as a third party storage solution in Microsoft Teams. If $true, users will be able to add Google Drive in the client and interact with the files stored there. AllowGuestUser Write Boolean Designates whether or not guest users in your organization will have access to the Teams client. If $true, guests in your tenant will be able to access the Teams client. Note that this setting has a core dependency on Guest Access being enabled in your Office 365 tenant. AllowOrganizationTab Write Boolean When set to $true, users will be able to see the organizational chart icon other users' contact cards, and when clicked, this icon will display the detailed organizational chart. AllowResourceAccountSendMessage Write Boolean Surface Hub uses a device account to provide email and collaboration services (IM, video, voice). This device account is used as the originating identity (the from party) when sending email, IM, and placing calls. As this account is not coming from an individual, identifiable user, it is deemed anonymous because it originated from the Surface Hub's device account. If set to $true, these device accounts will be able to send chat messages in Skype for Business Online (does not apply to Microsoft Teams). AllowScopedPeopleSearchandAccess Write Boolean If set to $true, the Exchange address book policy (ABP) will be used to provide customized view of the global address book for each user. This is only a virtual separation and not a legal separation. AllowShareFile Write Boolean Designates whether users are able to leverage ShareFile as a third party storage solution in Microsoft Teams. If $true, users will be able to add ShareFile in the client and interact with the files stored there. AllowSkypeBusinessInterop Write Boolean When set to $true, Teams conversations automatically show up in Skype for Business for users that aren't enabled for Teams. AllowEgnyte Write Boolean Designates whether users are able to leverage Egnyte as a third party storage solution in Microsoft Teams. If $true, users will be able to add Egnyte in the client and interact with the files stored there. ContentPin Write String This setting applies only to Skype for Business Online (not Microsoft Teams) and defines whether the user must provide a secondary form of authentication to access the meeting content from a resource device account. Meeting content is defined as files that are shared to the Content Bin - files that have been attached to the meeting. NotRequired, RequiredOutsideScheduleMeeting, AlwaysRequired ResourceAccountContentAccess Write String Require a secondary form of authentication to access meeting content. NoAccess, PartialAccess, FullAccess RestrictedSenderList Write StringArray[] Senders domains can be further restricted to ensure that only allowed SMTP domains can send emails to the Teams channels. This is a comma-separated string of the domains you'd like to allow to send emails to Teams channels. Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsClientConfiguration \u00b6 Description \u00b6 This resource is used to configure the Teams client settings. More information: https://docs.microsoft.com/en-us/microsoftteams/enable-features-office-365#teams-settings-and-teams-upgrade-settings-in-the-microsoft-teams-admin-center Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsClientConfiguration 'TeamsClientConfiguration' { AllowBox = $True AllowDropBox = $True AllowEmailIntoChannel = $True AllowGoogleDrive = $True AllowGuestUser = $True AllowOrganizationTab = $True AllowResourceAccountSendMessage = $True AllowScopedPeopleSearchandAccess = $False AllowShareFile = $True AllowSkypeBusinessInterop = $True ContentPin = \"RequiredOutsideScheduleMeeting\" Identity = \"Global\" ResourceAccountContentAccess = \"NoAccess\" Credential = $credsGlobalAdmin } } }","title":"TeamsClientConfiguration"},{"location":"resources/teams/TeamsDialInConferencingTenantSettings/","text":"TeamsDialInConferencingTenantSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Only accepted value is Yes. Yes AllowPSTNOnlyMeetingsByDefault Write Boolean Specifies the default value that gets assigned to the 'AllowPSTNOnlyMeetings' setting of users when they are enabled for dial-in conferencing, or when a user's dial-in conferencing provider is set to Microsoft. If set to $true, the 'AllowPSTNOnlyMeetings' setting of the user will also be set to true. If $false, the user setting will be false. The default value for AllowPSTNOnlyMeetingsByDefault is $false. AutomaticallyMigrateUserMeetings Write Boolean Automatically Migrate User Meetings. AutomaticallyReplaceAcpProvider Write Boolean Automatically replace ACP Provider. AutomaticallySendEmailsToUsers Write Boolean Specifies whether advisory emails will be sent to users when the events listed below occur. Setting the parameter to $true enables the emails to be sent, $false disables the emails. The default is $true. EnableDialOutJoinConfirmation Write Boolean Enable Dial out join confirmation. EnableEntryExitNotifications Write Boolean Specifies if, by default, announcements are made as users enter and exit a conference call. Set to $true to enable notifications, $false to disable notifications. The default is $true. EntryExitAnnouncementsType Write String Supported entry and exit announcement type. MaskPstnNumbersType Write String This parameter allows tenant administrators to configure masking of PSTN participant phone numbers in the roster view for Microsoft Teams meetings enabled for Audio Conferencing, scheduled within the organization. Possible values are MaskedForExternalUsers, MaskedForAllUsers or NoMasking MaskedForExternalUsers, MaskedForAllUsers, NoMasking PinLength Write UInt32 Specifies the number of digits in the automatically generated PINs. Organizers can enter their PIN to start a meeting they scheduled if they join via phone and are the first person to join. The minimum value is 4, the maximum is 12, and the default is 5. Credential Write PSCredential Credentials of the Teams Global Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsUserCallingSettings \u00b6 Description \u00b6 This resource configures a Teams User's Calling Settings. More information: https://learn.microsoft.com/en-us/microsoftteams/user-call-settings Examples \u00b6 Example 1 \u00b6 This example configures the Teams Dial In Conferencing Tenant Settings. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsCredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsDialInConferencingTenantSettings 'TenantSettings' { AllowPSTNOnlyMeetingsByDefault = $False ; AutomaticallyMigrateUserMeetings = $True ; AutomaticallyReplaceAcpProvider = $False ; AutomaticallySendEmailsToUsers = $True ; Credential = $credsCredential ; EnableDialOutJoinConfirmation = $False ; EnableEntryExitNotifications = $True ; EntryExitAnnouncementsType = \"ToneOnly\" ; IsSingleInstance = \"Yes\" ; MaskPstnNumbersType = \"MaskedForExternalUsers\" ; PinLength = 8 ; } } }","title":"TeamsDialInConferencingTenantSettings"},{"location":"resources/teams/TeamsEmergencyCallRoutingPolicy/","text":"TeamsEmergencyCallRoutingPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values EmergencyDialString Write String Specifies the emergency phone number. EmergencyDialMask Write String For each Teams emergency number, you can specify zero or more emergency dial masks. A dial mask is a number that you want to translate into the value of the emergency dial number value when it is dialed. OnlinePSTNUsage Write String Specify the online public switched telephone network (PSTN) usage Identity Key String Identity of the Teams Emergency Call Routing Policy. Description Write String Description of the Teams Emergency Call Routing Policy. EmergencyNumbers Write InstanceArray[] Emergency number(s) associated with the policy. AllowEnhancedEmergencyServices Write Boolean Flag to enable Enhanced Emergency Services Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsEmergencyCallRoutingPolicy \u00b6 Description \u00b6 This resource configures the Teams Emergency Call Routing Policies. More information: https://docs.microsoft.com/en-us/microsoftteams/manage-emergency-call-routing-policies Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Emergency Call Routing Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsEmergencyCallRoutingPolicy 'EmergencyCallRoutingPolicyExample' { Identity = \"Unit Test\" AllowEnhancedEmergencyServices = $False Description = \"Description\" EmergencyNumbers = @( MSFT_TeamsEmergencyNumber { EmergencyDialString = '123456' EmergencyDialMask = '123' OnlinePSTNUsage = '' } ) Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"TeamsEmergencyCallRoutingPolicy"},{"location":"resources/teams/TeamsEmergencyCallingPolicy/","text":"TeamsEmergencyCallingPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Emergency Calling Policy. Description Write String Description of the Teams Emergency Calling Policy. EnhancedEmergencyServiceDisclaimer Write String Allows the tenant administrator to configure a text string, which is shown at the top of the Calls app. ExternalLocationLookupMode Write String Enables ExternalLocationLookupMode. This mode allows users to set Emergency addresses for remote locations. Disabled, Enabled NotificationDialOutNumber Write String This parameter represents PSTN number which can be dialed out if NotificationMode is set to either of the two Conference values. NotificationGroup Write String NotificationGroup is a email list of users and groups to be notified of an emergency call. NotificationMode Write String The type of conference experience for security desk notification. NotificationOnly, ConferenceMuted, ConferenceUnMuted Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Global Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsEmergencyCallingPolicy \u00b6 Description \u00b6 This resource configures the Teams Emergency Calling Policies. More information: https://docs.microsoft.com/en-us/microsoftteams/manage-emergency-calling-policies Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Emergency Calling Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsEmergencyCallingPolicy 'ConfigureEmergencyCallingPolicy' { Description = \"Demo\" Identity = \"Demo Emergency Calling Policy\" NotificationDialOutNumber = \"+1234567890\" NotificationGroup = 'john.smith@contoso.com' NotificationMode = \"NotificationOnly\" Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"TeamsEmergencyCallingPolicy"},{"location":"resources/teams/TeamsEventsPolicy/","text":"TeamsEventsPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Events Policy. Description Write String Description of the Teams Events Policy. AllowWebinars Write String Determines if webinars are allowed by the policy or not. Disabled, Enabled EventAccessType Write String Defines who is allowed to join the event. Everyone, EveryoneInCompanyExcludingGuests Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Global Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsEventsPolicy \u00b6 Description \u00b6 This resource configures the Teams Events Policies. Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Events Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsTeamsAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsEventsPolicy 'ConfigureEventsPolicy' { Identity = \"My Events Policy\" ; Description = \"This is a my Events Policy\" ; AllowWebinars = \"Disabled\" ; EventAccessType = \"EveryoneInCompanyExcludingGuests\" ; Credential = $credsTeamsAdmin Ensure = \"Present\" ; } } }","title":"TeamsEventsPolicy"},{"location":"resources/teams/TeamsFederationConfiguration/","text":"TeamsFederationConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The only valid input is Global - the tenant wide configuration Global AllowFederatedUsers Write Boolean When set to True users will be potentially allowed to communicate with users from other domains. AllowedDomains Write StringArray[] List of federated domains to allow. BlockedDomains Write StringArray[] List of federated domains to block. AllowPublicUsers Write Boolean When set to True users will be potentially allowed to communicate with users who have accounts on public IM and presence providers. AllowTeamsConsumer Write Boolean Allows federation with people using Teams with an account that's not managed by an organization. AllowTeamsConsumerInbound Write Boolean Allows people using Teams with an account that's not managed by an organization, to discover and start communication with users in your organization. Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsFederationConfiguration \u00b6 Description \u00b6 This resource is used to configure the Teams Federation Configuration (CsTenantFederationConfiguration). In the Teams admin center this is available in 'External access' in the Users section. More information: https://docs.microsoft.com/en-us/microsoftteams/manage-external-access Examples \u00b6 Example 1 \u00b6 This examples sets the Teams Federation Configuration. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsFederationConfiguration 'FederationConfiguration' { Identity = \"Global\" AllowFederatedUsers = $True AllowPublicUsers = $True AllowTeamsConsumer = $False AllowTeamsConsumerInbound = $False Credential = $credsGlobalAdmin } } }","title":"TeamsFederationConfiguration"},{"location":"resources/teams/TeamsGuestCallingConfiguration/","text":"TeamsGuestCallingConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The only valid input is Global - the tenant wide configuration Global AllowPrivateCalling Required Boolean Designates whether guests who have been enabled for Teams can use calling functionality. If $false, guests cannot call. Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsGuestCallingConfiguration \u00b6 Description \u00b6 This resource is used to configure the Teams guest calling configuration. More information: https://docs.microsoft.com/en-us/microsoftteams/set-up-guests Examples \u00b6 Example 1 \u00b6 This example configures the Teams Guest Calling Configuration. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsGuestCallingConfiguration 'ConfigureGuestCalling' { Identity = \"Global\" AllowPrivateCalling = $True Credential = $credsGlobalAdmin } } }","title":"TeamsGuestCallingConfiguration"},{"location":"resources/teams/TeamsGuestMeetingConfiguration/","text":"TeamsGuestMeetingConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The only valid input is Global - the tenant wide configuration Global AllowIPVideo Write Boolean Determines whether video is enabled in a user's meetings or calls. Set this to TRUE to allow guests to share their video. Set this to FALSE to prohibit guests from sharing their video. ScreenSharingMode Write String Determines the mode in which guests can share a screen in calls or meetings. Set this to SingleApplication to allow the user to share an application at a given point in time. Set this to EntireScreen to allow the user to share anything on their screens. Set this to Disabled to prohibit the user from sharing their screens. Disabled, EntireScreen, SingleApplication AllowMeetNow Write Boolean Determines whether guests can start ad-hoc meetings. Set this to TRUE to allow guests to start ad-hoc meetings. Set this to FALSE to prohibit guests from starting ad-hoc meetings. Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsGuestMeetingConfiguration \u00b6 Description \u00b6 This resource is used to configure the Teams Guest Meetings Configuration. More information: https://docs.microsoft.com/en-us/microsoftteams/set-up-guests Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsGuestMeetingConfiguration 'TeamsGuestMeetingConfiguration' { Identity = \"Global\" AllowIPVideo = $True AllowMeetNow = $True ScreenSharingMode = \"EntireScreen\" Credential = $credsGlobalAdmin } } }","title":"TeamsGuestMeetingConfiguration"},{"location":"resources/teams/TeamsGuestMessagingConfiguration/","text":"TeamsGuestMessagingConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The only valid input is Global - the tenant wide configuration Global AllowUserEditMessage Write Boolean Determines if a user is allowed to edit their own messages. AllowUserDeleteMessage Write Boolean Determines if a user is allowed to delete their own messages. AllowUserChat Write Boolean Determines if a user is allowed to chat. GiphyRatingType Write String Determines Giphy content restrictions. Default value is Moderate, other options are Strict and NoRestriction. Moderate, Strict, NoRestriction AllowMemes Write Boolean Determines if memes are available for use. AllowStickers Write Boolean Determines if stickers are available for use. AllowGiphy Write Boolean Determines if Giphy are available for use. AllowImmersiveReader Write Boolean Determines if Immersive Reader is enabled. Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsGuestMessagingConfiguration \u00b6 Description \u00b6 This resource is used to configure the Teams Guest Messaging Configuration. More information: https://docs.microsoft.com/en-us/microsoftteams/set-up-guests Examples \u00b6 Example 1 \u00b6 This example is used to configure the tenant's Guest Messaging settings for Teams Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsGuestMessagingConfiguration 'TeamsGuestMessagingConfig' { Identity = \"Global\" AllowGiphy = $True AllowImmersiveReader = $False AllowMemes = $True AllowStickers = $True AllowUserChat = $True AllowUserDeleteMessage = $False AllowUserEditMessage = $True GiphyRatingType = \"Moderate\" Credential = $credsglobaladmin } } }","title":"TeamsGuestMessagingConfiguration"},{"location":"resources/teams/TeamsMeetingBroadcastConfiguration/","text":"TeamsMeetingBroadcastConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The only valid input is Global - the tenant wide configuration Global SupportURL Write String Specifies a URL where broadcast event attendees can find support information or FAQs specific to that event. The URL will be displayed to the attendees during the broadcast. AllowSdnProviderForBroadcastMeeting Write Boolean If set to $true, Teams meeting broadcast streams are enabled to take advantage of the network and bandwidth management capabilities of your Software Defined Network (SDN) provider. SdnProviderName Write String Specifies the Software Defined Network (SDN) provider's name. This parameter is only required if AllowSdnProviderForBroadcastMeeting is set to $true. SdnLicenseId Write String Specifies the Software Defined Network (SDN) license identifier. This is required and provided by some SDN providers. This parameter is only required if AllowSdnProviderForBroadcastMeeting is set to $true. SdnApiTemplateUrl Write String Specifies the Software Defined Network (SDN) provider's HTTP API endpoint. This information is provided to you by the SDN provider. This parameter is only required if AllowSdnProviderForBroadcastMeeting is set to $true. SdnApiToken Write String Specifies the Software Defined Network (SDN) provider's authentication token which is required to use their SDN license. This is required by some SDN providers who will give you the required token. This parameter is only required if AllowSdnProviderForBroadcastMeeting is set to $true. Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsMeetingBroadcastConfiguration \u00b6 Description \u00b6 This resource is used to configure the Teams Meeting Broadcast Settings. More information: https://docs.microsoft.com/en-us/microsoftteams/teams-live-events/configure-teams-live-events Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Meeting Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsMeetingBroadcastConfiguration 'MeetingBroadcastConfiguration' { Identity = 'Global' AllowSdnProviderForBroadcastMeeting = $True SupportURL = \"https://support.office.com/home/contact\" SdnProviderName = \"hive\" SdnLicenseId = \"5c12d0-d52950-e03e66-92b587\" SdnApiTemplateUrl = \"https://api.hivestreaming.com/v1/eventadmin?partner_token={0}\" Credential = $credsGlobalAdmin } } }","title":"TeamsMeetingBroadcastConfiguration"},{"location":"resources/teams/TeamsMeetingBroadcastPolicy/","text":"TeamsMeetingBroadcastPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The identifier of the Teams Meeting Broadcast Policy. AllowBroadcastScheduling Write Boolean Specifies whether this user can create broadcast events in Teams. This settng impacts broadcasts that use both self-service and external encoder production methods. AllowBroadcastTranscription Write Boolean Specifies whether real-time transcription and translation can be enabled in the broadcast event. Note: this setting is applicable to broadcast events that use Teams Meeting production only and does not apply when external encoder is used as production method. BroadcastAttendeeVisibilityMode Write String Specifies the attendee visibility mode of the broadcast events created by this user. This setting controls who can watch the broadcast event - e.g. anyone can watch this event including anonymous users or only authenticated users in my company can watch the event. Note: this setting is applicable to broadcast events that use Teams Meeting production only and does not apply when external encoder is used as production method. Everyone, EveryoneInCompany, InvitedUsersInCompany, EveryoneInCompanyAndExternal, InvitedUsersInCompanyAndExternal BroadcastRecordingMode Write String Specifies whether broadcast events created by this user are always recorded, never recorded or user can choose whether to record or not. Note: this setting is applicable to broadcast events that use Teams Meeting production only and does not apply when external encoder is used as production method. AlwaysEnabled, AlwaysDisabled, UserOverride Ensure Write String Present ensures the Policy exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsMeetingBroadcastPolicy \u00b6 Description \u00b6 This resource is used to configure the Teams Meeting Broadcast Policies. More information: https://docs.microsoft.com/en-us/microsoftteams/teams-live-events/set-up-for-teams-live-events Examples \u00b6 Example 1 \u00b6 This examples create a new Teams Meeting Broadcast Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsMeetingBroadcastPolicy 'ConfigureMeetingBroadcastPolicy' { Identity = \"MyDemoPolicy\" AllowBroadcastScheduling = $True AllowBroadcastTranscription = $False BroadcastAttendeeVisibilityMode = \"EveryoneInCompany\" BroadcastRecordingMode = \"AlwaysEnabled\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"TeamsMeetingBroadcastPolicy"},{"location":"resources/teams/TeamsMeetingConfiguration/","text":"TeamsMeetingConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The only valid input is Global - the tenant wide configuration Global LogoURL Write String URL to a logo image. This would be included in the meeting invite. Please ensure this URL is publicly accessible for invites that go beyond your federation boundaries. LegalURL Write String URL to a website containing legal information and meeting disclaimers. This would be included in the meeting invite. Please ensure this URL is publicly accessible for invites that go beyond your federation boundaries. HelpURL Write String URL to a website where users can obtain assistance on joining the meeting.This would be included in the meeting invite. Please ensure this URL is publicly accessible for invites that go beyond your federation boundaries. CustomFooterText Write String Text to be used on custom meeting invitations. DisableAnonymousJoin Write Boolean Determines whether anonymous users are blocked from joining meetings in the tenant. Set this to TRUE to block anonymous users from joining. Set this to FALSE to allow anonymous users to join meetings. EnableQoS Write Boolean Determines whether Quality of Service Marking for real-time media (audio, video, screen/app sharing) is enabled in the tenant. Set this to TRUE to enable and FALSE to disable. ClientAudioPort Write UInt32 Determines the starting port number for client audio. Minimum allowed value: 1024 Maximum allowed value: 65535 Default value: 50000. ClientAudioPortRange Write UInt32 Determines the total number of ports available for client audio. Default value is 20. ClientVideoPort Write UInt32 Determines the starting port number for client video. Minimum allowed value: 1024 Maximum allowed value: 65535 Default value: 50020. ClientVideoPortRange Write UInt32 Determines the total number of ports available for client video. Default value is 20. ClientAppSharingPort Write UInt32 Determines the starting port number for client screen sharing or application sharing. Minimum allowed value: 1024 Maximum allowed value: 65535 Default value: 50040. ClientMediaPortRangeEnabled Write Boolean Determines whether custom media port and range selections need to be enforced. When set to True, clients will use the specified port range for media traffic. When set to False (the default value) for any available port (from port 1024 through port 65535) will be used to accommodate media traffic. ClientAppSharingPortRange Write UInt32 Determines the total number of ports available for client sharing or application sharing. Default value is 20. Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsMeetingConfiguration \u00b6 Description \u00b6 This resource is used to configure the Teams Meeting Configuration. More information: https://docs.microsoft.com/en-us/microsoftteams/meeting-settings-in-teams Examples \u00b6 Example 1 \u00b6 This examples sets the Teams Meeting Configuration. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsMeetingConfiguration 'MeetingConfiguration' { Identity = \"Global\" ClientAppSharingPort = 50040 ClientAppSharingPortRange = 20 ClientAudioPort = 50000 ClientAudioPortRange = 20 ClientMediaPortRangeEnabled = $True ClientVideoPort = 50020 ClientVideoPortRange = 20 CustomFooterText = \"This is some custom footer text\" DisableAnonymousJoin = $False EnableQoS = $False HelpURL = \"https://github.com/Microsoft/Office365DSC/Help\" LegalURL = \"https://github.com/Microsoft/Office365DSC/Legal\" LogoURL = \"https://github.com/Microsoft/Office365DSC/Logo.png\" Credential = $credsglobaladmin } } }","title":"TeamsMeetingConfiguration"},{"location":"resources/teams/TeamsMeetingPolicy/","text":"TeamsMeetingPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Meeting Policy. Description Write String Description of the Teams Meeting Policy. AllowChannelMeetingScheduling Write Boolean Determines whether a user can schedule channel meetings. Set this to TRUE to allow a user to schedule channel meetings. Set this to FALSE to prohibit the user from scheduling channel meetings. Note this only restricts from scheduling and not from joining a meeting scheduled by another user. AllowMeetNow Write Boolean Determines whether a user can start ad-hoc meetings. Set this to TRUE to allow a user to start ad-hoc meetings. Set this to FALSE to prohibit the user from starting ad-hoc meetings. AllowPrivateMeetNow Write Boolean Determines whether a user can start private ad-hoc meetings. Set this to TRUE to allow a user to start private ad-hoc meetings. Set this to FALSE to prohibit the user from starting private ad-hoc meetings. MeetingChatEnabledType Write String Determines whether or not Chat will be enabled or disabled for meetings. Disabled, Enabled LiveCaptionsEnabledType Write String Determines whether a user should have the option to view live captions or not in a meeting. Disabled, DisabledUserOverride AllowIPAudio Write Boolean Determines whether audio is enabled in a user's meetings or calls. Set this to TRUE to allow the user to share their audioo. Set this to FALSE to prohibit the user from sharing their audio. AllowIPVideo Write Boolean Determines whether video is enabled in a user's meetings or calls. Set this to TRUE to allow the user to share their video. Set this to FALSE to prohibit the user from sharing their video. AllowEngagementReport Write String Determines whether or not a meeting Organizer can track join and leave times for all users within their meetings as well as download a roster. Enabled, Disabled IPAudioMode Write String Determines whether or not a user can use audio in a meeting that supports it. EnabledOutgoingIncoming, Disabled IPVideoMode Write String Determines whether or not a user can use video in a meeting that supports it. Can only be enabled if IPAudioMode is enabled EnabledOutgoingIncoming, Disabled AllowAnonymousUsersToDialOut Write Boolean CURRENTLY DISABLED: Determines whether anonymous users can use the Call Me At feature for meeting audio. AllowAnonymousUsersToStartMeeting Write Boolean Determines whether anonymous users can initiate a meeting. Set this to TRUE to allow anonymous users to initiate a meeting. Set this to FALSE to prohibit them from initiating a meeting. AllowPrivateMeetingScheduling Write Boolean Determines whether a user can schedule private meetings. Set this to TRUE to allow a user to schedule private meetings. Set this to FALSE to prohibit the user from scheduling private meetings. Note this only restricts from scheduling and not from joining a meeting scheduled by another user. AutoAdmittedUsers Write String Determines what types of participants will automatically be added to meetings organized by this user. Set this to EveryoneInCompany if you would like meetings to place every external user in the lobby but allow all users in the company to join the meeting immediately. Set this to Everyone if you'd like to admit anonymous users by default. Set this to EveryoneInSameAndFederatedCompany if you would like meetings to allow federated users to join like your company's users, but place all other external users in a lobby. Set this to InvitedUsers if you would like meetings to allow only the invited users. EveryoneInCompany, Everyone, EveryoneInSameAndFederatedCompany, OrganizerOnly, InvitedUsers, EveryoneInCompanyExcludingGuests AllowPSTNUsersToBypassLobby Write Boolean Determines whether PSTN users should be automatically admitted to the meetings. Set this to TRUE to allow the PSTN user to be able bypass the meetinglobby. Set this to FALSE to prohibit the PSTN user from bypassing the meetinglobby. AllowCloudRecording Write Boolean Determines whether cloud recording is allowed in a user's meetings. Set this to TRUE to allow the user to be able to record meetings. Set this to FALSE to prohibit the user from recording meetings. AllowRecordingStorageOutsideRegion Write Boolean Determines whether cloud recording can be stored out of region for go-local tenants where recording is not yet enabled. DesignatedPresenterRoleMode Write String Determines if users can change the default value of the Who can present? setting in Meeting options in the Teams client. This policy setting affects all meetings, including Meet Now meetings. OrganizerOnlyUserOverride, EveryoneInCompanyUserOverride, EveryoneUserOverride RecordingStorageMode Write String Determines whether recordings will be stored in Stream or OneDrive for Business. Stream, OneDriveForBusiness AllowOutlookAddIn Write Boolean Determines whether a user can schedule Teams Meetings in Outlook desktop client. Set this to TRUE to allow the user to be able to schedule Teams meetings in Outlook client. Set this to FALSE to prohibit a user from scheduling Teams meeting in Outlook client. AllowPowerPointSharing Write Boolean Determines whether Powerpoint sharing is allowed in a user's meetings. Set this to TRUE to allow. Set this to FALSE to prohibit. AllowParticipantGiveRequestControl Write Boolean Determines whether participants can request or give control of screen sharing during meetings scheduled by this user. Set this to TRUE to allow the user to be able to give or request control. Set this to FALSE to prohibit the user from giving, requesting control in a meeting. AllowExternalParticipantGiveRequestControl Write Boolean Determines whether external participants can request or give control of screen sharing during meetings scheduled by this user. Set this to TRUE to allow the user to be able to give or request control. Set this to FALSE to prohibit an external user from giving or requesting control in a meeting. AllowSharedNotes Write Boolean Determines whether users are allowed to take shared notes. Set this to TRUE to allow. Set this to FALSE to prohibit. AllowWhiteboard Write Boolean Determines whether whiteboard is allowed in a user's meetings. Set this to TRUE to allow. Set this to FALSE to prohibit. AllowTranscription Write Boolean Determines whether real-time and/or post-meeting captions and transcriptions are allowed in a user's meetings. Set this to TRUE to allow. Set this to FALSE to prohibit. MediaBitRateKb Write UInt32 Determines the media bit rate for audio/video/app sharing transmissions in meetings. ScreenSharingMode Write String Determines the mode in which a user can share a screen in calls or meetings. Set this to SingleApplication to allow the user to share an application at a given point in time. Set this to EntireScreen to allow the user to share anything on their screens. Set this to Disabled to prohibit the user from sharing their screens. SingleApplication, EntireScreen, Disabled VideoFiltersMode Write String Determines which background filters are available to meeting attendees. NoFilters, BlurOnly, BlurAndDefaultBackgrounds, AllFilters AllowOrganizersToOverrideLobbySettings Write Boolean Determines whether organizers can override lobby settings for both VOIP and PSTN. Set this to TRUE to allow. Set this to FALSE to prohibit. PreferredMeetingProviderForIslandsMode Write String Determines which Outlook Add-in the user will get as preferred Meeting provider(TeamsAndSfb or Teams). TeamsAndSfb, Teams AllowNDIStreaming Write Boolean Determines whether a user is able to use NDI (Network Device Interface) in meetings - both for output and input streams. AllowUserToJoinExternalMeeting Write String Determines what types of external meetings users can join. Enabled is able join all external meetings. Enabled, FederatedOnly, Disabled EnrollUserOverride Write String Determines whether or not users will be able to enroll/capture their Biometric data: Face & Voice. Disabled, Enabled RoomAttributeUserOverride Write String Determines whether or not biometric data will be used to distinguish and or attribute in the transcript. Off, Distinguish, Attribute StreamingAttendeeMode Write String Determines whether or not meetings created by users with this policy are able to utilize the meeting overflow capability. Disabled, Enabled AllowBreakoutRooms Write Boolean Determines whether or not meetings created by users with this policy are able to utilize the Breakout Rooms feature. TeamsCameraFarEndPTZMode Write String Determines whether or not meetings created by users with this policy are able to utilize the Camera Far-End PTZ Mode. Disabled, Enabled AllowMeetingReactions Write Boolean Determines whether or not meetings created by users with this policy are able to utilize the Meeting Reactions feature. WhoCanRegister Write String Specifies who can attend and register for webinars. Everyone, EveryoneInCompany Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Global Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsMeetingPolicy \u00b6 Description \u00b6 This resource configures the Teams Meeting Policies. More information: https://docs.microsoft.com/en-us/microsoftteams/meeting-policies-overview Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Meeting Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsMeetingPolicy 'ConfigureMeetingPolicy' { Identity = \"Demo Policy\" AllowAnonymousUsersToStartMeeting = $False AllowChannelMeetingScheduling = $True AllowCloudRecording = $True AllowExternalParticipantGiveRequestControl = $False AllowIPVideo = $True AllowMeetNow = $True AllowOutlookAddIn = $True AllowParticipantGiveRequestControl = $True AllowPowerPointSharing = $True AllowPrivateMeetingScheduling = $True AllowSharedNotes = $True AllowTranscription = $False AllowWhiteboard = $True AutoAdmittedUsers = \"Everyone\" Description = \"My Demo Meeting Policy\" MediaBitRateKb = 50000 ScreenSharingMode = \"EntireScreen\" Ensure = \"Present\" Credential = $credsglobaladmin } } }","title":"TeamsMeetingPolicy"},{"location":"resources/teams/TeamsMessagingPolicy/","text":"TeamsMessagingPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity for the teams messaging policy you're modifying. To modify the global policy, use this syntax: -Identity global. To modify a per-user policy, use syntax similar to this: -Identity TeamsMessagingPolicy. AllowGiphy Write Boolean Determines whether a user is allowed to access and post Giphys. Set this to TRUE to allow. Set this FALSE to prohibit. AllowMemes Write Boolean Determines whether a user is allowed to access and post memes. Set this to TRUE to allow. Set this FALSE to prohibit. AllowOwnerDeleteMessage Write Boolean Determines whether owners are allowed to delete all the messages in their team. Set this to TRUE to allow. Set this to FALSE to prohibit. AllowUserEditMessage Write Boolean Determines whether a user is allowed to edit their own messages. Set this to TRUE to allow. Set this to FALSE to prohibit. AllowStickers Write Boolean Determines whether a user is allowed to access and post stickers. Set this to TRUE to allow. Set this FALSE to prohibit. AllowUrlPreviews Write Boolean Use this setting to turn automatic URL previewing on or off in messages. Set this to TRUE to turn on. Set this to FALSE to turn off. AllowUserChat Write Boolean Determines whether a user is allowed to chat. Set this to TRUE to allow a user to chat across private chat, group chat and in meetings. Set this to FALSE to prohibit all chat. AllowUserDeleteMessage Write Boolean Determines whether a user is allowed to delete their own messages. Set this to TRUE to allow. Set this to FALSE to prohibit. AllowUserTranslation Write Boolean Determines whether a user is allowed to translate messages to their client languages. Set this to TRUE to allow. Set this to FALSE to prohibit. AllowImmersiveReader Write Boolean Determines whether a user is allowed to use Immersive Reader for reading conversation messages. Set this to TRUE to allow. Set this FALSE to prohibit. AllowRemoveUser Write Boolean Determines whether a user is allowed to remove a user from a conversation. Set this to TRUE to allow. Set this FALSE to prohibit. AllowPriorityMessages Write Boolean Determines whether a user is allowed to send priorities messages. Set this to TRUE to allow. Set this FALSE to prohibit. Description Write String Provide a description of your policy to identify purpose of creating it. GiphyRatingType Write String Determines the Giphy content restrictions applicable to a user. Set this to STRICT, MODERATE or NORESTRICTION. STRICT, MODERATE, NORESTRICTION ReadReceiptsEnabledType Write String Use this setting to specify whether read receipts are user controlled, enabled for everyone, or disabled. Set this to UserPreference, Everyone or None. UserPreference, Everyone, None ChannelsInChatListEnabledType Write String Possible values are: DisabledUserOverride,EnabledUserOverride. DisabledUserOverride, EnabledUserOverride AudioMessageEnabledType Write String Determines whether a user is allowed to send audio messages. Possible values are: ChatsAndChannels,ChatsOnly,Disabled. ChatsAndChannels, ChatsOnly, Disabled Tenant Write String Globally unique identifier (GUID) of the tenant account whose external user communication policy are being created. Ensure Write String Present ensures the Team Message Policy exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Teams Service Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsMessagingPolicy \u00b6 Description \u00b6 This resource is used to configure the Teams messaging policy. More information: https://docs.microsoft.com/en-us/microsoftteams/messaging-policies-in-teams Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Messaging Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsMessagingPolicy 'ConfigureMessagingPolicy' { Identity = \"TestPolicy\" Description = \"My sample policy\" ReadReceiptsEnabledType = \"UserPreference\" AllowImmersiveReader = $True AllowGiphy = $True AllowStickers = $True AllowUrlPreviews = $false AllowUserChat = $True AllowUserDeleteMessage = $false AllowUserEditMessage = $false AllowUserTranslation = $True AllowRemoveUser = $false AllowPriorityMessages = $True GiphyRatingType = \"MODERATE\" AllowMemes = $False AudioMessageEnabledType = \"ChatsOnly\" AllowOwnerDeleteMessage = $False Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"TeamsMessagingPolicy"},{"location":"resources/teams/TeamsOnlineVoiceUser/","text":"TeamsOnlineVoiceUser \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Specifies the identity of the target user. LocationID Write String Specifies the unique identifier of the emergency location to assign to the user. Location identities can be discovered by using the Get-CsOnlineLisLocation cmdlet. TelephoneNumber Write String Specifies the telephone number to be assigned to the user. The value must be in E.164 format: +14255043920. Setting the value to $Null clears the user's telephone number. Ensure Write String Present ensures the online voice user exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Global Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsOnlineVoiceUser \u00b6 Description \u00b6 This resource configures the Teams Online Voice User. Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Voice Route. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsCredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsOnlineVOiceUser 'AssignVoiceUser' { Identity = 'John.Smith@Contoso.com' TelephoneNumber = \"1800-555-1234\" LocationId = \"c7c5a17f-00d7-47c0-9ddb-3383229d606\" Ensure = \"Present\" Credential = $credsCredential } } }","title":"TeamsOnlineVoiceUser"},{"location":"resources/teams/TeamsOnlineVoicemailPolicy/","text":"TeamsOnlineVoicemailPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Online Voicemail Policy. EnableEditingCallAnswerRulesSetting Write Boolean Controls if editing call answer rule settings are enabled or disabled for a user. Possible values are $true or $false. EnableTranscription Write Boolean Allows you to disable or enable voicemail transcription. Possible values are $true or $false. EnableTranscriptionProfanityMasking Write Boolean Allows you to disable or enable profanity masking for the voicemail transcriptions. Possible values are $true or $false. EnableTranscriptionTranslation Write Boolean Allows you to disable or enable translation for the voicemail transcriptions. Possible values are $true or $false. MaximumRecordingLength Write String A duration of voicemail maximum recording length. The length should be between 30 seconds to 600 seconds. PrimarySystemPromptLanguage Write String The primary (or first) language that voicemail system prompts will be presented in. Must also set SecondarySystemPromptLanguage. When set, this overrides the user language choice. SecondarySystemPromptLanguage Write String The secondary language that voicemail system prompts will be presented in. Must also set PrimarySystemPromptLanguage and may not be the same value as PrimarySystemPromptanguage. When set, this overrides the user language choice. ShareData Write String Specifies whether voicemail and transcription data are shared with the service for training and improving accuracy. Possible values are Defer and Deny. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Global Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsOnlinceVoicemailPolicy \u00b6 Description \u00b6 This resource configures the Teams Online Voicemail Policies. More information: https://learn.microsoft.com/en-us/microsoftteams/manage-voicemail-policies Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Meeting Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsCredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsOnlineVoicemailPolicy 'NewOnlineVoicemailPolicy' { Credential = $credsCredential ; EnableEditingCallAnswerRulesSetting = $True ; EnableTranscription = $True ; EnableTranscriptionProfanityMasking = $False ; EnableTranscriptionTranslation = $True ; Ensure = \"Present\" ; Identity = \"MyPolicy\" ; MaximumRecordingLength = \"00:10:00\" ; ShareData = \"Defer\" ; } } }","title":"TeamsOnlineVoicemailPolicy"},{"location":"resources/teams/TeamsOnlineVoicemailUserSettings/","text":"TeamsOnlineVoicemailUserSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity parameter represents the ID of the specific user in your organization; this can be either a SIP URI or an Object ID. CallAnswerRule Write String The CallAnswerRule parameter represents the value of the call answer rule, which can be any of the following: DeclineCall, PromptOnly, PromptOnlyWithTransfer, RegularVoicemail, VoicemailWithTransferOption. DeclineCall, PromptOnly, PromptOnlyWithTransfer, RegularVoicemail, VoicemailWithTransferOption DefaultGreetingPromptOverwrite Write String The DefaultGreetingPromptOverwrite parameter represents the contents that overwrite the default normal greeting prompt. If the user's normal custom greeting is not set and DefaultGreetingPromptOverwrite is not empty, the voicemail service will play this overwrite greeting instead of the default normal greeting in the voicemail deposit scenario. DefaultOofGreetingPromptOverwrite Write String The DefaultOofGreetingPromptOverwrite parameter represents the contents that overwrite the default out-of-office greeting prompt. If the user's out-of-office custom greeting is not set and DefaultOofGreetingPromptOverwrite is not empty, the voicemail service will play this overwrite greeting instead of the default out-of-office greeting in the voicemail deposit scenario. OofGreetingEnabled Write Boolean The OofGreetingEnabled parameter represents whether to play out-of-office greeting in voicemail deposit scenario. OofGreetingFollowAutomaticRepliesEnabled Write Boolean The OofGreetingFollowAutomaticRepliesEnabled parameter represents whether to play out-of-office greeting in voicemail deposit scenario when user set automatic replies in Outlook. OofGreetingFollowCalendarEnabled Write Boolean The OofGreetingFollowCalendarEnabled parameter represents whether to play out-of-office greeting in voicemail deposit scenario when user set out-of-office in calendar. PromptLanguage Write String The PromptLanguage parameter represents the language that is used to play voicemail prompts. ShareData Write Boolean Specifies whether voicemail and transcription data is shared with the service for training and improving accuracy. TransferTarget Write String The TransferTarget parameter represents the target to transfer the call when call answer rule set to PromptOnlyWithTransfer or VoicemailWithTransferOption. Value of this parameter should be a SIP URI of another user in your organization. For user with Enterprise Voice enabled, a valid telephone number could also be accepted as TransferTarget. VoicemailEnabled Write Boolean The VoicemailEnabled parameter represents whether to enable voicemail service. If set to $false, the user has no voicemail service. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Global Admin. ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsOnlineVoicemailUserSettings \u00b6 Description \u00b6 This resource configures a Teams User's Online Voicemail Settings. Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Channels Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsCredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsOnlineVoicemailUserSettings 'AssignOnlineVoicemailUserSettings' { CallAnswerRule = \"RegularVoicemail\" ; Credential = $credsCredential ; DefaultGreetingPromptOverwrite = \"Hellow World!\" ; Ensure = \"Present\" ; Identity = \"John.Smith@contoso.com\" ; OofGreetingEnabled = $False ; OofGreetingFollowAutomaticRepliesEnabled = $False ; OofGreetingFollowCalendarEnabled = $False ; PromptLanguage = \"en-US\" ; ShareData = $False ; VoicemailEnabled = $True ; } } }","title":"TeamsOnlineVoicemailUserSettings"},{"location":"resources/teams/TeamsPstnUsage/","text":"TeamsPstnUsage \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Usage Key String An online PSTN usage (such as Local or Long Distance) that can be used in conjunction with voice routes and voice routing policies. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsPstnUsage \u00b6 Description \u00b6 This resource configures a Teams PSTN Usage. More information: https://docs.microsoft.com/en-us/microsoftteams/direct-routing-voice-routing Examples \u00b6 Example 1 \u00b6 This example adds a new Teams PSTN Usage. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsPstnUsage 'ConfigurePstnUsage' { Usage = 'Long Distance' Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"TeamsPstnUsage"},{"location":"resources/teams/TeamsTeam/","text":"TeamsTeam \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values DisplayName Key String Display Name of the Team Description Write String Description of Team. GroupID Write String Team group ID, only used to target a Team when duplicated display names occurs. MailNickName Write String MailNickName of O365 Group associated with Team Owner Write StringArray[] Owners of the Team Visibility Write String Visibility of the Team Public, Private, HiddenMembership AllowAddRemoveApps Write Boolean Allow add or remove apps from the Team. AllowGiphy Write Boolean Allow giphy in Team. GiphyContentRating Write String Giphy content rating of the Team. Strict, Moderate AllowStickersAndMemes Write Boolean Allow stickers and mimes in the Team. AllowCustomMemes Write Boolean Allow custom memes in Team. AllowUserEditMessages Write Boolean Allow members to edit messages within Team. AllowUserDeleteMessages Write Boolean Allow members to delete messages within Team. AllowOwnerDeleteMessages Write Boolean Allow owners to delete messages within Team. AllowDeleteChannels Write Boolean Allow members to delete channels within Team. AllowCreateUpdateRemoveConnectors Write Boolean Allow members to manage connectors within Team. AllowCreateUpdateRemoveTabs Write Boolean Allow members to manage tabs within Team. AllowTeamMentions Write Boolean Allow mentions in Team. AllowChannelMentions Write Boolean Allow channel mention in Team. AllowGuestCreateUpdateChannels Write Boolean Allow guests to create and update channels in Team. AllowGuestDeleteChannels Write Boolean Allow guests to delete channel in Team. AllowCreateUpdateChannels Write Boolean Allow members to create and update channels within Team. ShowInTeamsSearchAndSuggestions Write Boolean determines whether or not private teams should be searchable from Teams clients for users who do not belong to that team. Set to $false to make those teams not discoverable from Teams clients. Ensure Write String Present ensures the Team exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsTeam \u00b6 Description \u00b6 This resource configures or creates a new Team. Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsTeam 'ConfigureTeam' { DisplayName = \"Sample3\" Description = \"Sample\" Visibility = \"Private\" MailNickName = \"DSCTeam2\" AllowUserEditMessages = $false AllowUserDeleteMessages = $false AllowOwnerDeleteMessages = $false AllowTeamMentions = $false AllowChannelMentions = $false allowCreateUpdateChannels = $false AllowDeleteChannels = $false AllowAddRemoveApps = $false AllowCreateUpdateRemoveTabs = $false AllowCreateUpdateRemoveConnectors = $false AllowGiphy = $True GiphyContentRating = \"strict\" AllowStickersAndMemes = $True AllowCustomMemes = $True AllowGuestCreateUpdateChannels = $true AllowGuestDeleteChannels = $true Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"TeamsTeam"},{"location":"resources/teams/TeamsTenantDialPlan/","text":"TeamsTenantDialPlan \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Write String A unique identifier for the rule. The Identity specified must include the scope followed by a slash and then the name; for example: site:Redmond/Rule1, where site:Redmond is the scope and Rule1 is the name. The name portion will automatically be stored in the Name property. You cannot specify values for Identity and Name in the same command. Priority Write UInt32 The order in which rules are applied. A phone number might match more than one rule. This parameter sets the order in which the rules are tested against the number. Description Write String A friendly description of the normalization rule. Pattern Write String A regular expression that the dialed number must match in order for this rule to be applied. Translation Write String The regular expression pattern that will be applied to the number to convert it to E.164 format. IsInternalExtension Write Boolean If True, the result of applying this rule will be a number internal to the organization. If False, applying the rule results in an external number. This value is ignored if the value of the OptimizeDeviceDialing property of the associated dial plan is set to False. Identity Key String The Identity parameter is a unique identifier that designates the name of the tenant dial plan. Identity is an alphanumeric string that cannot exceed 49 characters. Valid characters are alphabetic or numeric characters, hyphen (-) and dot (.). The value should not begin with a (.). Description Write String The Description parameter describes the tenant dial plan - what it's for, what type of user it applies to and any other information that helps to identify the purpose of the tenant dial plan. Maximum characters: 512. NormalizationRules Write InstanceArray[] List of normalization rules that are applied to this dial plan. ExternalAccessPrefix Write String The ExternalAccessPrefix parameter is a number (or set of numbers) that designates the call as external to the organization. (For example, to tenant-dial an outside line, first press 9.) This prefix is ignored by the normalization rules, although these rules are applied to the remainder of the number. The OptimizeDeviceDialing parameter must be set to True for this value to take effect. This parameter must match the regular expression [0-9]{1,4}: that is, it must be a value 0 through 9 and one to four digits in length. The default value is 9. OptimizeDeviceDialing Write Boolean Specifies if the dial plan should optimize device dialing or not. SimpleName Write String The SimpleName parameter is a display name for the tenant dial plan. This name must be unique among all tenant dial plans within the Skype for Business Server deployment.This string can be up to 49 characters long. Valid characters are alphabetic or numeric characters, hyphen (-), dot (.) and parentheses (()). Ensure Write String Specify if this dial plan should exist or not. Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsTenantDialPlan \u00b6 Description \u00b6 This resource is used to configure the tenant-wide dial plans for Microsoft Teams. More information: https://docs.microsoft.com/en-us/microsoftteams/create-and-manage-dial-plans Examples \u00b6 Example 1 \u00b6 This example configures the Teams Guest Calling Configuration. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsTenantDialPlan 'ConfigureTenantDialPlan' { Identity = \"DemoPlan\" Description = 'This is a demo dial plan' NormalizationRules = MSFT_TeamsVoiceNormalizationRule { Pattern = '^00(\\d+)$' Description = 'LB International Dialing Rule' Identity = 'LB Intl Dialing' Translation = '+$1' Priority = 0 IsInternalExtension = $False } OptimizeDeviceDialing = $true SimpleName = \"DemoPlan\" Ensure = \"Present\" Credential = $Credsglobaladmin } } }","title":"TeamsTenantDialPlan"},{"location":"resources/teams/TeamsUpdateManagementPolicy/","text":"TeamsUpdateManagementPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Update Management Policy. Description Write String The description of the Teams Update Management Policy. AllowManagedUpdates Write Boolean Determines if managed updates should be allowed or not. AllowPreview Write Boolean Determines if preview builds should be allowed or not. AllowPublicPreview Write String Determines the ring of public previews to subscribes to. Disabled, Enabled, FollowOfficePreview UpdateDayOfWeek Write UInt32 Determines the day of week to perform the updates. Value shoud be between 0 and 6. UpdateTime Write String Determines the time of day to perform the updates. Must be a valid HH:MM format string with leading 0. For instance 08:30. UpdateTimeOfDay Write String Determines the time of day to perform the updates. Accepts a DateTime as string. Only the time will be considered. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsUpdateManagementPolicy \u00b6 Description \u00b6 This resource configures the Teams Update policies. For additional information, please refer to https://docs.microsoft.com/en-us/MicrosoftTeams/public-preview-doc-updates#set-the-update-policy Examples \u00b6 Example 1 \u00b6 This example demonstrates how to assign users to a Teams Upgrade Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $Credscredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsUpdateManagementPolicy TestPolicy { AllowManagedUpdates = $False ; AllowPreview = $False ; AllowPublicPreview = \"Enabled\" ; Credential = $Credscredential ; Description = \"Test\" ; Ensure = \"Present\" ; Identity = \"MyTestPolicy\" ; UpdateDayOfWeek = 1 ; UpdateTime = \"18:00\" ; UpdateTimeOfDay = \"2022-05-06T18:00:00\" ; } } }","title":"TeamsUpdateManagementPolicy"},{"location":"resources/teams/TeamsUpgradeConfiguration/","text":"TeamsUpgradeConfiguration \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values IsSingleInstance Key String Specifies the resource is a single instance, the value must be 'Yes' Yes DownloadTeams Write Boolean The DownloadTeams property allows admins to control whether the Skype for Business client should automatically download Teams in the background. This Boolean setting is only honored on Windows clients, and only for certain values of the user's TeamsUpgradePolicy. If NotifySfbUser=true or if Mode=TeamsOnly in TeamsUpgradePolicy, this setting is honored. Otherwise it is ignored. SfBMeetingJoinUx Write String The SfBMeetingJoinUx property allows admins to specify which app is used to join Skype for Business meetings, even after the user has been upgraded to Teams. Allowed values are: 'SkypeMeetingsApp' and 'NativeLimitedClient'. 'NativeLimitedClient' means the existing Skype for Business rich client will be used, but since the user is upgraded, only meeting functionality is available. Calling and Messaging are done via Teams. 'SkypeMeetingsApp' means use the web-downloadable app. This setting can be useful for organizations that have upgraded to Teams and no longer want to install Skype for Business on their users' computers. SkypeMeetingsApp, NativeLimitedClient Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsUpgradeConfiguration \u00b6 Description \u00b6 This resource configures the Teams Upgrade settings. More information: https://docs.microsoft.com/en-us/MicrosoftTeams/migration-interop-guidance-for-teams-with-skype Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsUpgradeConfiguration 'ConfigureUpgradeConfig' { IsSingleInstance = \"Yes\" DownloadTeams = $True SfBMeetingJoinUx = \"NativeLimitedClient\" Credential = $credsGlobalAdmin } } }","title":"TeamsUpgradeConfiguration"},{"location":"resources/teams/TeamsUpgradePolicy/","text":"TeamsUpgradePolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Upgrade Policy. Users Write StringArray[] List of users that will be granted the Upgrade Policy to. MigrateMeetingsToTeams Write Boolean Specifies whether to move existing Skype for Business meetings organized by the user to Teams. This parameter can only be true if the mode of the specified policy instance is either TeamsOnly or SfBWithTeamsCollabAndMeetings, and if the policy instance is being granted to a specific user. It not possible to trigger meeting migration when granting TeamsUpgradePolicy to the entire tenant. Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsUpgradePolicy \u00b6 Description \u00b6 This resource configures the Teams Upgrade policies. More information: https://docs.microsoft.com/en-us/microsoftteams/meetings-first#prepare-for-teams-meetings-in-meetings-first Examples \u00b6 Example 1 \u00b6 This example demonstrates how to assign users to a Teams Upgrade Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsUpgradePolicy 'ConfigureIslandsPolicy' { Identity = 'Islands' Users = @( \"John.Smith@contoso.com\" , \"Nik.Charlebois@contoso.com\" ) MigrateMeetingsToTeams = $true Credential = $credsGlobalAdmin } } }","title":"TeamsUpgradePolicy"},{"location":"resources/teams/TeamsUser/","text":"TeamsUser \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values TeamName Key String Team NAme User Key String UPN of user to add to Team Role Write String User role in Team Guest, Member, Owner Ensure Write String Present ensures the Team user exists, absent ensures it is removed Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Id of the Azure Active Directory tenant used for authentication. CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsUser \u00b6 Description \u00b6 This resource is used to add new users to a team Examples \u00b6 Example 1 \u00b6 This example is used to test new resources and showcase the usage of new resources being worked on. It is not meant to use as a production baseline. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsUser 'ConfigureTeamsUser' { TeamName = \"SuperSecretTeam\" User = \"jdoe@contoso.com\" Role = \"Member\" Ensure = \"Present\" Credential = $credsGlobalAdmin } } }","title":"TeamsUser"},{"location":"resources/teams/TeamsUserCallingSettings/","text":"TeamsUserCallingSettings \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String The Identity of the user to set call forwarding, simultaneous ringing and call group settings for. Can be specified using the ObjectId or the SIP address. GroupNotificationOverride Write String The group notification override that will be set on the specified user. The supported values are Ring, Mute and Banner. Ring, Mute, Banner CallGroupOrder Write String The order in which to call members of the Call Group. The supported values are Simultaneous and InOrder. CallGroupTargets Write StringArray[] The members of the Call Group. You need to always specify the full set of members as the parameter value. What you set here will overwrite the current call group membership. IsUnansweredEnabled Write Boolean This parameter controls whether forwarding for unasnwered calls is enabled or not. UnansweredDelay Write String The time the call will ring the user before it is forwarded to the unanswered target. The supported format is hh:mm:ss and the delay range needs to be between 10 and 60 seconds in 10 seconds increments, i.e. 00:00:10, 00:00:20, 00:00:30, 00:00:40, 00:00:50 and 00:01:00. The default value is 20 seconds. UnansweredTarget Write String The unanswered target. Supported type of values are ObjectId, SIP address and phone number. For phone numbers we support the following types of formats: E.164 (+12065551234 or +1206555000;ext=1234) or non-E.164 like 1234. UnansweredTargetType Write String The unanswered target type. Supported values are Voicemail, SingleTarget, MyDelegates and Group. Group, MyDelegates, SingleTarget, Voicemail IsForwardingEnabled Write Boolean This parameter controls whether forwarding is enabled or not. ForwardingType Write String The type of forwarding to set. Supported values are Immediate and Simultaneous Immediate, Simultaneous ForwardingTargetType Write String The forwarding target type. Supported values are Voicemail, SingleTarget, MyDelegates and Group. Voicemail is only supported for Immediate forwarding. Group, MyDelegates, SingleTarget, Voicemail ForwardingTarget Write String The forwarding target. Supported types of values are ObjectId's, SIP addresses and phone numbers. For phone numbers we support the following types of formats: E.164 (+12065551234 or +1206555000;ext=1234) or non-E.164 like 1234. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Required PSCredential Credentials of the Teams Global Admin. TeamsUserCallingSettings \u00b6 Description \u00b6 This resource configures a Teams User's Calling Settings. More information: https://learn.microsoft.com/en-us/microsoftteams/user-call-settings Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Channels Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsCredential ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsUserCallingSettings 'AssignCallingSettings' { CallGroupOrder = \"Simultaneous\" ; Credential = $credsCredential ; Ensure = \"Present\" ; Identity = \"John.Smith@contoso.com\" ; UnansweredDelay = \"00:00:20\" ; } } }","title":"TeamsUserCallingSettings"},{"location":"resources/teams/TeamsVoiceRoute/","text":"TeamsVoiceRoute \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Voice Route. Description Write String A description of what this online voice route is for. NumberPattern Write String A regular expression that specifies the phone numbers to which this route applies. Numbers matching this pattern will be routed according to the rest of the routing settings. OnlinePstnGatewayList Write StringArray[] This parameter contains a list of online gateways associated with this online voice route. Each member of this list must be the service Identity of the online PSTN gateway. OnlinePstnUsages Write StringArray[] A list of online PSTN usages (such as Local, Long Distance, etc.) that can be applied to this online voice route. The PSTN usage must be an existing usage (PSTN usages can be retrieved by calling the Get-CsOnlinePstnUsage cmdlet). Priority Write UInt32 A number could resolve to multiple online voice routes. The priority determines the order in which the routes will be applied if more than one route is possible. Ensure Write String Present ensures the route exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsVoiceRoute \u00b6 Description \u00b6 This resource configures a Teams Voice Route. More information: https://docs.microsoft.com/en-us/microsoftteams/direct-routing-voice-routing Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Voice Route. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsVoiceRoute 'ConfigureVoiceRoute' { Identity = 'NewVoiceRoute' Description = 'This is a sample Voice Route' NumberPattern = '^\\+1(425|206)(\\d{7})' OnlinePstnGatewayList = @( 'sbc1.litwareinc.com' , 'sbc2.litwareinc.com' ) OnlinePstnUsages = @( 'Long Distance' , 'Local' , 'Internal' ) Priority = 10 Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"TeamsVoiceRoute"},{"location":"resources/teams/TeamsVoiceRoutingPolicy/","text":"TeamsVoiceRoutingPolicy \u00b6 Parameters \u00b6 Parameter Attribute DataType Description Allowed Values Identity Key String Identity of the Teams Voice Routing Policy. OnlinePstnUsages Write StringArray[] A list of online PSTN usages (such as Local or Long Distance) that can be applied to this online voice routing policy. The online PSTN usage must be an existing usage (PSTN usages can be retrieved by calling the Get-CsOnlinePstnUsage cmdlet). Description Write String Enables administrators to provide explanatory text to accompany an online voice routing policy. For example, the Description might include information about the users the policy should be assigned to. Ensure Write String Present ensures the policy exists, absent ensures it is removed. Present, Absent Credential Write PSCredential Credentials of the Teams Admin ApplicationId Write String Id of the Azure Active Directory application to authenticate with. TenantId Write String Name of the Azure Active Directory tenant used for authentication. Format contoso.onmicrosoft.com CertificateThumbprint Write String Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication. TeamsVoiceRoutingPolicy \u00b6 Description \u00b6 This resource configures a Teams Voice Routing Policy. More information: https://docs.microsoft.com/en-us/microsoftteams/manage-voice-routing-policies Examples \u00b6 Example 1 \u00b6 This example adds a new Teams Voice Routing Policy. Configuration Example { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { TeamsVoiceRoutingPolicy 'ConfigureVoiceRoutingPolicy' { Identity = 'NewVoiceRoutingPolicy' OnlinePstnUsages = @( 'Long Distance' , 'Local' , 'Internal' ) Description = 'This is a sample Voice Routing Policy' Ensure = 'Present' Credential = $credsGlobalAdmin } } }","title":"TeamsVoiceRoutingPolicy"},{"location":"user-guide/advanced/create-blueprint/","text":"A Microsoft365DSC Blueprint is a configuration file that has been reviewed and approved by an organization and which has the .M365 extension instead of a .ps1 one. It can be hosted locally or on the web and is used to assess the current configuration of any Microsoft 365 tenant against it to generate a discrepancy report. Other than having a different file extension than a normal DSC configuration, a Microsoft365DSC Blueprint can also include metadata that will be included as contextual information within the discrepancy report for configuration settings that have been identified as being different on a given tenant. The following is an example of a blueprint snippet which contains metadata: TeamsCallingPolicy M365DSCPolicy { AllowCallForwardingToPhone = $True ; ### L2|We <strong>recommend</strong> allowing call forwarding to phone lines because... AllowCallForwardingToUser = $True ; ### L3|Information about <a href=\"https://docs.microsoft.com/en-us/MicrosoftTeams/teams-calling-policy\">call forwarding</a> AllowPrivateCalling = $false ; ### L1|<img src='warning.png' />We don't recommend allowing people to allow private calls due to.... AllowVoicemail = \"UserOverride\" ; BusyOnBusyEnabledType = \"Disabled\" ; Identity = \"Microsoft365DSC Policy\" ; PreventTollBypass = $True ; Ensure = \"Present\" ; Credential = $Credential } Creating A Blueprint \u00b6 As you can see from the example above, the format for a metadata entry is the following: < Property Name > = < Property Value >; ### <Severity Level>|<Contextual Information> Please note that, as the example above shows, you can use rich HTML in the Contextual Information to add visual elements to your reports. Metadata in the blueprint needs to be included after the end of a line, following the configuration setting it related to. It is represented by the ### syntax. What follows the 3 pounds sign is an indicator of the level of severity related to the configuration setting assuming a drift was detected for it. The engine currently offers 3 levels of severity: L1 - Critical, will appear in red in the discrepancy report. This indicates that this drift needs to be addressed as soon as possible. L2 - Warning, will appear in yellow in the discrepancy report. This indicates that a drift was detected for the given property and that we strongly recommend addressing it. L3 - Information, will appear in white in the discrepancy report. This indicates that a drift was detected and that it is up to the organization to decide if they want to address it or not. It is important to understand that if a drifted property doesn't have associated metadata in the blueprint, it will still appear in the discrepancy report. It simply won't have any contextual information associated with it. Assessing A Blueprint \u00b6 In order to assess an existing tenant against a given Microsoft365DSC Blueprint, you will need to use the following cmdlet: Assert-M365DSCBlueprint -BluePrintUrl [Url or local path to the .m365] -OutputReportPath [Full path to where to save the HTML report] -Credentials [Optional credentials for the tenant to assess]","title":"Blueprints"},{"location":"user-guide/advanced/dynamic-resource-generator/","text":"The Microsoft365DSC Dynamic Resource Generator (DRG) is a set of PowerShell Modules and templates that enables the automatic generation of Microsoft365DSC resources, examples and unit tests based on OpenAPI definitions. Currently it only supports generating resources from Microsoft Graph endpoints, but the team is investigating expanding its scope to also include other dependencies that are not yet on Microsoft Graph (e.g., Exchange Online, Teams, etc.). The DRG is included as part of the main Microsoft365DSC codebase and is currently in public preview , which means it is likely to change before becoming Generally Available (GA). Why the DRG? \u00b6 Microsoft 365 is evolving at a rapid pace, with new features being released on a regular basis and other legacy configuration items being deprecated. To this point, the Microsoft365DSC team has been manually creating the DSC resources that make up the solution based which has been very time consuming and requires constant updating as these resources change and evolve. The Dynamic Resource Generator will allow the team to \"stop chasing their own tail\" and open the flood gates, releasing dozens of DSC resources with minimal effort and ensuring they are always in-sync with their underlying workload dependencies (e.g., Microsoft Graph, Exchange Online Management Shell, etc.). The team is commited in investing time in building and improving the DRG in order to order to ensure the sustainability of the Microsoft project in the long run. Getting Started \u00b6 The DRG files are located at the root of the project under the /ResourceGenerator folder. It contains a single PowerShell module (M365DSCResourceGenerator.psm1) and several template files that define the structure of the various files to generate. The main function for the module is the New-M365DSCResource cmdlet which will initiate the creation of a new DSC resource alongside its associated schema, readme file, example and unit tests. The cmdlet accepts the following parameters: Parameter Name Required Accepted Values Description ResourceName True String The name of the resource to be generated. E.g., AADDomain, IntuneResourcex, etc. Workload True String. Any of: \"ExchangeOnline\", \"Intune\", \"MicrosoftGraph\", \"MicrosoftTeams\", \"PnP\", \"PowerPlatforms\", \"SecurityComplianceCenter\" The name of the Microsoft 365 workload associated with the resource to be generated GraphModuleCmdLetNoun False String The noun part of the cmdlet associated with the resource. E.g., for the AADDomain resource, the associated cmdlets is Get-MgDomain. Therefore the value for this property is 'MgDomain'. Path False String Local path to the root DSCResources folder where all the DSC Resources are being stored (e.g., C:\\Github\\Microsoft365DSC\\Modules\\Microsoft365DSC\\DSCResources) UnitTestPath False String Local path to the root of the unit test folder (e.g., C:\\GitHub\\Microsoft365DSC\\Tests\\Unit\\Microsoft365DSC) ExampleFilePath False String Local path to the root of the examples Ressources' folder (e.g. C:\\GitHub\\Microsoft365DSC\\Modules\\Microsoft365DSC\\Examples\\Resources) APIVersion False String. Any of: \"v1.0\", \"beta\" Represents what version of the Microsoft Graph APIs to use. Should use 'v1.0' whenever possible. Credential False PSCredential Credentials of a Microsoft 365 account that will be used to take a snapshot of the resource to be generated from a given tenant. This is used to generate the examples. Use a test tenant . As an example, to generate the AADDomain resource for the Azure Active Directory workload, we've run the following command. NOTE: The paths specified represent the local path on the machine we've used. Make sure to update this to point to the location of your local branch on your machine. cd C:\\Github\\Microsoft365DSC\\ResourceGenerator Import-Module .\\M365DSCResourceGenerator.psm1 $ResourcePath = \"C:\\GitHub\\Microsoft365DSC\\Modules\\Microsoft365DSC\\DSCResources\" $UnitTestPath = \"C:\\GitHub\\Microsoft365DSC\\Tests\\Unit\\Microsoft365DSC\" $ExamplePath = \"C:\\GitHub\\Microsoft365DSC\\Modules\\Microsoft365DSC\\Examples\\Resources\" $creds = Get-Credential New-M365DSCResource -ResourceName AADDomain -Workload MicrosoftGraph -GraphModuleCmdletNoun 'MgDomain' -Path $ResourcePath -UnitTestPath $UnitTestPath -ExampleFilePath $ExamplePath -Credential $creds We are currently looking for users to help us test and improve the DRG. If you are interested in helping out, please try it out with the instructions above and report any issues or questions in the Issues section of the GitHub repository (https://GitHub.com/Microsoft/Microsoft365DSC) mentioning that the item is related to the DRG testing.","title":"Dynamic Resource Generator (DRG)"},{"location":"user-guide/cmdlets/Assert-M365DSCBlueprint/","text":"Assert-M365DSCBlueprint \u00b6 Description \u00b6 This function compares a created export with the specified M365DSC Blueprint Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description BluePrintUrl True String Specifies the url to the blueprint to which the tenant should be compared. OutputReportPath True String Specifies the path of the report that will be created. Credentials True PSCredential Specifies the credentials that will be used for authentication. HeaderFilePath False String Specifies that file that contains a custom header for the report. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Assert-M365DSCBlueprint -BluePrintUrl 'C:\\DS\\blueprint.m365' -OutputReportPath 'C:\\DSC\\BlueprintReport.html' -------------------------- EXAMPLE 2 -------------------------- Assert-M365DSCBlueprint -BluePrintUrl 'C:\\DS\\blueprint.m365' -OutputReportPath 'C:\\DSC\\BlueprintReport.html' -Credentials $credentials -HeaderFilePath 'C:\\DSC\\ReportCustomHeader.html'","title":"Assert-M365DSCBlueprint"},{"location":"user-guide/cmdlets/Compare-M365DSCConfigurations/","text":"Compare-M365DSCConfigurations \u00b6 Description \u00b6 This function compares two provided DSC configuration to determine the delta. Output \u00b6 This function outputs information as the following type: System.Array Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description Source False String Local path of the source configuration. Destination False String Local path of the destination configuraton. CaptureTelemetry False Boolean SourceObject False Array Array that contains the list of configuration components for the source. DestinationObject False Array Array that contains the list of configuration components for the destination. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Compare-M365DSCConfigurations -Source 'C:\\DSC\\source.ps1' -Destination 'C:\\DSC\\destination.ps1'","title":"Compare-M365DSCConfigurations"},{"location":"user-guide/cmdlets/Export-M365DSCConfiguration/","text":"Export-M365DSCConfiguration \u00b6 Description \u00b6 This is the main Microsoft365DSC.Reverse function that extracts the DSC configuration from an existing Microsoft 365 Tenant. Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description LaunchWebUI False SwitchParameter Adding this parameter will open the WebUI in a browser. Path False String Specifies the path in which the exported DSC configuration should be stored. FileName False String Specifies the name of the file in which the exported DSC configuration should be stored. ConfigurationName False String Specifies the name of the configuration that will be generated. Components False String[] Specifies the components for which an export should be created. Workloads False String[] AAD, SPO, EXO, INTUNE, SC, OD, O365, PLANNER, PP, TEAMS Specifies the workload for which an export should be created for all resources. Mode False String Default Lite, Default, Full Specifies the mode of the export: Lite, Default or Full. MaxProcesses False Object Specifies the maximum number of processes that should run simultanious. GenerateInfo False Boolean Specifies if each exported resource should get a link to the Wiki article of the resource. Filters False Hashtable Specifies resource level filters to apply in order to reduce the number of instances exported. ApplicationId False String Specifies the application id to be used for authentication. TenantId False String Specifies the id of the tenant. ApplicationSecret False String Specifies the application secret of the application to be used for authentication. CertificateThumbprint False String Specifies the thumbprint to be used for authentication. Credential False PSCredential Specifies the credentials to be used for authentication. CertificatePassword False PSCredential Specifies the password of the PFX file which is used for authentication. CertificatePath False String Specifies the path of the PFX file which is used for authentication. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Export-M365DSCConfiguration -Components @(\"AADApplication\", \"AADConditionalAccessPolicy\", \"AADGroupsSettings\") -Credential $Credential -------------------------- EXAMPLE 2 -------------------------- Export-M365DSCConfiguration -Mode 'Default' -ApplicationId '2560bb7c-bc85-415f-a799-841e10ec4f9a' -TenantId 'contoso.sharepoint.com' -ApplicationSecret 'abcdefghijkl' -------------------------- EXAMPLE 3 -------------------------- Export-M365DSCConfiguration -Components @(\"AADApplication\", \"AADConditionalAccessPolicy\", \"AADGroupsSettings\") -Credential $Credential -Path 'C:\\DSC\\Config.ps1' -------------------------- EXAMPLE 4 -------------------------- Export-M365DSCConfiguration -Credential $Credential -Filters @{AADApplication = \"DisplayName eq 'MyApp'\"}","title":"Export-M365DSCConfiguration"},{"location":"user-guide/cmdlets/Export-M365DSCDiagnosticData/","text":"Export-M365DSCDiagnosticData \u00b6 Description \u00b6 This function creates a ZIP package with a collection of troubleshooting information, like Verbose logs, M365DSC event log, PowerShell version, OS versions and LCM config. It is also able to anonymize this information (as much as possible), so important information isn't shared. Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description ExportFilePath True String The file path to the ZIP file that should be created. NumberOfDays False UInt32 7 The number of days of logs that should be exported. Anonymize False SwitchParameter Specify if the results should be anonymized. Server True String (Anonymize=True) The server name that should be renamed. Domain True String (Anonymize=True) The domain that should be renamed. Url True String (Anonymize=True) The url that should be renamed. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Export-M365DSCDiagnosticData -ExportFilePath C:\\Temp\\DSCLogsExport.zip -NumberOfDays 3 -------------------------- EXAMPLE 2 -------------------------- Export-M365DSCDiagnosticData -ExportFilePath C:\\Temp\\DSCLogsExport.zip -Anonymize -Server spfe -Domain contoso.com -Url sharepoint.contoso.com","title":"Export-M365DSCDiagnosticData"},{"location":"user-guide/cmdlets/Get-M365DSCAllResources/","text":"Get-M365DSCAllResources \u00b6 Description \u00b6 This function gets all available M365DSC resources in the module Output \u00b6 This function outputs information as the following type: System.String[] Parameters \u00b6 This function does not have any input parameters. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Get-M365DSCAllResources","title":"Get-M365DSCAllResources"},{"location":"user-guide/cmdlets/Get-M365DSCCompiledPermissionList/","text":"Get-M365DSCCompiledPermissionList \u00b6 Description \u00b6 This function lists all Graph or Exchange permissions required for the specified resources, both for reading and updating. With the parameters, you can specify which permissions you are interested in. Output \u00b6 This function outputs information as the following type: System.Collections.Hashtable Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description ResourceNameList True String[] An array of resource names for which the permissions should be determined. PermissionsType False String Delegated Delegated, Application Specifies what type of Graph permissions need to get returned. Source False String Graph Exchange, Graph, SharePoint Specifies the workload of the permissions that need to get returned. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Get-M365DSCCompiledPermissionList -ResourceNameList @('AADUser', 'AADApplication') -Source 'Graph' -PermissionsType 'Delegated' -------------------------- EXAMPLE 2 -------------------------- Get-M365DSCCompiledPermissionList -ResourceNameList @('AADUser', 'AADApplication') -Source 'Graph' -PermissionsType 'Application' -------------------------- EXAMPLE 3 -------------------------- Get-M365DSCCompiledPermissionList -ResourceNameList @('EXOAcceptedDomain') -Source 'Exchange'","title":"Get-M365DSCCompiledPermissionList"},{"location":"user-guide/cmdlets/Get-M365DSCNotificationEndpointRegistration/","text":"Get-M365DSCNotificationEndPointRegistration \u00b6 Description \u00b6 This function returns and instance of or all notification endpoints in registry. Output \u00b6 Array of notification endpoints. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description Url False String Represents the Url of the endpoint to be contacted when events are detected. EventType False String Drift, Error, Warning Represents the type of events that need to be reported to the endpoint. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Get-M365DSCNotificationEndPointRegistration -Url https://contoso.com/api/ -EventType Drift -------------------------- EXAMPLE 2 -------------------------- `Get-M365DSCNotificationEndPointRegistration -Url https://contoso.com/api/ -------------------------- EXAMPLE 3 -------------------------- Get-M365DSCNotificationEndPointRegistration -EventType Drift -------------------------- EXAMPLE 4 -------------------------- `Get-M365DSCNotificationEndPointRegistration","title":"Get-M365DSCNotificationEndPointRegistration"},{"location":"user-guide/cmdlets/Get-M365DSCTelemetryOption/","text":"Get-M365DSCTelemetryOption \u00b6 Description \u00b6 This function gets the configuration for the M365DSC telemetry feature Output \u00b6 This function does not generate any output. Parameters \u00b6 This function does not have any input parameters. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Get-M365DSCTelemetryOption","title":"Get-M365DSCTelemetryOption"},{"location":"user-guide/cmdlets/Get-M365DSCWorkloadsListFromResourceNames/","text":"Get-M365DSCWorkloadsListFromResourceNames \u00b6 Description \u00b6 This function returns the used workloads for the specified DSC resources Output \u00b6 This function outputs information as the following type: System.Boolean Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description ResourceNames True String[] Specifies the resources for which the workloads should be determined. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Get-M365DSCWorkloadsListFromResourceNames -ResourceNames AADUser","title":"Get-M365DSCWorkloadsListFromResourceNames"},{"location":"user-guide/cmdlets/Import-M365DSCDependencies/","text":"Import-M365DSCDependencies \u00b6 Description \u00b6 This function re-imports all M365DSC dependencies, if not properly done before Output \u00b6 This function does not generate any output. Parameters \u00b6 This function does not have any input parameters. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Import-M365DSCDependencies","title":"Import-M365DSCDependencies"},{"location":"user-guide/cmdlets/Install-M365DSCDevBranch/","text":"Install-M365DSCDevBranch \u00b6 Description \u00b6 This function downloads and installs the Dev branch of Microsoft365DSC on the local machine Output \u00b6 This function does not generate any output. Parameters \u00b6 This function does not have any input parameters. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Install-M365DSCDevBranch","title":"Install-M365DSCDevBranch"},{"location":"user-guide/cmdlets/New-M365DSCDeltaReport/","text":"New-M365DSCDeltaReport \u00b6 Description \u00b6 This function creates a delta HTML report between two provided exported DSC configurations Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description Source True String The source DSC configuration to compare from. Destination True String The destination DSC configuration to compare with. OutputPath False String The output path of the delta report. DriftOnly False Boolean Specifies that only difference should be in the report. IsBlueprintAssessment False Boolean Specifies that the report is a comparison with a Blueprint. HeaderFilePath False String Specifies that file that contains a custom header for the report. Delta False Array An array with difference, already compiled from another source. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- New-M365DSCDeltaReport -Source 'C:\\DSC\\Source.ps1' -Destination 'C:\\DSC\\Destination.ps1' -OutputPath 'C:\\Dsc\\DeltaReport.html' -------------------------- EXAMPLE 2 -------------------------- New-M365DSCDeltaReport -Source 'C:\\DSC\\Source.ps1' -Destination 'C:\\DSC\\Destination.ps1' -OutputPath 'C:\\Dsc\\DeltaReport.html' -DriftOnly $true","title":"New-M365DSCDeltaReport"},{"location":"user-guide/cmdlets/New-M365DSCNotificationEndpointRegistration/","text":"New-M365DSCNotificationEndPointRegistration \u00b6 Description \u00b6 This function attempts to register a new notification endpoint in registry. Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description Url True String Represents the Url of the endpoint to be contacted when events are detected. EventType True String Drift, Error, Warning Represents the type of events that need to be reported to the endpoint. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- New-M365DSCNotificationEndPointRegistration -Url https://contoso.com/api/ -EventType Drift","title":"New-M365DSCNotificationEndPointRegistration"},{"location":"user-guide/cmdlets/New-M365DSCReportFromConfiguration/","text":"New-M365DSCReportFromConfiguration \u00b6 Description \u00b6 This function creates a report from the specified exported configuration, either in HTML or Excel format Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description Type True String Excel, HTML, JSON The type of report that should be created: Excel or HTML. ConfigurationPath True String The path to the exported DSC configuration that the report should be created for. OutputPath True String The output path of the report. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- New-M365DSCReportFromConfiguration -Type 'HTML' -ConfigurationPath 'C:\\DSC\\ConfigName.ps1' -OutputPath 'C:\\Dsc\\M365Report.html' -------------------------- EXAMPLE 2 -------------------------- New-M365DSCReportFromConfiguration -Type 'Excel' -ConfigurationPath 'C:\\DSC\\ConfigName.ps1' -OutputPath 'C:\\Dsc\\M365Report.xlsx' -------------------------- EXAMPLE 3 -------------------------- New-M365DSCReportFromConfiguration -Type 'JSON' -ConfigurationPath 'C:\\DSC\\ConfigName.ps1' -OutputPath 'C:\\Dsc\\M365Report.json'","title":"New-M365DSCReportFromConfiguration"},{"location":"user-guide/cmdlets/Remove-M365DSCNotificationEndpointRegistration/","text":"Remove-M365DSCNotificationEndPointRegistration \u00b6 Description \u00b6 This function removes a registered notification endpoint from registry. Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description Url True String Represents the Url of the endpoint to be contacted when events are detected. EventType True String Drift, Error, Warning Represents the type of events that need to be reported to the endpoint. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Remove-M365DSCNotificationEndPointRegistration -Url https://contoso.com/api/ -EventType Drift","title":"Remove-M365DSCNotificationEndPointRegistration"},{"location":"user-guide/cmdlets/Set-M365DSCAgentCertificateConfiguration/","text":"Set-M365DSCAgentCertificateConfiguration \u00b6 Description \u00b6 This function configures the LCM with a self signed encryption certificate Output \u00b6 This function outputs information as the following type: System.String Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description KeepCertificate False SwitchParameter Specifies that the temporarily created CER file should not be deleted. ForceRenew False SwitchParameter Specifies that a new certificate should be forcefully created. GeneratePFX False SwitchParameter Specifies that a PFX export should be created for the generated certificate. Password False String Temp!P@ss123 Specifies the password for the PFX file. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Set-M365DSCAgentCertificateConfiguration -KeepCertificate -------------------------- EXAMPLE 2 -------------------------- Set-M365DSCAgentCertificateConfiguration -GeneratePFX -Password 'P@ssword123!'","title":"Set-M365DSCAgentCertificateConfiguration"},{"location":"user-guide/cmdlets/Set-M365DSCTelemetryOption/","text":"Set-M365DSCTelemetryOption \u00b6 Description \u00b6 This function configures the telemetry feature of M365DSC Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description Enabled False Boolean Enables or disables telemetry collection. InstrumentationKey False String Specifies the Instrumention Key to be used to send the telemetry to. ProjectName False String Specifies the name of the project to store the telemetry data under. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Set-M365DSCTelemetryOption -Enabled $false","title":"Set-M365DSCTelemetryOption"},{"location":"user-guide/cmdlets/Test-M365DSCAgent/","text":"Test-M365DSCAgent \u00b6 Description \u00b6 This function tests the configuration of the agent Output \u00b6 This function does not generate any output. Parameters \u00b6 This function does not have any input parameters. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Test-M365DSCAgent","title":"Test-M365DSCAgent"},{"location":"user-guide/cmdlets/Test-M365DSCDependenciesForNewVersions/","text":"Test-M365DSCDependenciesForNewVersions \u00b6 Description \u00b6 This function checks if new versions are available for the M365DSC dependencies Output \u00b6 This function does not generate any output. Parameters \u00b6 This function does not have any input parameters. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Test-M365DSCDependenciesForNewVersions","title":"Test-M365DSCDependenciesForNewVersions"},{"location":"user-guide/cmdlets/Test-M365DSCModuleValidity/","text":"Test-M365DSCModuleValidity \u00b6 Description \u00b6 This function validates there are no updates to the module or it's dependencies and no multiple versions are present on the local system. Output \u00b6 This function does not generate any output. Parameters \u00b6 This function does not have any input parameters. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Test-M365DSCModuleValidity -------------------------- EXAMPLE 2 -------------------------- Test-M365DSCModuleValidity -Force","title":"Test-M365DSCModuleValidity"},{"location":"user-guide/cmdlets/Uninstall-M365DSCOutdatedDependencies/","text":"Uninstall-M365DSCOutdatedDependencies \u00b6 Description \u00b6 This function uninstalls all previous M365DSC dependencies and older versions of the module. Output \u00b6 This function does not generate any output. Parameters \u00b6 This function does not have any input parameters. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Uninstall-M365DSCOutdatedDependencies","title":"Uninstall-M365DSCOutdatedDependencies"},{"location":"user-guide/cmdlets/Update-M365DSCAllowedGraphScopes/","text":"Update-M365DSCAllowedGraphScopes \u00b6 Description \u00b6 This function updates the required permissions for the specified resources and type for the Microsoft Graph delegated application in Azure Active Directory. Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description ResourceNameList False String[] An array of resource names for which the permissions should be determined. All False SwitchParameter Specifies that the permissions should be determined for all resources. Type True String Read, Update For which action should the permissions be updated: Read or Update. Environment False String Global Global, China, USGov, USGovDoD, Germany Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Update-M365DSCAllowedGraphScopes -ResourceNameList @('AADUser', 'AADApplication') -Type 'Read' -------------------------- EXAMPLE 2 -------------------------- Update-M365DSCAllowedGraphScopes -All -Type 'Update' -Environment 'Global'","title":"Update-M365DSCAllowedGraphScopes"},{"location":"user-guide/cmdlets/Update-M365DSCAzureAdApplication/","text":"Update-M365DSCAzureAdApplication \u00b6 Description \u00b6 This function creates or updates an application in Azure AD. It assigns permissions, grants consent and creates a secret or uploads a certificate to the application. This application can then be used for Application Authentication. The provided permissions have to be as an array of hashtables, with Api=Graph, SharePoint or Exchange and PermissionsName set to a list of permissions. See examples for more information. NOTE: If consent cannot be given for whatever reason, make sure all these permissions are given Admin Consent by browsing to the App Registration in Azure AD > API Permissions and clicking the \"Grant admin consent for \" button. More information: Graph API permissions: https://docs.microsoft.com/en-us/graph/permissions-reference Exchange permissions: https://docs.microsoft.com/en-us/exchange/permissions-exo/permissions-exo Note: If you want to configure App-Only permission for Exchange, as described here: https://docs.microsoft.com/en-us/powershell/exchange/app-only-auth-powershell-v2?view=exchange-ps#step-2-assign-api-permissions-to-the-application Using the following permission will achieve exactly that: @{Api='Exchange';PermissionsName='Exchange.ManageAsApp'} Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description ApplicationName False String Microsoft365DSC Permissions True True Hashtable[] Type False String Secret Secret, Certificate MonthsValid False Int32 12 CreateNewSecret False SwitchParameter CertificatePath False String CreateSelfSignedCertificate False SwitchParameter AdminConsent False SwitchParameter Message True String Type False String Info Error, Warning, Info Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Update-M365DSCAzureAdApplication -ApplicationName 'Microsoft365DSC' -Permissions @(@{Api='SharePoint';PermissionName='Sites.FullControl.All'}) -AdminConsent -Type Secret -------------------------- EXAMPLE 2 -------------------------- Update-M365DSCAzureAdApplication -ApplicationName 'Microsoft365DSC' -Permissions @(@{Api='Graph';PermissionName='Domain.Read.All'}) -AdminConsent -Type Certificate -CreateSelfSignedCertificate -CertificatePath c:\\Temp\\M365DSC.cer -------------------------- EXAMPLE 3 -------------------------- Update-M365DSCAzureAdApplication -ApplicationName 'Microsoft365DSC' -Permissions @(@{Api='SharePoint';PermissionName='Sites.FullControl.All'},@{Api='Graph';PermissionName='Group.ReadWrite.All'},@{Api='Exchange';PermissionsName='Exchange.ManageAsApp'}) -AdminConsent -Type Certificate -CertificatePath c:\\Temp\\M365DSC.cer","title":"Update-M365DSCAzureAdApplication"},{"location":"user-guide/cmdlets/Update-M365DSCDependencies/","text":"Update-M365DSCDependencies \u00b6 Description \u00b6 This function installs all missing M365DSC dependencies Output \u00b6 This function does not generate any output. Parameters \u00b6 Parameter Required DataType Default Value Allowed Values Description Force False SwitchParameter Specifies that all dependencies should be forcefully imported again. Examples \u00b6 -------------------------- EXAMPLE 1 -------------------------- Update-M365DSCDependencies -------------------------- EXAMPLE 2 -------------------------- Update-M365DSCDependencies -Force","title":"Update-M365DSCDependencies"},{"location":"user-guide/get-started/authentication-and-permissions/","text":"Authentication Options \u00b6 Each of the required modules used by Microsoft365DSC has its own authentication possibilities. So depending on the DSC resource you are using, there are several authentication options to choose from. It is also very important to understand the authentication process of Microsoft365DSC. The solution supports connecting to the various workloads for either applying the configuration, monitoring it for configuration drifts or taking a snapshot of an existing configuration. There are two ways of authenticating to Microsoft 365: A set of credentials for a user A Service Principal by specifying parameters such as an Azure Active Directory (AD) Application ID, Tenant ID and a Secret or Certificate. Currently, each Microsoft 365 workload can support a different combination of authentication methods because of the underlying modules only supporting those methods. For example: The Security and Compliance and Microsoft Teams modules do not support authenticating using a Service Principal. The table in the next paragraph shows which workload uses which module and therefore supports which authentication method. Important : The recommendation is to use Service Principal whenever possible because: Service principals offers the most granular levels of security and do not introduce the risk of having to send high privileged credentials across the wire to authenticate. Since Desired State Configuration is an unattended process, the use of Multi Factor Authentication for user credentials is not supported by Microsoft365DSC. Note: The only exception here is creating an Export of an existing tenant. Most often this is an interactive process where the ask for a second factor is possible. Authentication Methods \u00b6 The following table provides an overview of what authentication methods are supported by which workload and what underlying module is being used to authenticate: Workload PowerShell Module Credential Service Principal Managed Identity Certificate Thumbprint Certificate Path Application Secret AzureAD * Microsoft.Graph.Authentication (Connect-MgGraph) Exchange Online ExchangeOnlineManagement (Connect-ExchangeOnline) Intune * Microsoft.Graph.Authentication (Connect-MgGraph) Office 365 * Microsoft.Graph.Authentication (Connect-MgGraph) OneDrive PnP.PowerShell (Connect-PnPOnline) Power Apps Microsoft.PowerApps. Administration.PowerShell Planner * Microsoft.Graph.Authentication (Connect-MgGraph) Security & Compliance Center ExchangeOnlineManagement (Connect-IPPSSession) SharePoint Online PnP.PowerShell (Connect-PnPOnline) Teams MicrosoftTeams (Connect-MicrosoftTeams) = Supported / = Not supported Note: As you can see, while using Credentials is the least preferred option for security reasons, it is the only option that works across most supported workloads. We are having discussions with the various product groups that are responsible for these PowerShell modules inside of Microsoft, to have better consistency across all workloads on how to authenticate. Items in the table above marked with a asterisk (*), are workloads for which the Microsoft Graph PowerShell SDK is used to authenticate against. The plan is to update the underlying logic of every component inside of Microsoft365DSC to leverage that SDK as new APIs become available on Microsoft Graph. It is possible for a configuration to use a mix of Credentials and Service Principals to authenticate against the various workloads. For example, if you decide to keep a master configuration for all the configuration of your tenant, you could have Azure AD components use the Service Principal of an app you have created to authenticate, and further down in the configuration have your Security and Compliance components use credentials. That approach is perfectly fine, but we would recommend to try and split different workloads across different (composite) configuration files. That way the configuration becomes less complex and easier to manage. It is also important to note that we have added logic inside of the commands that allow you to take a snapshot of your current tenant configuration to warn you when the components you are trying to capture can\u2019t be accessed based on the authentication model you have selected. For example: If you are trying to take a snapshot of both Azure AD and Security and Compliance components, but are authenticating using a Service Principal, the tool will warn you that the Security and Compliance components can\u2019t be captured and that they will be ignored. In this case, the resulting capture would only contain the Azure AD components because those are the only ones the tool can get access to using Service Principal. Export only exports resources that support the used authentication method Microsoft Graph Permissions \u00b6 Most components of the Microsoft365DSC solution are using the Microsoft Graph PowerShell SDK under the cover to authenticate and interact with Microsoft 365. The Graph API has two different authentication implementations: Delegated permissions : Here a username/password is used to authenticate. This option is using an AzureAD app in the background to call the Graph API (named \"Microsoft Graph PowerShell\"). However the effective permissions will be the intersection of the delegated permissions and the user privileges. By default, the Graph app has no permissions meaning it can't access anything and therefore won't work. You have to grant these permissions to the app before using them. Consent for these permissions can be given by the user himself or by an admin for all users in the tenant. For example: If your account only has permissions on three SharePoint sites, only these sites can be retrieved. Even when the AzureAD app has Sites.FullControll.All permissions granted. Using the Graph API with Delegated Permissions and the default App Registration To update the delegated permissions on the Graph app, you can use the Update-M365DSCAllowedGraphScopes cmdlet and specify the resources you are using. This will read the required permissions for those resources and update those on the Graph app. NOTE: It is possible to specify your own App registration when using Delegated permissions, but if you don't, the generic Graph app is created and used. Application permissions : Here authentication is done using app credentials (either using a secret or certificate). This option requires your own app to be registered in Azure AD . You can specify what permissions you want your app to have or even create an app for each workloads if necessary. Effective permissions will always be the granted permissions (an user context does not exist). Only admins can grant these permissions . NOTE: This is the easiest option to use. Using the Graph API with a custom application IMPORTANT : Applications with high privileges should be monitored closely. In practice there are advantages to use conditional access policies for these applications to limit access to specific sources or user accounts. Check out the links in the \"More information\" section below to learn more about creating your own Azure Active Directory application registration and granting permissions. Determine Required Permissions \u00b6 In order to be able to interact with these components, you need to grant your application or the Microsoft Graph PowerShell one the proper permissions against the Microsoft Graph scope. To determine what permission what permissions are required by a given component that uses Microsoft Graph, you can use the Get-M365DSCCompiledPermissionList cmdlet and pass in the list of parameters for which you wish to grant permissions for. Example of how to check for the required permissions Doing so will return an object with two properties. The ReadPermissions property contains a list of the minimal permissions that need to be granted for the app to be able to read information about the selected components. These are the permissions you want to grant if you are taking a snapshot of the configuration of an existing tenant. The second property, UpdatePermissions , contains the minimal permissions required to interact with and configure the selected components. You will need to grant your application these permissions if you are trying to apply a configuration onto a tenant. By default, this cmdlet outputs the permissions required for Delegated permissions. To output the Application permissions, use the PermissionsType parameter Get-M365DSCCompiledPermissionList -ResourceNameList @( 'AADUser' , 'AADApplication' ) -Source 'Graph' -PermissionsType 'Application' If you are trying to interact with all available components in Microsoft365DSC, you can get a complete picture of all permissions required across all resources by running the following line of PowerShell. Get-M365DSCCompiledPermissionList -ResourceNameList ( Get-M365DSCAllResources ) How to retrieve the Graph permissions for all resources The Get-M365DSCAllResources cmdlet will return a list of all components available inside of the Microsoft365DSC solution which will then by passed in the Get-M365DSCCompiledPermissionList cmdlet which will compile the resulting permissions needed for the list of components it receives, in occurrence all of them. These permissions need to be granted to your application instance, either using the Azure portal or automating the process via PowerShell. Providing Consent For Graph Permissions \u00b6 We provide an easy way of consenting permissions to the Delegated Permissions application \"Microsoft Graph PowerShell\" in your tenant with the Update-M365DSCAllowedGraphScopes cmdlet. This cmdlet accepts either a list of components to grant the permissions for or can grant it for all resources if the -All switch is used. You also need to specify what type of permissions, Read or Update, you wish to grant it using the -Type parameter. Consenting to requested Graph permissions Executing the cmdlet will prompt you to authenticate using an administrator account that has access to consent permissions to Azure AD applications in your environment. NOTE: If you get the error \"Device code terminal timed-out after 120 seconds\", check out the Troubleshooting section Creating a custom service principal \u00b6 As mentioned earlier in this article, there is also the possibility to use Application permissions or custom service principal to authenticate against Microsoft 365. This custom service principal can be created and configured manually, but Microsoft365DSC also offers the Update-M365DSCAzureAdApplication cmdlet. With this cmdlet, you can create the custom service application, grant the correct permissions, provide admin consent and create credentials (secret or certificate). Update-M365DSCAzureAdApplication -ApplicationName 'Microsoft365DSC' -Permissions @(@{ Api = 'SharePoint' ; PermissionName = 'Sites.FullControl.All' }) -AdminConsent -Type Secret or Update-M365DSCAzureAdApplication -ApplicationName 'Microsoft365DSC' -Permissions @(@{ Api = 'SharePoint' ; PermissionName = 'Sites.FullControl.All' }) -AdminConsent -Type Certificate -CreateSelfSignedCertificate -CertificatePath c :\\ Temp \\ M365DSC . cer SharePoint PnP PowerShell Permissions \u00b6 All SharePoint Online resources are using the SharePoint PnP PowerShell module. Just like the Graph module, you can use the default PnP PowerShell app registration or create your own app registration. Note : For more information about authentication in PnP PowerShell, check out this article. Default PnP PowerShell app registration \u00b6 Use the \" Register-PnPManagementShellAccess \" cmdlet to register this application in Azure Active Directory and grant the correct permissions. Using your own Azure AD app \u00b6 Create a new app registration in Azure AD yourself and grant the correct permissions to this app. The documentation on this website for each of the SharePoint Online resources list the permissions needed for the resource. As an alternative, you can use the \" Register-PnPAzureADApp \" cmdlet to have PnP PowerShell create the app registration for you and grant the correct permissions. Exchange Permissions \u00b6 For the Exchange Online resources, the service account needs certain permissions in order to be able to connect and manage the settings in Exchange Online. You can request the required permissions/roles and the corresponding rolegroups using the Get-M365DSCCompiledPermissionList cmdlet. To request the permissions, Get-M365DSCCompiledPermissionList -ResourceNameList @( 'EXOAcceptedDomain' ) -Source 'Exchange' How to retrieve the permissions for Exchange resources Then make sure your service account is a member of the specified Role Group or has been granted the required roles. NOTE: There are resources, like the EXOAddressList which roles by default are not granted to any of the default role groups. Make sure you grant these permissions correctly before using them. Using Authentication in DSC configurations \u00b6 See the next chapter to see how to use the Authentication options in DSC configurations More information \u00b6 Authentication and authorization basics for Microsoft Graph Microsoft Graph permissions reference Quickstart: Register an application with the Microsoft identity platform Register an application with Azure AD and create a service principal Grant tenant-wide admin consent to an application API permissions","title":"Authentication and Permissions"},{"location":"user-guide/get-started/authentication-examples/","text":"When you have decided which authentication method to use and made sure all prerequisites (created an application registration and granted/consented permissions) are in place, you are ready to use the authentication method in a DSC configuration. This chapter shows examples of each of the Authentication Methods. Example 1: Credentials \u00b6 This method is using credentials (username / password combination) for authentication and requires that the used credential is NOT configured to use Multi-Factor Authentication! When using credentials you have to specify a PSCredential object in the Credential parameter. The PSCredential object contains the username and password for the user that you want to connect with. Configuration CredentialsExample { param ( [ Parameter ( Mandatory = $true )] [PSCredential] $credsGlobalAdmin ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSite 'SiteWithCredentials' { Url = \"https://contoso.sharepoint.com/sites/credentialssite\" Owner = \"admin@contoso.onmicrosoft.com\" Title = \"TestSite\" Template = \"STS#3\" TimeZoneId = 13 Ensure = \"Present\" Credential = $credsGlobalAdmin } } } NOTE: It is possible to use Conditional Access to restrict the locations from where this account is able to log into Microsoft 365. See here for more information on Conditional Access . Example 2: Service Principal with Application Secret \u00b6 This method is using a service principal with an application secret for authentication. In this case you have to specify the Application ID (found on the Application Registration page in the Azure Admin Portal), the Tenant ID ( .onmicrosoft.com of your tenant) and application secret (generated value when creating a new secrets on the Application Registration page in the Azure Admin Portal). Configuration ApplicationSecretExample { param ( [ Parameter ( Mandatory = $true )] [System.String] $ApplicationId , [ Parameter ( Mandatory = $true )] [System.String] $TenantId , [ Parameter ( Mandatory = $true )] [System.String] $ApplicationSecret ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSite 'SiteWithApplicationSecret' { Url = \"https://contoso.sharepoint.com/sites/applicationsecretsite\" Owner = \"admin@contoso.onmicrosoft.com\" Title = \"TestSite\" Template = \"STS#3\" TimeZoneId = 13 Ensure = \"Present\" ApplicationId = $ApplicationId TenantId = $TenantId ApplicationSecret = $ApplicationSecret } } } Example 3: Service Principal with Certificate Thumbprint \u00b6 This method is using a service principal with a certificate thumbprint for authentication and requires that the used certificate is already imported into the local computer certificate store! With this method you have to specify the Application ID (found on the Application Registration page in the Azure Admin Portal), the Tenant ID ( .onmicrosoft.com of your tenant) and the tumbprint of the certificate you added to the certificates page of the Application Registration in the Azure Admin Portal. Configuration CertificateThumbprintExample { param ( [ Parameter ( Mandatory = $true )] [System.String] $ApplicationId , [ Parameter ( Mandatory = $true )] [System.String] $TenantId , [ Parameter ( Mandatory = $true )] [System.String] $CertificateThumbprint ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSite 'SiteWithCertificateThumbprint' { Url = \"https://contoso.sharepoint.com/sites/certificatethumbprintsite\" Owner = \"admin@contoso.onmicrosoft.com\" Title = \"TestSite\" Template = \"STS#3\" TimeZoneId = 13 Ensure = \"Present\" ApplicationId = $ApplicationId TenantId = $TenantId CertificateThumbprint = $CertificateThumbprint } } } Example 4: Service Principal with Certificate PFX file \u00b6 This method is using a service principal with a certificate PFX file and file password for authentication. To use this method you need to have an export of the certificate that was added to the certificates page of the Application Registration in the Azure Admin Portal. Then you have to specify the Application ID (found on the Application Registration page in the Azure Admin Portal), the Tenant ID ( .onmicrosoft.com of your tenant), the path of the PFX file and the password of this PFX file. Configuration CertificatePathExample { param ( [ Parameter ( Mandatory = $true )] [System.String] $ApplicationId , [ Parameter ( Mandatory = $true )] [System.String] $TenantId , [ Parameter ( Mandatory = $true )] [System.String] $CertificatePath , [ Parameter ( Mandatory = $true )] [PSCredential] $CertificatePassword ) Import-DscResource -ModuleName Microsoft365DSC node localhost { SPOSite 'SiteWithCertificatePathAndPassword' { Url = \"https://contoso.sharepoint.com/sites/certificatepathsite\" Owner = \"admin@contoso.onmicrosoft.com\" Title = \"TestSite\" Template = \"STS#3\" TimeZoneId = 13 Ensure = \"Present\" ApplicationId = $ApplicationId TenantId = $TenantId CertificatePath = $CertificatePath CertificatePassword = $CertificatePassword } } }","title":"Authentication Examples"},{"location":"user-guide/get-started/cloning-tenants/","text":"This feature of Microsoft365DSC is not a true standalone feature. It is a combination of existing features to unlock a new scenario for users. Clone = Export/Deploy \u00b6 Since Microsoft365DSC is able to take a snapshot of any Microsoft 365 tenant and can deploy a Microsoft365DSC configuration onto any tenant, we can easily clone the configuration of any tenant over another one (or another set of tenants). When you take a snapshot of an existing tenant, the extracted configuration file doesn\u2019t contain any information that is specific to the source tenant. It abstracts it all into variables, which make the configuration generic instead of unique for a particular tenant. It is then at compilation time that you provide information about the environment onto which this configuration will be applied to. Flow of the clone process For example: Let's assume you are trying to clone the configuration of Tenant A onto Tenant B. You would start by capturing the existing configuration of tenant A using credentials or a Service Principal that exists and has rights on Tenant A. This will generate the configuration file containing all the configuration settings for Tenant A. Then at compilation time, when trying to compile the extracted configuration into a MOF file, you will need to provide credentials or a Service Principal that has access to Tenant B. Then all that is left to do is to deploy the configuration onto Tenant B to have all the configurations settings from tenant A applied onto it. Full example script for cloning one resource \u00b6 IMPORTANT: The specified credential should NOT have Multi-Factor Authentication enabled!! Install-Module Microsoft365Dsc Update-M365DSCDependencies $SourceCredential = Get-Credential Update-M365DSCAllowedGraphScopes -ResourceNameList @( \"AADGroupsNamingPolicy\" ) -Type Read Export-M365DSCConfiguration -Components @( \"AADGroupsNamingPolicy\" ) -Credential $SourceCredential -Path C :\\ Dsc $TargetCredential = Get-Credential Update-M365DSCAllowedGraphScopes -ResourceNameList @( \"AADGroupsNamingPolicy\" ) -Type Update C :\\ Dsc \\ M365TenantConfig . ps1 -Credential $TargetCredential Start-DscConfiguration -Path C :\\ Dsc -Wait -Verbose","title":"Cloning Tenant Configurations"},{"location":"user-guide/get-started/comparing-configurations/","text":"The Microsoft365DSC solution has a built-in engine to compare configurations and generate a delta report in HTML that shows the discrepancies between the two. You can either use it to compare the configuration between 2 files or you can use it to compare a configuration against another tenant and see how it defers from that tenant\u2019s current configuration. Comparing 2 Configuration Files \u00b6 Using the New-M365DSCDeltaReport cmdlet, you can specify the two configuration files you wish to compare using the -Source and -Destination parameters. You then need to specify where you wish to store the resulting HTML report using the -OutputPath parameter. Consider the following example, where we have taken two configuration snapshots of a tenant over a period of 6 months apart. The goal is to determine what configuration settings have changed over that period of time. Using the New-M365DSCDeltaReport cmdlet, we can easily compare the two and generate a delta report as shown in the image below. Generating a Delta Report of two configurations We can also decide to customize the generated report by injecting custom HTML into its header. To do so, simply specify the location of the HTML file to inject in the header of the report using the -HeaderFilePath parameter. The example shown in the following picture shows how to add your customer header to a delta report. Generating a Delta Report of two configurations with a custom header Comparing a Configuration Against Another Tenant \u00b6 Using Microsoft365DSC, you can compare any configuration file against the current configuration of any other given Microsoft 365 tenant. This can be very useful in comparing the configuration between two tenants in scenarios like mergers and acquisitions. For example, let\u2019s assume you are trying to compare the configuration of Tenant A with the one from Tenant B. You can start by taking a snapshot of both tenants, and then use this feature to compare it against the configuration of Tenant B using the New-M365DSCDeltaReport cmdlet.","title":"Comparing Configurations"},{"location":"user-guide/get-started/deploying-configurations/","text":"This section explains how you can take a Microsoft365DSC configuration file you have written (or captured using the snapshot feature) and apply the settings it defines onto a Microsoft 365 tenant. It is very important to understand that at this stage, we are using PowerShell Desired State (DSC) out-of-the-box and that the process of applying a DSC configuration is not something specific to Microsoft365DSC. Creating your own DSC Configuration \u00b6 Microsoft365DSC is build on top of the PowerShell Desired State Configuration framework. Before you get started with Microsoft365DSC, it is therefore important to know the basics and best practices of PowerShell Desired State Configuration (DSC). Here a small introduction into PowerShell DSC: PowerShell DSC is a declarative approach for configuring servers and environments. It is based on the Open Management Infrastructure (implemented in Windows as WMI). PowerShell offers a way to declare a desired state in PowerShell syntax, compile this to a so called MOF file and publish that to a target machine. On that target machine the Local Configuration Manager will to the heavy lifting and make sure you server gets into the desired state , it is detected when the server deviates from the desired state or even automatically corrected back to the desired state . By default PowerShell offers several resources out-of-the-box, but these can be extended by installing modules like Microsoft365DSC. To create and deploy your own Desired State: You create a DSC Configuration You compile your PowerShell configuration to a MOF file (see paragraph below ) Last you apply the MOF file to your target server (see paragraph below ) We highly recommend that you watch the \"Getting Started with PowerShell Desired State Configuration\" training on Microsoft Learn. For more information and more advanced topics, please make sure you review the following articles: Add Parameters to a Configuration Separating configuration and environment data Using configuration data in DSC Want to secure credentials in Windows PowerShell Desired State Configuration? Securing the MOF File Securing your Compiled Configuration (Next chapter in this guide) Compiling and Validating the Configuration \u00b6 The first step in trying to deploy a DSC configuration is to compile the configuration file into what is called a Managed Object Format (MOF) file. To do so, simply execute the .ps1 file that contains your configuration. The process of compiling your configuration will also perform some level of validation on the configuration such as ensuring that every component defined in the file has all of their mandatory parameters defined and that there are no typos in components or property names. If the compilation process is successful, you should see a mention that the .mof file was created. This file gets created in the same location where your configuration file is located by default and will create a new folder based on the name of the configuration object defined within your file. Running a configuration compilation Created configuration folder Created MOF file Deploying the Configuration \u00b6 To initiate the deployment of a MOF file onto a Microsoft 365 tenant, you need to use the out-of-the-box cmdlet provided by PowerShell DSC named Start-DSCConfiguration . By default, this cmdlet will execute as a background job. If you wish to monitor the execution of the process, you need to use the -Wait switch, which will make the process synchronous. We also recommend using the -Verbose switch with the command to get additional details on the progression of the process. The cmdlet takes in the path to the folder that contains the compiled .MOF file. For example: Start-DSCConfiguration -Path C :\\ DemoM365DSC \\ M365TenantConfig -Wait -Verbose -Force Executing the cmdlet will automatically authenticate against the affected workload using the authentication parameters provided at compilation time and will apply the configuration settings defined in the file. Initiating a MOF deployment It is normal for this process to take several minutes if not hours to complete, based on how many components are defined in your configuration. It is important to understand that once the configuration completes its deployment, this will configure the PowerShell DSC engine on the current system to perform frequent checks against your Microsoft 365 tenant to check for configuration drifts. By default, the engine will wake up every 15 minutes (minimum value possible). For more details on how to configure this, please refer to Configuring the Local Configuration Manager . If you simply want to apply the configuration on the tenant as a one off and prevent the system form doing frequent checks for configuration drifts, you can remove the configuration you have applied from memory by running the following PowerShell commands: Stop-DSCConfiguration -Force Remove-DSCConfigurationDocument -Stage Current ) Stopping a DSC configuration deployment","title":"Deploying Configurations"},{"location":"user-guide/get-started/generating-reports/","text":"Microsoft365DSC makes it very easy to generate user friendly reports from any configuration, whether you wrote it yourself or generated it using the configuration snapshot feature. The solution allows you to generate HTML, Excel and JSON reports from existing files. NOTE: To generate and Excel reports, you need to have Office installed on the machine that you are trying to generate the report from. Generate Report \u00b6 To generate reports, simply use the New-M365DSCReportFromConfiguration cmdlet and specify what type of report you want using the Type parameter (specify HTML, Excel or JSON). The cmdlet also requires you to specify the full path to the .ps1 configuration file you want to generate the report from using the -ConfigurationPath parameter and specify where you wish to store the generated report using the -OutputPath parameter. Excel Report \u00b6 Trying to generate an Excel report from a configuration will automatically launch the Excel client as part of the process. Users will see data being loaded progressively into it and once the generation processes has finished, columns will automatically be resized to fit the content. The report will also automatically put the key mandatory parameter (e.g. primary key) of each resource in bold and do some styling of the output. Generating an Excel report HTML Report \u00b6 Generating an HTML report will generate a different result. It will create the report file at the location specified by the OutputPath parameter, but it won\u2019t actually launch the report in a browser. The New-M365DSCReportFromConfiguration cmdlet, when used for HTML reports, will also return the raw HTML content of the report as seen in the image below. Generating an HTML report Example of HTML report","title":"Generating Reports from Configurations"},{"location":"user-guide/get-started/how-to-install/","text":"While the source code of the solution is open-sourced on GitHub , the releases of the solutions are being published to the PowerShell Gallery . This means that the tool can be installed onto any machine by running the following PowerShell command: Install-Module Microsoft365DSC -Force Installing Microsoft365DSC Executing this command can take a minute or two to complete, after which the base Microsoft365DSC module has been installed. NOTE: Make sure you run the above command in an elevated PowerShell window. In a regular window the module will be installed in the Current User scope, which will not work! Dependencies \u00b6 However, Microsoft365DSC depends on several other modules to function properly. For example, it uses the MSCloudLoginAssistant module to delegate all authentication logic to the various workloads, it leverages a dozen Microsoft Graph PowerShell modules to interact with various configuration settings, etc. Current versions of Microsoft365DSC no longer download all the required prerequisites by default. When you install the Microsoft365DSC, you only get the core component after which you have to download all prerequisite modules as well. It is our recommendation that you run the following command to update all dependencies on the system after installing the module: Update-M365DSCDependencies Installing Microsoft365DSC Dependencies Running the above command will automatically read the list of dependencies from the [Module Root]/Dependencies/Manifest.psd1 file, check to see if the proper version of these modules are installed on the machine, and (if not) automatically download them from the PowerShell Gallery and install on the local computer. Depending on your configuration and the version of PowerShell you are using, the installed modules may be put in different locations. The process of installing a PowerShell module from the PowerShell Gallery really just comes down to downloading the files from the gallery as a zip, extracting them and copying to a location on the system that is associated with PowerShell via environment variables. The following command will allow you to view the version of any given PowerShell module on a system along with its associated version: Get-Module Microsoft365DSC -ListAvailable | select ModuleBase , Version Viewing Installed Microsoft365DSC module Updating To A Newer Version \u00b6 To update an older version of Microsoft365DSC, use the Update-Module cmdlet and run the Update-M365DSCDependencies cmdlet again to update any dependencies. Update-Module Microsoft365DSC Update-M365DSCDependencies More Information \u00b6 More information about installing modules: Installing a PowerShell module Find-Module cmdlet Install-Module cmdlet Update-Module cmdlet Save-Module cmdlet About PSModulePath","title":"How to Install"},{"location":"user-guide/get-started/integrating-with-azure-devops/","text":"Microsoft365DSC takes all its sense when used as part of DevOps processes within the enterprise. You can use it to automate your Microsoft 365 Change Management process so that any requested configuration changes to tenants get tracked via systems like Azure DevOps or GitHub and use them to automate the deployment of your changes across your various tenants when a change is approved. Flow of managing Microsoft 365 using Microsoft365DSC and Azure DevOps While this article doesn\u2019t cover the process of integrating Microsoft365DSC with these systems, our team has written a great whitepaper to help you get started with integrating Microsoft365DSC with Azure DevOps.","title":"Integrating with Azure DevOps"},{"location":"user-guide/get-started/introduction/","text":"This article is a complete guide to installing, deploying and using Microsoft365DSC. Microsoft365DSC is an open-source solution that is available for free on GitHub . It is led by Microsoft engineers and maintained by the community. Official documentation for the solution is available on the official Microsoft365DSC site . Microsoft365DSC is the declarative form of a Microsoft 365 tenant configuration. It is to Microsoft 365 what Azure Resource Manager templates (ARM) are to Azure. It allows you to represent the configuration of your tenant in code (Configuration-as-Code) leveraging PowerShell Desired State Configuration (DSC) . Use it to automatically configure your Microsoft tenants in the described state, take snapshots of existing tenants into DSC declarative code, generate reports out of those snapshots, continuously monitor all your Microsoft 365 tenants for configuration drifts and be alerted when drifts are detected, clone the configuration of an existing tenant onto another and compare the configuration between one or multiple tenants. Topics \u00b6 Prerequisites Authentication and Permissions How to Install Taking a Snapshot of Existing Tenant Deploying Configurations Securing your Compiled Configuration Monitoring for Configuration Drifts Cloning Tenant's Configuration Generating Reports from Configurations Comparing Configurations Integrating with Azure DevOPS Support Telemetry","title":"Introduction"},{"location":"user-guide/get-started/monitoring-drifts/","text":"Once a configuration has been applied to a Microsoft 365 tenant using Microsoft365DSC, the local system will perform regular checks to analyze the configuration of the remote tenant against what its desired state should be and detect any configuration drifts. This feature comes from PowerShell DSC out-of-the-box and is not something specific to Microsoft365DSC. By default the DSC engine on the system where the configuration was applied from will check for configuration drifts every 15 minutes. Microsoft365DSC Event log \u00b6 If a drift in configuration is detected, Microsoft365DSC will log it in Event Viewer on the machine. Detected drifts will get logged under the M365DSC log journal in Event Viewer. Microsoft365DSC provide very detailed entries in event viewer that help you identify exactly in what component a drift was detected as well as what property was detected to have drifted. Example of event in the M365DSC event log Configuration Mode \u00b6 Just like for any DSC module, you can also configure the DSC engine to automatically attempt to automatically fix detected drift and bring the tenant back into its desired state ( ApplyAndAutocorrect ). This is referred to as the DSC Configuration Mode. To learn more about how you can configure the DSC engine to automatically fix detected drift, please refer to Configuring the Local Configuration Manager . Local Configuration Manager Configuration Mode","title":"Monitoring for Configuration Drifts"},{"location":"user-guide/get-started/prerequisites/","text":"Technical requirements \u00b6 For Microsoft365DSC to function, you need to arrange the following components: PowerShell version \u00b6 Microsoft365DSC is supported for PowerShell version 5.1 and 7.1. Support for newer versions of PowerShell is not yet offered since these have now decoupled the DSC engine into its own separate module and require additional work from the team. It is however on the roadmap as a priority item for the later part of Calendar Year of 2022. Tooling \u00b6 To get the best experience running Microsoft365DSC cmdlets, it is recommended that you use the Windows Terminal . All screenshots provided in this article are using the Windows Terminal. This tool allows you to quickly switch between PowerShell versions and provide better support for icons and symbols that are used throughout Microsoft365DSC\u2019s experience. Permissions \u00b6 In order to connect to Microsoft 365, you need to make sure you have valid credentials (user or application credentials) with the correct permissions to the Microsoft 365 service. Microsoft365DSC offers several methods of authentication, depending on the used resources. Unfortunately, we are depending on the supported authentication methods used by the various PowerShell modules that are used. Make sure you review the Authentication and Permissions article for more information on the available authentication methods and how to configure all required permissions. Experience and skills \u00b6 Before you start using Microsoft365DSC, it is important that you also have the proper experience and skills on administering Microsoft 365. Microsoft365DSC is a powerful solution that can greatly streamline Microsoft 365 administration. But with great power comes great responsibility: If you don't know what exactly you are doing, using Microsoft365DSC you can also cause some serious damage. That is why it is important that you have the correct experience and skills. To use this module properly you should be very familiar with: Microsoft 365 administration across all services / workloads (Windows) PowerShell PowerShell Desired State Configuration Authentication methods and permission management in Azure Active Directory Additionally it can be helpful, depending on the planned use of Microsoft365DSC, to have a good understanding of: Azure DevOps Azure Automation Training resources \u00b6 You can review the following training resources and certifications, for learning more about the above topics: PowerShell Desired State Configuration \u00b6 Get started with Desired State Configuration for Windows Separating configuration and environment data Video series: \"Getting Started with PowerShell Desired State Configuration\" Microsoft 365 Administration \u00b6 About the Microsoft 365 admin center Overview of the Microsoft 365 admin center About admin roles Video: Get an overview of the Microsoft 365 admin center Recommended Certification \u00b6 Microsoft 365 Certified: Fundamentals (MS-900) Microsoft 365 Certified: Enterprise Administrator Expert (MS-100 & MS-101)","title":"Prerequisites"},{"location":"user-guide/get-started/securing-configurations/","text":"In the case where you are using credentials to authenticate to your tenant, you will be prompted to provide credentials at compilation time for your configuration. By default, these credentials will be stored as plain text in the resulting MOF file, which is a big security concern. Example of a MOF file with password in plain text Creating an encryption certificate \u00b6 To remediate to this, PowerShell DSC lets us use an encryption certificate to encrypt information about credentials in the MOF files . To make this process easier for users, Microsoft365DSC defines a function named Set-M365DSCAgentCertificateConfiguration which will automatically generate an encryption certificate and configure the PowerShell DSC engine on the system to use it for encrypting the MOF files. The cmdlet will return the Thumbprint for the newly generated certificate. Example of cmdlet to generate LCM certificate You can also have the cmdlet generate the private key for the certificate by using the -GeneratePFX switch and specifying a password with the -Password parameter. This will require you to also specify the -ForceRenew parameter so that a brand new certificate gets emitted. Export LCM certificate to a PFX file Using certificates in the configuration \u00b6 Once the certificate has been configured every time you do a snapshot of an existing tenant\u2019s configuration, a new M365DSC.cer certificate file will be stored in the same repository as the configuration files. The ConfigurationData.psd1 will also contain a new entry under the localhost node that will point to this certificate, effectively telling DSC to use this file to encrypt credentials when compiling. Example of Configuration Data with encryption certificate specified If you compile your configuration using the new certificate and take a look at your MOF file, you should see that the password for the credential object was successfully encrypted and is no longer stored in plaintext. Example of MOF file with encrypted password","title":"Securing your Compiled Configuration"},{"location":"user-guide/get-started/snapshot-of-existing-tenant/","text":"The first thing that most folks using Microsoft365DSC will want to do, is take a snapshot of an existing tenant they have access to and that they are familiar with. As soon as you install the Microsoft365DSC module on a system, it will automatically get access to run the Export-M365DSCConfiguration PowerShell cmdlet, which is the main command for initiating a snapshot of an existing configuration. In previous versions of the module, simply running the above cmdlet would automatically launch a Graphical User Interface that would allow you to pick and choose the components you wanted to capture the configuration for as part of your snapshot and initiate the capture process. Current versions of the module have moved to an unattended process by default, meaning that running the cmdlet will expect additional parameters by default and will then attempt to initiate the snapshot process automatically without further human interaction. Initiating the snapshot process via the Export-M365DSCConfiguration cmdlet will begin by authenticating against all required workloads. The first thing it will do is compile a list of all components it is about to capture and figure out what workload they are part of. Then it will automatically authenticated against each one using the authentication parameters provided. Web Based User Interface \u00b6 While the default process has changed with recent versions of the module, you can still use a newly revamped, web-based User Interface to help you build the PowerShell command to execute based on the components you wish to capture. To launch this new web interface, simply use the -LaunchWebUI switch when calling the Export-M365DSCConfiguration cmdlet. This will automatically launch a new web browser interface and navigate you to https://export.microsoft365dsc.com The Microsoft365DSC Export generator On the web page, simply select the components you want to export and click on the Generate button at the top right. This will open a new prompt that will allow you to copy the PowerShell command you need to run to capture a snapshot of the selected components via Microsoft365DSC. Simply copy this command and paste it in your PowerShell console to initiate the capture process. Example of a generated Export command Unattended Capture \u00b6 As mentioned above, Microsoft365DSC now defaults to an unattended capture process when running the Export-M365DSCConfiguration cmdlet. To quickly get started, simply open a new PowerShell console and run the cmdlet. By default, if you don\u2019t provide any additional parameters to the cmdlet, it will try to use credentials to authenticate against the various workloads. In the case where no additional authentication parameters are provided, Microsoft365DSC will prompt you for credentials and will use those credentials to authenticate throughout the capture process. Ask for credentials Authenticate against the Microsoft 365 workloads You can always pass in the credentials as a variable, which will bypass the credential prompt and automatically initiate the export process when calling the cmdlet. E.g. $creds = Get-Credential Export-M365DSCConfiguration -Credential $creds Exporting using a Credential variable Running An Export Using Service Principal \u00b6 The same process applies if you are trying to authenticate using a Service Principal. In this case you would need to pass in the ApplicationID and TenantID parameter and decide whether to use an Application Secret or a Certificate Thumbprint. Using a service principal with an application secret Using a service principal with a certificate thumbprint It is important to understand that the resulting file that contains the captured configuration will also implement the same authentication mechanism used by the capture process. For example, if you used credentials to capture the configuration, the resulting file will contain logic to capture credentials when it gets executed and every component it generates will also implement the Credential parameter. Example of an Exported configuration with credential In comparison, if you used a Service Principal to do the export, the resulting file will implement logic to receive information about the Azure AD application instance to use and every component defined within the file will as well. Example of an Exported configuration with service principal As shown in the image above, the Service Principal field values are coming from the Configuration Data file that also get stored along the configuration file during the snapshot process. If you take a look at the folder where the resulting files were stored, you should see a file named ConfigurationData.psd1. This is where the value for the parameters above are defined. Example of the generated Configuration Data file It is also important to note, the resulting file will always contain random GUID for the name of the resources in the DSC configuration. These are random and are only used to ensure we don\u2019t have resource naming conflicts inside the configuration. They can be replaced by anything meaningful, as long as you don\u2019t have two components of the same resource type named the same across your configuration. Names are meaningless in the world of DSC and are only used as a primary key when compiling your configuration. Example of the generated names for the resources Available Parameters \u00b6 The Microsoft365DSC tenant configuration snapshot feature offers several options you can use to better control the output capture. This section provides an overview of each additional parameter that is available for the Export-M365DSCConfiguration cmdlet and how they can be used during the capture process LaunchWebUI \u00b6 As mentioned above, the moment this switch is present when calling the Export-M365DSCConfiguration cmdlet it will launch new browser window and navigate to the export user interface at https://export.microsoft365dsc.com. Export-M365DSCConfiguration -LaunchWebUI Components \u00b6 This parameter accepts an array containing the names of the components you want to capture as part of your snapshot. Omitting this parameter will default the capture process to capture all components that are part of the default components list (see parameter Mode ). Example of specifying resources to be exported ConfigurationName \u00b6 This parameter allows you to specify how the DSC configuration object, inside of the exported configuration file will be named. Example of specifying a custom configuration name Omitting to specify this parameter will result in the configuration object to be named as the file\u2019s name (e.g. M365TenantConfig). FileName \u00b6 This allows you to specify how you wish the resulting file to be named. Specify the name of the file, including the extension (e.g. .ps1). Example of specifying a custom file name Omitting to specify this parameter will name the resulting file as M365TenantConfig.ps1 Filters \u00b6 This allows you to specify a filter at the resource level to reduce the overall instances that are being extracted. As an example, if you are only interested in extracting Azure AD Groups that have their display name start with the word 'Microsoft', you could specify the following filters: $Filters = @{ AADGroup = \"startsWith(displayName, 'Microsoft')\" } Example of using Filters to export resources GenerateInfo \u00b6 This parameter allows users to specify whether or not comments should be added as part of the exported file to provide additional information about the various types of components captured. Example of specifying whether to generate additional information MaxProcesses \u00b6 There are a few components inside of Microsoft365DSC for which parallelism has been implemented as part of their snapshot process to improve speed. This parameter allows user to specify how many parallel threads should be created during the capture process. Components leveraging parallelism are: SPOPropertyBag, SPOUserProfileProperty and TeamsUser. The specified value for this parameter has to be between 1 and 100 . Instances of the components will be equally divided amongst the various threads. Example of specifying a maximum number of 17 processes Example of specifying a maximum number of 6 processes While there are advantages to implementing multithreading for the snapshot process, there are many disadvantages as well such as not being able to properly view ongoing progress inside threads and added complexity to the design of the resources. After weighting in the pros can cons of implementing this approach across all components to speed up the entire capture process, we\u2019ve opted to keep the design of the resources simpler (no use parallelism) for maintenance purposes and to ensure users have a consistent way of view progress during the snapshot process. Mode \u00b6 This parameter allows users to specify what set of components they wish to capture as part of their snapshot process. By default, Microsoft365DSC will exclude some components from the capture process either because these are likely to take a very long time to export (e.g. SPOPropertyBag) or that they are more related to data than actual configuration settings (e.g. Planner Tasks, SPOUserProfileProperty, etc.). Available modes are: Lite Default Full Omitting this parameter will default to the Default mode. To keep track of what resources are available in what mode, Microsoft365DSC defines two global variables which contain the list of resources unique to this extraction mode: $Global:DefaultComponents and $Global:FullComponents Example of the default Export modes This means that the Lite extraction mode will contain all resources with the exception of those listed in Default and Full. The Default mode will include all resources from the Lite mode, plus the SPOApp and SPOSiteDesign components, and Full will include every resource available in the project. Path \u00b6 This parameter allows you to specify the location where the resulting file will be stored. Omitting to specify this parameter will prompt the user to provide the destination path at the end of the capture process. Example of specifying a custom export path Workloads \u00b6 This parameter accepts an array containing the names of various workloads you wish to capture the components for as part of your snapshot process. Users need to specify the acronym of the workloads, which can be any of: AAD \u2013 Azure Active Directory EXO \u2013 Exchange Online O365 \u2013 Office 365 administration Intune \u2013 Intune OD \u2013 OneDrive Planner \u2013 Planner PP \u2013 Power Platform SC \u2013 Security and Compliance SPO \u2013 SharePoint Online Teams \u2013 Microsoft Teams Example of specifying an export based on workload By default, specifying a workload will only export components that are part of the default component list (see Mode ). If you want to capture every component available for a given workload, you will need to combine this parameter with -Mode Full .","title":"Taking a Snapshot of Existing Tenant"},{"location":"user-guide/get-started/support/","text":"As mentioned on the Introduction page, Microsoft365DSC is an open-source solution led by Microsoft engineers and maintained by the community. This means that it is not supported via regular Microsoft support channels. If you need help getting started, want to report a bug or request new features to be added, you will need to use the Issues section of the official GitHub repository to do so. The team is meeting on a weekly basis to review items and prioritize fixes. If you require immediate attention for a blocking issue and you have a Premier or Unified support contract with Microsoft, you can always talk to your account team to leverage hours in your contract to have a Customer Engineer assigned to expedite the process.","title":"Support"},{"location":"user-guide/get-started/telemetry/","text":"By default, Microsoft365DSC is sending telemetry back to Microsoft to help the team improve the solution in a pro-active manner. Information is all captured using Azure Application Insights. We are capturing information about what operations are being called, what any errors were encountered, used authentication types, used PowerShell version, etc. Telemetry Configuration \u00b6 Users can decide to stop sending telemetry back to Microsoft at any given point by opting out. To do so, simply run the Set-M365DSCTelemetryOption PowerShell command: Set-M365DSCTelemetryOption -Enabled $false Note : This is a per machine setting. Therefore, if you are executing Microsoft365DSC on different systems within your organization, this command will have to be executed on each system. Custom Telemetry Store \u00b6 Organizations can also decide to capture telemetry from Microsoft365DSC using their own Application Insights account (without sending any data back to Microsoft). The Set-M365DSCTelemetryOption cmdlet lets you specify what Application Insights account you wish to send telemetry back to using the -InstrumentationKey parameter. Configuring a custom telemetry store Users can also specify a custom name for their solution using the -ProjectName parameter. This will ensure that every telemetry reported back to the Application Insights account gets tagged with the project name under customDimensions.ProjectName .","title":"Telemetry"},{"location":"user-guide/get-started/troubleshooting/","text":"Troubleshooting / Known Issues \u00b6 Error \"Device code terminal timed-out after 120 seconds. Please try again.\" \u00b6 ISSUE \u00b6 When you are using Credentials and Delegated Authentication (for more info, see: Delegated Permissions ), it is possible that you receive the following error: Device code terminal timed-out after 120 seconds. Please try again. + CategoryInfo : NotSpecified: (:) [], CimException + FullyQualifiedErrorId : Microsoft.Graph.PowerShell.Authentication.Cmdlets.ConnectMgGraph + PSComputerName : localhost CAUSE \u00b6 This is caused by the fact that the delegated Graph application has not been given consent to use the assigned permissions and therefore prompts for consent. However, since the deployment process runs in a non-interactive process, you will never see this prompt. After 120 seconds it will time out and throw the above error. RESOLUTION \u00b6 This issue can be resolved by granting and consenting the correct permissions. You can do this via the Azure Admin Portal or by running using the Update-M365DSCAllowedGraphScopes cmdlet. More information about that process can be found here .","title":"Troubleshooting"}]}